{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/web/src/i18n/i18n.ts"],"sourcesContent":["/**\r\n * List of supported locales\r\n */\r\nexport const locales = ['en', 'ar', 'es', 'fr'] as const;\r\n\r\n/**\r\n * Type representing the supported locales\r\n */\r\nexport type Locale = (typeof locales)[number];\r\n\r\n/**\r\n * Default locale when no preference is detected\r\n */\r\nexport const defaultLocale: Locale = 'en';\r\n\r\n/**\r\n * Configuration for each locale\r\n */\r\nexport interface LocaleConfig {\r\n  /** Native name of the language */\r\n  nativeName: string;\r\n  /** English name of the language */\r\n  englishName: string;\r\n  /** Text direction (ltr or rtl) */\r\n  direction: 'ltr' | 'rtl';\r\n  /** Date format pattern */\r\n  dateFormat: string;\r\n  /** Flag emoji or code for the language */\r\n  flag: string;\r\n  /** HTML lang attribute value */\r\n  htmlLang: string;\r\n  /** Number formatting options */\r\n  number: {\r\n    /** Decimal separator */\r\n    decimal: string;\r\n    /** Thousands separator */\r\n    thousands: string;\r\n  };\r\n  /** Calendar system */\r\n  calendar?: 'gregory' | 'islamic';\r\n  /** Font class for language-specific typography */\r\n  fontClass?: string;\r\n}\r\n\r\n/**\r\n * Configuration for all supported locales\r\n */\r\nexport const localeConfigs: Record<Locale, LocaleConfig> = {\r\n  en: {\r\n    nativeName: 'English',\r\n    englishName: 'English',\r\n    direction: 'ltr',\r\n    dateFormat: 'MM/DD/YYYY',\r\n    flag: 'ðŸ‡ºðŸ‡¸',\r\n    htmlLang: 'en',\r\n    calendar: 'gregory',\r\n    number: {\r\n      decimal: '.',\r\n      thousands: ',',\r\n    }\r\n  },\r\n  ar: {\r\n    nativeName: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©',\r\n    englishName: 'Arabic',\r\n    direction: 'rtl',\r\n    dateFormat: 'DD/MM/YYYY',\r\n    flag: 'ðŸ‡¸ðŸ‡¦',\r\n    htmlLang: 'ar',\r\n    calendar: 'islamic',\r\n    fontClass: 'font-arabic',\r\n    number: {\r\n      decimal: 'Ù«',\r\n      thousands: 'Ù¬',\r\n    }\r\n  },\r\n  fr: {\r\n    nativeName: 'FranÃ§ais',\r\n    englishName: 'French',\r\n    direction: 'ltr',\r\n    dateFormat: 'DD/MM/YYYY',\r\n    flag: 'ðŸ‡«ðŸ‡·',\r\n    htmlLang: 'fr',\r\n    calendar: 'gregory',\r\n    number: {\r\n      decimal: ',',\r\n      thousands: ' ',\r\n    }\r\n  },\r\n  es: {\r\n    nativeName: 'EspaÃ±ol',\r\n    englishName: 'Spanish',\r\n    direction: 'ltr',\r\n    dateFormat: 'DD/MM/YYYY',\r\n    flag: 'ðŸ‡ªðŸ‡¸',\r\n    htmlLang: 'es',\r\n    calendar: 'gregory',\r\n    number: {\r\n      decimal: ',',\r\n      thousands: '.',\r\n    }\r\n  },\r\n};\r\n\r\n/**\r\n * Get configuration for a specific locale\r\n */\r\nexport function getLocaleConfig(locale: Locale | string): LocaleConfig {\r\n  return localeConfigs[locale as Locale] || localeConfigs[defaultLocale];\r\n}\r\n\r\n/**\r\n * Check if a locale is RTL\r\n */\r\nexport function isRTL(locale: Locale | string): boolean {\r\n  return getLocaleConfig(locale).direction === 'rtl';\r\n}\r\n\r\n/**\r\n * Get font class for a locale\r\n */\r\nexport function getLocaleFont(locale: Locale | string): string | undefined {\r\n  return getLocaleConfig(locale).fontClass;\r\n}\r\n\r\n/**\r\n * Get calendar system for a locale\r\n */\r\nexport function getCalendarSystem(locale: Locale | string): 'gregory' | 'islamic' {\r\n  return getLocaleConfig(locale).calendar || 'gregory';\r\n}\r\n\r\n/**\r\n * Get HTML lang attribute value for a locale\r\n */\r\nexport function getHtmlLang(locale: Locale | string): string {\r\n  return getLocaleConfig(locale).htmlLang;\r\n}\r\n\r\n/**\r\n * Get date format for a locale\r\n */\r\nexport function getDateFormat(locale: Locale | string): string {\r\n  return getLocaleConfig(locale).dateFormat;\r\n}"],"names":[],"mappings":"AAAA;;CAEC;;;;;;;;;;;AACM,MAAM,UAAU;IAAC;IAAM;IAAM;IAAM;CAAK;AAUxC,MAAM,gBAAwB;AAkC9B,MAAM,gBAA8C;IACzD,IAAI;QACF,YAAY;QACZ,aAAa;QACb,WAAW;QACX,YAAY;QACZ,MAAM;QACN,UAAU;QACV,UAAU;QACV,QAAQ;YACN,SAAS;YACT,WAAW;QACb;IACF;IACA,IAAI;QACF,YAAY;QACZ,aAAa;QACb,WAAW;QACX,YAAY;QACZ,MAAM;QACN,UAAU;QACV,UAAU;QACV,WAAW;QACX,QAAQ;YACN,SAAS;YACT,WAAW;QACb;IACF;IACA,IAAI;QACF,YAAY;QACZ,aAAa;QACb,WAAW;QACX,YAAY;QACZ,MAAM;QACN,UAAU;QACV,UAAU;QACV,QAAQ;YACN,SAAS;YACT,WAAW;QACb;IACF;IACA,IAAI;QACF,YAAY;QACZ,aAAa;QACb,WAAW;QACX,YAAY;QACZ,MAAM;QACN,UAAU;QACV,UAAU;QACV,QAAQ;YACN,SAAS;YACT,WAAW;QACb;IACF;AACF;AAKO,SAAS,gBAAgB,MAAuB;IACrD,OAAO,aAAa,CAAC,OAAiB,IAAI,aAAa,CAAC,cAAc;AACxE;AAKO,SAAS,MAAM,MAAuB;IAC3C,OAAO,gBAAgB,QAAQ,SAAS,KAAK;AAC/C;AAKO,SAAS,cAAc,MAAuB;IACnD,OAAO,gBAAgB,QAAQ,SAAS;AAC1C;AAKO,SAAS,kBAAkB,MAAuB;IACvD,OAAO,gBAAgB,QAAQ,QAAQ,IAAI;AAC7C;AAKO,SAAS,YAAY,MAAuB;IACjD,OAAO,gBAAgB,QAAQ,QAAQ;AACzC;AAKO,SAAS,cAAc,MAAuB;IACnD,OAAO,gBAAgB,QAAQ,UAAU;AAC3C"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/web/src/lib/supabase/middleware.ts"],"sourcesContent":["import { createServerClient } from \"@supabase/ssr\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\nimport type { Database } from \"@/types/database.types\";\r\n\r\nimport type { NextRequest } from \"next/server\";\r\n\r\n/**\r\n * Updates the Supabase auth session by refreshing the user's token if needed\r\n * Used by Next.js middleware\r\n */\r\nexport async function updateSession(request: NextRequest) {\r\n  let response = NextResponse.next({\r\n    request: {\r\n      headers: request.headers,\r\n    },\r\n  });\r\n\r\n  const supabase = createServerClient<Database>(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        get(name) {\r\n          return request.cookies.get(name)?.value;\r\n        },\r\n        set(name, value, options) {\r\n          // This will set a cookie on the response\r\n          request.cookies.set(name, value);\r\n          response = NextResponse.next({\r\n            request: {\r\n              headers: request.headers,\r\n            },\r\n          });\r\n          response.cookies.set(name, value, options);\r\n        },\r\n        remove(name, options) {\r\n          // This will remove a cookie from the response\r\n          request.cookies.set(name, \"\");\r\n          response = NextResponse.next({\r\n            request: {\r\n              headers: request.headers,\r\n            },\r\n          });\r\n          response.cookies.set(name, \"\", { ...options, maxAge: 0 });\r\n        },\r\n      },\r\n    }\r\n  );\r\n\r\n  // This will refresh the user's session if needed\r\n  await supabase.auth.getUser();\r\n\r\n  return response;\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAUO,eAAe,cAAc,OAAoB;IACtD,IAAI,WAAW,ySAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAC/B,SAAS;YACP,SAAS,QAAQ,OAAO;QAC1B;IACF;IAEA,MAAM,WAAW,CAAA,GAAA,2RAAA,CAAA,qBAAkB,AAAD,EAChC,QAAQ,GAAG,CAAC,wBAAwB,EACpC,QAAQ,GAAG,CAAC,6BAA6B,EACzC;QACE,SAAS;YACP,KAAI,IAAI;gBACN,OAAO,QAAQ,OAAO,CAAC,GAAG,CAAC,OAAO;YACpC;YACA,KAAI,IAAI,EAAE,KAAK,EAAE,OAAO;gBACtB,yCAAyC;gBACzC,QAAQ,OAAO,CAAC,GAAG,CAAC,MAAM;gBAC1B,WAAW,ySAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAC3B,SAAS;wBACP,SAAS,QAAQ,OAAO;oBAC1B;gBACF;gBACA,SAAS,OAAO,CAAC,GAAG,CAAC,MAAM,OAAO;YACpC;YACA,QAAO,IAAI,EAAE,OAAO;gBAClB,8CAA8C;gBAC9C,QAAQ,OAAO,CAAC,GAAG,CAAC,MAAM;gBAC1B,WAAW,ySAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAC3B,SAAS;wBACP,SAAS,QAAQ,OAAO;oBAC1B;gBACF;gBACA,SAAS,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI;oBAAE,GAAG,OAAO;oBAAE,QAAQ;gBAAE;YACzD;QACF;IACF;IAGF,iDAAiD;IACjD,MAAM,SAAS,IAAI,CAAC,OAAO;IAE3B,OAAO;AACT"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/apps/web/src/middleware.ts"],"sourcesContent":["/**\r\n * Root middleware\r\n */\r\n\r\nimport { NextRequest, NextResponse } from \"next/server\";\r\nimport createMiddleware from \"next-intl/middleware\";\r\nimport { createServerClient } from \"@supabase/ssr\";\r\nimport type { Database } from \"@/types/database.types\";\r\n\r\nimport { locales, defaultLocale } from \"@/i18n/i18n\";\r\nimport { updateSession } from \"@/lib/supabase/middleware\";\r\n\r\n// Create i18n middleware\r\nconst intlMiddleware = createMiddleware({\r\n  // A list of all locales that are supported\r\n  locales,\r\n  // Used when no locale matches\r\n  defaultLocale,\r\n  // Set the locale prefix strategy: 'always' adds locale prefixes for all routes\r\n  localePrefix: \"always\",\r\n});\r\n\r\n// Context7 - Provider Isolation: Middleware configuration with (ai-unified) routes\r\nconst AUTH_ROUTES = [\"/login\", \"/register\", \"/auth\"];\r\nconst PROTECTED_ROUTES = [\"/dashboard\", \"/admin\", \"/profile\"];\r\nconst PUBLIC_ROUTES = [\"/\", \"/about\", \"/contact\", \"/api/auth/guest\"];\r\nconst GUEST_ALLOWED_ROUTES = [\r\n  \"/chat\",\r\n  \"/ai-unified/chat\",\r\n  \"/artifacts\",\r\n  \"/ai-unified/ocr\",\r\n  \"/api/chat\",\r\n  \"/api/(ai-unified)\",\r\n  \"/api/artifacts\",\r\n  \"/api/document\",\r\n  \"/api/suggestions\",\r\n  \"/api/vote\",\r\n];\r\n\r\n// Context7 - Data-as-Code: Route mapping for legacy to unified migration\r\nconst LEGACY_ROUTE_MAPPINGS = {\r\n  \"/api/chat\": \"/api/(ai-unified)/api/chat\",\r\n  \"/chat\": \"/ai-unified/chat\",\r\n  \"/chat/new\": \"/ai-unified/chat/new\",\r\n  \"/artifacts\": \"/ai-unified/chat\", // Artifacts are part of unified chat\r\n};\r\n\r\n// Context7 - Observability: Request tracking interface\r\ninterface MiddlewareContext {\r\n  pathname: string;\r\n  isAuthRoute: boolean;\r\n  isProtectedRoute: boolean;\r\n  isPublicRoute: boolean;\r\n  isGuestAllowedRoute: boolean;\r\n  userAgent: string;\r\n  ipAddress: string;\r\n}\r\n\r\n/**\r\n * Create middleware context for observability\r\n * Context7 - Data-as-Code: Structured context creation\r\n */\r\nfunction createMiddlewareContext(request: NextRequest): MiddlewareContext {\r\n  const pathname = request.nextUrl.pathname;\r\n  const userAgent = request.headers.get(\"user-agent\") || \"\";\r\n  const forwardedFor = request.headers.get(\"x-forwarded-for\") || \"\";\r\n  const realIp = request.headers.get(\"x-real-ip\") || \"\";\r\n  const ipAddress = forwardedFor.split(\",\")[0] || realIp || \"unknown\";\r\n\r\n  return {\r\n    pathname,\r\n    isAuthRoute: AUTH_ROUTES.some((route) => pathname.startsWith(route)),\r\n    isProtectedRoute: PROTECTED_ROUTES.some((route) =>\r\n      pathname.startsWith(route)\r\n    ),\r\n    isPublicRoute: PUBLIC_ROUTES.some(\r\n      (route) => pathname === route || pathname.startsWith(route)\r\n    ),\r\n    isGuestAllowedRoute: GUEST_ALLOWED_ROUTES.some((route) =>\r\n      pathname.startsWith(route)\r\n    ),\r\n    userAgent: userAgent.substring(0, 100), // Truncate for logs\r\n    ipAddress,\r\n  };\r\n}\r\n\r\n/**\r\n * Check if user has guest session\r\n * Context7 - Provider Isolation: Guest session validation\r\n */\r\nfunction hasGuestSession(request: NextRequest): boolean {\r\n  const isGuest = request.cookies.get(\"is_guest_user\")?.value === \"true\";\r\n  const guestData = request.cookies.get(\"guest_data\")?.value;\r\n  return isGuest && !!guestData;\r\n}\r\n\r\n/**\r\n * Create Supabase client for middleware\r\n * Context7 - Provider Isolation: Middleware-specific client\r\n */\r\nfunction createMiddlewareSupabaseClient(\r\n  request: NextRequest,\r\n  response: NextResponse\r\n) {\r\n  return createServerClient<Database>(\r\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\r\n    {\r\n      cookies: {\r\n        get(name: string) {\r\n          return request.cookies.get(name)?.value;\r\n        },\r\n        set(name: string, value: string, options: any) {\r\n          response.cookies.set(name, value, options);\r\n        },\r\n        remove(name: string, options: any) {\r\n          response.cookies.set(name, \"\", { ...options, maxAge: 0 });\r\n        },\r\n      },\r\n      auth: {\r\n        persistSession: true,\r\n        autoRefreshToken: true,\r\n      },\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * Handle guest user redirect\r\n * Context7 - Modularity: Dedicated guest handling\r\n */\r\nasync function handleGuestUser(\r\n  request: NextRequest,\r\n  context: MiddlewareContext\r\n): Promise<NextResponse | null> {\r\n  // Allow guest users on guest-allowed routes\r\n  if (context.isGuestAllowedRoute || context.isPublicRoute) {\r\n    // Context7 - Observability: Log guest access\r\n    console.log(\"Guest access granted:\", {\r\n      pathname: context.pathname,\r\n      ip: context.ipAddress,\r\n    });\r\n    return null; // Continue processing\r\n  }\r\n\r\n  // Redirect guest users to guest signup for protected routes\r\n  if (context.isProtectedRoute) {\r\n    console.log(\"Guest redirected from protected route:\", {\r\n      pathname: context.pathname,\r\n      ip: context.ipAddress,\r\n    });\r\n\r\n    const redirectUrl = new URL(\"/guest-signup\", request.url);\r\n    redirectUrl.searchParams.set(\"redirect\", context.pathname);\r\n    return NextResponse.redirect(redirectUrl);\r\n  }\r\n\r\n  return null; // Continue processing\r\n}\r\n\r\n/**\r\n * Handle authenticated user\r\n * Context7 - Modularity: Authenticated user routing\r\n */\r\nasync function handleAuthenticatedUser(\r\n  request: NextRequest,\r\n  context: MiddlewareContext,\r\n  user: any\r\n): Promise<NextResponse | null> {\r\n  // Redirect authenticated users away from auth routes\r\n  if (context.isAuthRoute) {\r\n    console.log(\"Authenticated user redirected from auth route:\", {\r\n      userId: user.id,\r\n      pathname: context.pathname,\r\n    });\r\n\r\n    const redirectUrl = new URL(\"/dashboard\", request.url);\r\n    return NextResponse.redirect(redirectUrl);\r\n  }\r\n\r\n  // Check role-based access for admin routes\r\n  if (context.pathname.startsWith(\"/admin\")) {\r\n    const userRole = user.user_metadata?.role || \"client\";\r\n    if (userRole !== \"admin\") {\r\n      console.warn(\"Unauthorized admin access attempt:\", {\r\n        userId: user.id,\r\n        role: userRole,\r\n        pathname: context.pathname,\r\n      });\r\n\r\n      const redirectUrl = new URL(\"/unauthorized\", request.url);\r\n      return NextResponse.redirect(redirectUrl);\r\n    }\r\n  }\r\n\r\n  return null; // Continue processing\r\n}\r\n\r\n/**\r\n * Handle route mapping for legacy to unified migration\r\n * Context7 - Provider Isolation: Route migration strategy\r\n */\r\nfunction handleRouteMigration(request: NextRequest): NextResponse | null {\r\n  const pathname = request.nextUrl.pathname;\r\n\r\n  // Check for legacy route mappings\r\n  for (const [legacyPath, unifiedPath] of Object.entries(\r\n    LEGACY_ROUTE_MAPPINGS\r\n  )) {\r\n    if (pathname === legacyPath || pathname.startsWith(legacyPath + \"/\")) {\r\n      const newPathname = pathname.replace(legacyPath, unifiedPath);\r\n      const redirectUrl = new URL(newPathname, request.url);\r\n\r\n      // Preserve query parameters\r\n      request.nextUrl.searchParams.forEach((value, key) => {\r\n        redirectUrl.searchParams.set(key, value);\r\n      });\r\n\r\n      console.log(\"Route migration redirect:\", {\r\n        from: pathname,\r\n        to: newPathname,\r\n        preservedParams: Array.from(request.nextUrl.searchParams.keys()),\r\n      });\r\n\r\n      return NextResponse.redirect(redirectUrl, { status: 308 }); // Permanent redirect\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * Handle unauthenticated user\r\n * Context7 - Modularity: Unauthenticated user routing with unified endpoints\r\n */\r\nasync function handleUnauthenticatedUser(\r\n  request: NextRequest,\r\n  context: MiddlewareContext\r\n): Promise<NextResponse | null> {\r\n  // Allow access to public and auth routes\r\n  if (context.isPublicRoute || context.isAuthRoute) {\r\n    return null; // Continue processing\r\n  }\r\n\r\n  // Check if guest authentication is enabled for protected routes\r\n  const guestAuthEnabled =\r\n    process.env.NEXT_PUBLIC_GUEST_AUTH_ENABLED === \"true\";\r\n\r\n  if (guestAuthEnabled && context.isGuestAllowedRoute) {\r\n    // Automatically create guest session for allowed routes\r\n    console.log(\"Creating guest session for unauthenticated user:\", {\r\n      pathname: context.pathname,\r\n      ip: context.ipAddress,\r\n    });\r\n\r\n    const redirectUrl = new URL(\"/api/auth/guest\", request.url);\r\n    redirectUrl.searchParams.set(\"action\", \"create\");\r\n    redirectUrl.searchParams.set(\"redirect\", context.pathname);\r\n    return NextResponse.redirect(redirectUrl);\r\n  }\r\n\r\n  // Redirect to login for protected routes\r\n  if (context.isProtectedRoute) {\r\n    console.log(\"Unauthenticated user redirected to login:\", {\r\n      pathname: context.pathname,\r\n      ip: context.ipAddress,\r\n    });\r\n\r\n    const redirectUrl = new URL(\"/login\", request.url);\r\n    redirectUrl.searchParams.set(\"redirect\", context.pathname);\r\n    return NextResponse.redirect(redirectUrl);\r\n  }\r\n\r\n  return null; // Continue processing\r\n}\r\n\r\n/**\r\n * Main middleware function\r\n * Context7 - Unified authentication flow with observability\r\n */\r\nexport async function middleware(request: NextRequest) {\r\n  try {\r\n    // Context7 - Data-as-Code: Create structured context\r\n    const context = createMiddlewareContext(request);\r\n\r\n    // Skip middleware for static files and API routes (except auth)\r\n    if (\r\n      context.pathname.startsWith(\"/_next\") ||\r\n      context.pathname.startsWith(\"/static\") ||\r\n      context.pathname.includes(\".\") ||\r\n      (context.pathname.startsWith(\"/api\") &&\r\n        !context.pathname.startsWith(\"/api/auth\") &&\r\n        !context.pathname.startsWith(\"/api/(ai-unified)\"))\r\n    ) {\r\n      return NextResponse.next();\r\n    }\r\n\r\n    // Context7 - Provider Isolation: Handle route migration first\r\n    const migrationResponse = handleRouteMigration(request);\r\n    if (migrationResponse) {\r\n      return migrationResponse;\r\n    }\r\n\r\n    // Then handle authentication logic\r\n    let authResponse: NextResponse | null = null;\r\n\r\n    // Context7 - Provider Isolation: Check guest session first\r\n    if (hasGuestSession(request)) {\r\n      authResponse = await handleGuestUser(request, context);\r\n    } else {\r\n      // Create response for Supabase operations\r\n      const response = NextResponse.next();\r\n\r\n      // Check regular Supabase authentication\r\n      const supabase = createMiddlewareSupabaseClient(request, response);\r\n\r\n      const {\r\n        data: { user },\r\n        error,\r\n      } = await supabase.auth.getUser();\r\n\r\n      if (!error && user) {\r\n        // Handle authenticated user\r\n        authResponse = await handleAuthenticatedUser(request, context, user);\r\n      } else {\r\n        // Handle unauthenticated user\r\n        authResponse = await handleUnauthenticatedUser(request, context);\r\n      }\r\n\r\n      // Update session for Supabase\r\n      if (!authResponse) {\r\n        authResponse = await updateSession(request);\r\n      }\r\n    }\r\n\r\n    // If auth handling returned a response (redirect), use it\r\n    if (authResponse) {\r\n      return authResponse;\r\n    }\r\n\r\n    // Context7 - Observability: Log successful requests\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      console.log(\"Middleware completed:\", {\r\n        pathname: context.pathname,\r\n        ip: context.ipAddress,\r\n        hasGuest: hasGuestSession(request),\r\n      });\r\n    }\r\n\r\n    // Apply i18n middleware for routes that don't need auth redirects\r\n    return intlMiddleware(request);\r\n  } catch (error) {\r\n    // Context7 - Observability: Error tracking\r\n    console.error(\"Middleware error:\", error);\r\n\r\n    // In case of auth errors, apply i18n middleware\r\n    return intlMiddleware(request);\r\n  }\r\n}\r\n\r\n// Context7 - Configuration: Middleware matcher\r\nexport const config = {\r\n  matcher: [\r\n    /*\r\n     * Match all request paths except for the ones starting with:\r\n     * - _next/static (static files)\r\n     * - _next/image (image optimization files)\r\n     * - favicon.ico (favicon file)\r\n     * - public files (public folder)\r\n     */\r\n    \"/((?!_next/static|_next/image|favicon.ico|public|.*\\\\.png$|.*\\\\.jpg$|.*\\\\.jpeg$|.*\\\\.gif$|.*\\\\.svg$|.*\\\\.ico$).*)\",\r\n  ],\r\n};\r\n"],"names":[],"mappings":"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"}}]
}