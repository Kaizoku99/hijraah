{"version":3,"file":"27.js","mappings":"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AAiBA,CAAAA,WAChB,UAACC,EAAAA,EAAgBA,CAAAA,CAACtB,OAAO,aACvB,WAACE,IAAIA,CAACC,KAAK,WAAWqB,YAAU,gBAA3BtB,IACH,UAACuB,EAAAA,CAAUA,CAAAA,CAACtJ,UAAU,iBAAiB,eAI3C,UAACmJ,EAAAA,EAAgBA,CAAAA,CAACtB,OAAO,aACvB,WAACE,IAAIA,CAACC,KAAK,8BACT,SADGD,CACFwB,EAAAA,CAAUA,CAAAA,CAACvJ,UAAU,iBAAiB,eAI3C,UAACmJ,EAAAA,EAAgBA,CAAAA,CAACtB,OAAO,aACvB,WAACE,IAAIA,CAACC,KAAK,uCAAND,CACH,UAACyB,EAAAA,CAAIA,CAAAA,CAACxJ,UAAU,iBAAiB,wBAKvC,UAACiJ,EAAAA,EAAqBA,CAAAA,CAAAA,GACtB,WAACE,EAAAA,EAAgBA,CAAAA,CAACM,QAAStB,YACzB,UAACuB,EAAAA,CAAMA,CAAAA,CAAC1J,UAAU,iBAAiB,sBAQjD,sZC/FA,IAAM2G,EAEF,CACFgD,QAAS,CACP,CACEC,SAAU,YACVC,IAAK,aACLC,MAAO,CACL,CACEF,SAAU,WACVC,IAAK,YACP,EACA,CACED,SAAU,QACVC,IAAK,kBACP,EACD,EAEH,CACED,SAAU,iBACVC,IAAK,mBACLC,MAAO,CACL,CACEF,SAAU,WACVC,IAAK,kBACP,EACA,CACED,SAAU,UACVC,IAAK,sBACP,EACA,CACED,SAAU,gBACVC,IAAK,gCACP,EACA,CACED,SAAU,gBACVC,IAAK,4BACP,EACA,CACED,SAAU,UACVC,IAAK,0BACP,EACD,EAEH,CACED,SAAU,sBACVC,IAAK,IACLC,MAAO,CACL,CACEF,SAAU,mBACVC,IAAK,iBACP,EACA,CACED,SAAU,cACVC,IAAK,wBACP,EACA,CACED,SAAU,YACVC,IAAK,qBACP,EACA,CACED,SAAU,cACVC,IAAK,uBACP,EACA,CACED,SAAU,oBACVC,IAAK,kBACP,EACA,CACED,SAAU,sBACVC,IAAK,oBACP,EAEJ,EACA,CACED,SAAU,YACVC,IAAK,aACLC,MAAO,CACL,CACEF,SAA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","sources":["webpack://@hijraah/web/./src/components/ui/user-avatar.tsx","webpack://@hijraah/web/./src/components/ui/use-toast.tsx","webpack://@hijraah/web/./src/lib/supabase/client.ts","webpack://@hijraah/web/./src/lib/actions/admin.ts","webpack://@hijraah/web/./src/components/ui/nav-user.tsx","webpack://@hijraah/web/./src/components/ui/app-sidebar.tsx","webpack://@hijraah/web/./src/hooks/useChat.ts","webpack://@hijraah/web/?18a6","webpack://@hijraah/web/./src/hooks/useIsAdmin.ts","webpack://@hijraah/web/../../node_modules/.pnpm/@supabase+realtime-js@2.11.10_bufferutil@4.0.9/node_modules/@supabase/realtime-js/dist/main/ sync?97f4","webpack://@hijraah/web/./src/hooks/use-client-locale.ts","webpack://@hijraah/web/./src/lib/avatar-utils.ts"],"sourcesContent":["\"use client\";\r\n\r\nimport { User } from 'lucide-react';\r\nimport React from 'react';\r\n\r\nimport { Avatar, AvatarFallback, AvatarImage } from '@/ui/avatar';\r\n\r\nexport interface UserAvatarProps {\r\n    user?: {\r\n        name?: string;\r\n        email?: string;\r\n        avatar?: string;\r\n    };\r\n    className?: string;\r\n    fallbackClassName?: string;\r\n    size?: 'sm' | 'md' | 'lg' | 'xl';\r\n    shape?: 'circle' | 'square';\r\n}\r\n\r\n/**\r\n * A component that displays a user's avatar with proper fallbacks\r\n * If no avatar is provided, it shows initials or a default user icon\r\n */\r\nexport function UserAvatar({\r\n    user,\r\n    className = '',\r\n    fallbackClassName = '',\r\n    size = 'md',\r\n    shape = 'circle'\r\n}: UserAvatarProps) {\r\n    // Size classes\r\n    const sizeClasses = {\r\n        sm: 'h-8 w-8',\r\n        md: 'h-10 w-10',\r\n        lg: 'h-16 w-16',\r\n        xl: 'h-24 w-24',\r\n    };\r\n\r\n    // Shape classes\r\n    const shapeClasses = {\r\n        circle: 'rounded-full',\r\n        square: 'rounded-lg',\r\n    };\r\n\r\n    // Get user initials for fallback\r\n    const getInitials = () => {\r\n        if (!user?.name) return '?';\r\n\r\n        return user.name\r\n            .split(' ')\r\n            .map(part => part[0])\r\n            .slice(0, 2)\r\n            .join('')\r\n            .toUpperCase();\r\n    };\r\n\r\n    return (\r\n        <Avatar\r\n            className={`${sizeClasses[size]} ${shapeClasses[shape]} ${className}`}\r\n        >\r\n            {user?.avatar ? (\r\n                <AvatarImage\r\n                    src={user.avatar}\r\n                    alt={user?.name || 'User Avatar'}\r\n                    onError={(e) => {\r\n                        console.warn('Avatar image failed to load:', e);\r\n                        // Let fallback display when image fails\r\n                        (e.target as HTMLImageElement).style.display = 'none';\r\n                    }}\r\n                />\r\n            ) : null}\r\n\r\n            <AvatarFallback className={`${shapeClasses[shape]} ${fallbackClassName}`}>\r\n                {user?.name ? getInitials() : <User className=\"h-5 w-5\" />}\r\n            </AvatarFallback>\r\n        </Avatar>\r\n    );\r\n} ","// Copied and adapted from shadcn/ui toast component\r\n// https://ui.shadcn.com/docs/components/toast\r\n\r\nimport * as React from \"react\"\r\n\r\nimport {\r\n    type ToastActionElement,\r\n    type ToastProps,\r\n} from \"./toast\"\r\n\r\nconst TOAST_LIMIT = 5\r\nconst TOAST_REMOVE_DELAY = 1000000\r\n\r\ntype ToasterToast = ToastProps & {\r\n    id: string\r\n    title?: React.ReactNode\r\n    description?: React.ReactNode\r\n    action?: ToastActionElement\r\n}\r\n\r\nconst actionTypes = {\r\n    ADD_TOAST: \"ADD_TOAST\",\r\n    UPDATE_TOAST: \"UPDATE_TOAST\",\r\n    DISMISS_TOAST: \"DISMISS_TOAST\",\r\n    REMOVE_TOAST: \"REMOVE_TOAST\",\r\n} as const\r\n\r\nlet count = 0\r\n\r\nfunction genId() {\r\n    count = (count + 1) % Number.MAX_VALUE\r\n    return count.toString()\r\n}\r\n\r\ntype ActionType = typeof actionTypes\r\n\r\ntype Action =\r\n    | {\r\n        type: ActionType[\"ADD_TOAST\"]\r\n        toast: ToasterToast\r\n    }\r\n    | {\r\n        type: ActionType[\"UPDATE_TOAST\"]\r\n        toast: Partial<ToasterToast>\r\n    }\r\n    | {\r\n        type: ActionType[\"DISMISS_TOAST\"]\r\n        toastId?: string\r\n    }\r\n    | {\r\n        type: ActionType[\"REMOVE_TOAST\"]\r\n        toastId?: string\r\n    }\r\n\r\ninterface State {\r\n    toasts: ToasterToast[]\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\r\n\r\nconst reducer = (state: State, action: Action): State => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TOAST:\r\n            return {\r\n                ...state,\r\n                toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n            }\r\n\r\n        case actionTypes.UPDATE_TOAST:\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.map((t) =>\r\n                    t.id === action.toast.id ? { ...t, ...action.toast } : t\r\n                ),\r\n            }\r\n\r\n        case actionTypes.DISMISS_TOAST: {\r\n            const { toastId } = action\r\n\r\n            // ! Side effects ! - This could be extracted into a dismissToast() action,\r\n            // but I'll keep it here for simplicity\r\n            if (toastId) {\r\n                if (toastTimeouts.has(toastId)) {\r\n                    clearTimeout(toastTimeouts.get(toastId))\r\n                    toastTimeouts.delete(toastId)\r\n                }\r\n            } else {\r\n                for (const [id, timeout] of toastTimeouts.entries()) {\r\n                    clearTimeout(timeout)\r\n                    toastTimeouts.delete(id)\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.map((t) =>\r\n                    t.id === toastId || toastId === undefined\r\n                        ? {\r\n                            ...t,\r\n                            open: false,\r\n                        }\r\n                        : t\r\n                ),\r\n            }\r\n        }\r\n        case actionTypes.REMOVE_TOAST:\r\n            if (action.toastId === undefined) {\r\n                return {\r\n                    ...state,\r\n                    toasts: [],\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.filter((t) => t.id !== action.toastId),\r\n            }\r\n    }\r\n}\r\n\r\nconst listeners: Array<(state: State) => void> = []\r\n\r\nlet memoryState: State = { toasts: [] }\r\n\r\nfunction dispatch(action: Action) {\r\n    memoryState = reducer(memoryState, action)\r\n    listeners.forEach((listener) => {\r\n        listener(memoryState)\r\n    })\r\n}\r\n\r\ntype Toast = Omit<ToasterToast, \"id\">\r\n\r\nfunction toast({ ...props }: Toast) {\r\n    const id = genId()\r\n\r\n    const update = (props: ToasterToast) =>\r\n        dispatch({\r\n            type: actionTypes.UPDATE_TOAST,\r\n            toast: { ...props, id },\r\n        })\r\n    const dismiss = () => dispatch({ type: actionTypes.DISMISS_TOAST, toastId: id })\r\n\r\n    dispatch({\r\n        type: actionTypes.ADD_TOAST,\r\n        toast: {\r\n            ...props,\r\n            id,\r\n            open: true,\r\n            onOpenChange: (open) => {\r\n                if (!open) dismiss()\r\n            },\r\n        },\r\n    })\r\n\r\n    return {\r\n        id,\r\n        dismiss,\r\n        update,\r\n    }\r\n}\r\n\r\nfunction useToast() {\r\n    const [state, setState] = React.useState<State>(memoryState)\r\n\r\n    React.useEffect(() => {\r\n        listeners.push(setState)\r\n        return () => {\r\n            const index = listeners.indexOf(setState)\r\n            if (index > -1) {\r\n                listeners.splice(index, 1)\r\n            }\r\n        }\r\n    }, [state])\r\n\r\n    return {\r\n        ...state,\r\n        toast,\r\n        dismiss: (toastId?: string) => dispatch({ type: actionTypes.DISMISS_TOAST, toastId }),\r\n    }\r\n}\r\n\r\nexport { useToast, toast } ","import {\n  createBrowserClient as _createBrowserClient,\n  createServerClient as _createServerClient,\n} from \"@supabase/ssr\";\nimport {\n  createClient as createSupabaseClient,\n  SupabaseClient,\n  type SupabaseClient as CoreSupabaseClient,\n} from \"@supabase/supabase-js\";\nimport fetchPonyfill from \"fetch-ponyfill\";\nimport { useMemo } from \"react\";\n\nimport type { Database } from \"@/types/database.types\";\n\nimport type { ReadonlyRequestCookies } from \"next/dist/server/web/spec-extension/adapters/request-cookies\";\n\n// Get fetch from ponyfill to avoid undici issues like 'Failed to execute 'fetch' on 'Window': Invalid name'\n// See: https://github.com/vercel/next.js/issues/54827\nconst { fetch: ponyfetch } = fetchPonyfill();\n\n// Environment variables for Supabase\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\nconst serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n\n// Type alias for clarity\nexport type TypedSupabaseClient = SupabaseClient<Database>;\nexport type TypedSSRSupabaseClient = CoreSupabaseClient<Database>;\n\n// --------------------------------------\n// Shared header builders\n// --------------------------------------\n\n/**\n * Default headers that must accompany every request made via a browser or server client\n * which authenticates with the anonymous public key.  This prevents 401 responses from\n * PostgREST that indicate the `apikey` header is missing.\n */\nconst anonymousHeaders: Record<string, string> | undefined = supabaseAnonKey\n  ? { apikey: supabaseAnonKey }\n  : undefined;\n\n/**\n * Default headers for the service-role client.  These include the service key as both the\n * `apikey` header and (where relevant) the `Authorization` header is still injected by the\n * libraryʼs internal `fetchWithAuth` helper.\n */\nconst serviceHeaders: Record<string, string> | undefined = serviceRoleKey\n  ? { apikey: serviceRoleKey }\n  : undefined;\n\n// Helper function to check essential env vars\nfunction checkPublicEnvVars() {\n  if (process.env.NODE_ENV === \"development\") {\n    console.debug(\n      \"[Supabase Env] NEXT_PUBLIC_SUPABASE_URL present?\",\n      !!supabaseUrl\n    );\n    console.debug(\n      \"[Supabase Env] NEXT_PUBLIC_SUPABASE_ANON_KEY present?\",\n      !!supabaseAnonKey\n    );\n    console.debug(\n      \"[Supabase Env] SUPABASE_SERVICE_ROLE_KEY present?\",\n      !!serviceRoleKey\n    );\n  }\n  if (!supabaseUrl || !supabaseAnonKey) {\n    console.error(\n      \"Missing environment variables NEXT_PUBLIC_SUPABASE_URL or NEXT_PUBLIC_SUPABASE_ANON_KEY\"\n    );\n    throw new Error(\"Supabase URL or Anon Key is missing.\");\n  }\n}\n\n// --------------------------------------\n// Patch global `fetch` on the **server** to use `ponyfetch`.\n// This avoids the infamous Undici \"Socket closed unexpectedly\" bug on\n// Windows/Node 18-20 without relying on fragile Undici internals.\n// The patch is idempotent and NO-OPs in the browser.\n\nif (typeof window === \"undefined\") {\n  const g = globalThis as any;\n  if (!g.__USING_PONYFETCH__) {\n    g.fetch = ponyfetch as unknown as typeof fetch;\n    g.__USING_PONYFETCH__ = true;\n    console.info(\"[Supabase] Server fetch patched to use ponyfetch ✅\");\n  }\n}\n\n// --- Browser Client (Singleton with Hook) ---\nlet browserClientInstance: TypedSSRSupabaseClient | undefined;\n\nfunction getSupabaseBrowserClient(): TypedSSRSupabaseClient {\n  checkPublicEnvVars();\n  if (browserClientInstance) {\n    return browserClientInstance;\n  }\n\n  // In the browser we rely on the native `fetch` implementation to ensure that\n  // request headers (apikey/Authorization) are preserved. Injecting a ponyfill\n  // here has proven to strip custom headers in certain edge-cases, leading to\n  // 401 \"No API key found\" responses. Therefore we only attach the required\n  // headers and leave `fetch` undefined so @supabase/ssr uses the global one.\n\n  browserClientInstance = _createBrowserClient<Database>(\n    supabaseUrl!,\n    supabaseAnonKey!,\n    {\n      global: {\n        headers: anonymousHeaders,\n      },\n    }\n  );\n\n  if (typeof window !== \"undefined\") {\n    console.debug(\"[Supabase] anon key present?\", !!supabaseAnonKey);\n  }\n\n  return browserClientInstance;\n}\n\n/**\n * Hook to get a Supabase client instance suitable for Browser/Client Components.\n * Uses a singleton pattern to ensure only one client instance is created.\n * Leverages @supabase/ssr for proper session handling with Next.js App Router.\n * @returns Memoized Supabase client instance for browser usage.\n */\nexport function useSupabaseBrowser(): TypedSSRSupabaseClient {\n  return useMemo(getSupabaseBrowserClient, []);\n}\n\n// This is the primary export for creating a browser client directly\nexport function createClient(): TypedSSRSupabaseClient {\n  checkPublicEnvVars();\n  return _createBrowserClient<Database>(supabaseUrl!, supabaseAnonKey!, {\n    global: {\n      headers: anonymousHeaders,\n    },\n  });\n}\n\n// --- Server Client (For Server Components, Route Handlers, Server Actions) ---\n\n/**\n * Creates a Supabase client suitable for use in Server Components, Server Actions,\n * and Route Handlers that require access to cookies.\n * @param cookieStore A ReadonlyRequestCookies instance (e.g., from `next/headers`).\n * @returns Supabase client instance for server-side usage with cookie handling.\n */\nexport function createSupabaseServerClient(\n  cookieStore: ReadonlyRequestCookies\n): TypedSSRSupabaseClient {\n  checkPublicEnvVars();\n  return _createServerClient<Database>(supabaseUrl!, supabaseAnonKey!, {\n    cookies: {\n      get(name: string) {\n        return cookieStore.get(name)?.value;\n      },\n      set(name: string, value: string, options) {\n        try {\n          cookieStore.set(name, value, options);\n        } catch (error) {\n          console.warn(`Failed to set cookie '${name}':`, error);\n        }\n      },\n      remove(name: string, options) {\n        try {\n          cookieStore.set(name, \"\", options);\n        } catch (error) {\n          console.warn(`Failed to remove cookie '${name}':`, error);\n        }\n      },\n    },\n    global: {\n      fetch: ponyfetch,\n      headers: anonymousHeaders,\n    },\n  });\n}\n\n// --- Service Role Client (Admin Operations) ---\n\n/**\n * Creates a Supabase client with the service role key for admin operations.\n * WARNING: This client bypasses RLS. Use only in trusted server-side environments\n * with proper authorization checks. NEVER expose the service role key to the browser.\n * @returns Supabase client instance with service_role privileges.\n */\nexport function createSupabaseServiceClient(): TypedSupabaseClient {\n  if (!supabaseUrl || !serviceRoleKey) {\n    console.error(\"Supabase URL or Service Role Key is missing\");\n    throw new Error(\"Supabase service client configuration is incomplete.\");\n  }\n\n  return createSupabaseClient<Database>(supabaseUrl, serviceRoleKey, {\n    auth: {\n      autoRefreshToken: false,\n      persistSession: false,\n    },\n    global: {\n      fetch: ponyfetch,\n      headers: serviceHeaders,\n    },\n  });\n}\n\n// --- Client with Custom Auth Token ---\n\n/**\n * Creates a Supabase client authenticated with a custom JWT token.\n * Useful for scenarios like testing or specific server-to-server interactions.\n * @param authToken JWT token for authentication.\n * @returns Authenticated Supabase client instance.\n */\nexport function createClientWithAuth(authToken: string): TypedSupabaseClient {\n  checkPublicEnvVars();\n  return createSupabaseClient<Database>(supabaseUrl!, supabaseAnonKey!, {\n    auth: {\n      persistSession: false,\n      autoRefreshToken: false,\n      detectSessionInUrl: false,\n    },\n    global: {\n      fetch: ponyfetch,\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        ...(anonymousHeaders ?? {}),\n      },\n    },\n  });\n}\n\n// ======================================\n// EDGE RUNTIME CLIENT\n// ======================================\n\n/**\n * Creates a Supabase client suitable for Edge Runtime environments (e.g., Edge Functions, Middleware).\n * Reads cookies from the Request headers. Requires manual handling for setting/removing cookies\n * via Response headers in the calling Edge function.\n * @param request The Request object from the Edge Function context.\n */\nexport const createEdgeClient = (request: Request): TypedSSRSupabaseClient => {\n  checkPublicEnvVars();\n  const cookieHeader = request.headers.get(\"cookie\") ?? \"\";\n\n  return _createServerClient<Database>(supabaseUrl!, supabaseAnonKey!, {\n    cookies: {\n      get(name: string) {\n        const match = cookieHeader.match(new RegExp(`(^|;)\\s*${name}=([^;]+)`));\n        return match?.[2];\n      },\n      set(name: string, value: string, options) {\n        console.warn(\n          `Attempted to set cookie '${name}' in createEdgeClient. This must be handled by the caller via Response headers.`\n        );\n      },\n      remove(name: string, options) {\n        console.warn(\n          `Attempted to remove cookie '${name}' in createEdgeClient. This must be handled by the caller via Response headers.`\n        );\n      },\n    },\n    global: {\n      fetch: ponyfetch,\n      headers: anonymousHeaders,\n    },\n  });\n};\n\n// --- Remove Deprecated Compatibility Exports ---\n\n/**\n * @deprecated Use `useSupabaseBrowser` in Client Components or `createSupabaseServerClient` in Server Components/Actions/Routes.\n */\nexport const getSupabaseClient = getSupabaseBrowserClient;\n\n/**\n * @deprecated Use `createSupabaseServiceClient` for elevated privilege operations.\n */\nexport const createServiceClient = createSupabaseServiceClient;\n\n/**\n * @deprecated Prefer specific client creation (`useSupabaseBrowser`, `createSupabaseServerClient`, `createSupabaseServiceClient`). Avoid direct default export usage.\n */\nexport const supabase = getSupabaseBrowserClient();\n","\"use server\";\r\n\r\nimport { cookies } from \"next/headers\";\r\n\r\nimport { createSupabaseServiceClient } from \"@/lib/supabase/client\";\r\nimport { createClient } from \"@/lib/supabase/server\";\r\n\r\n/**\r\n * Server action to check if a user is an admin by querying the admin_users table.\r\n * This uses the service role key (only on server) to securely check the user's role.\r\n */\r\nexport async function verifyUserIsAdmin(\r\n  userId: string | undefined\r\n): Promise<boolean> {\r\n  if (!userId) {\r\n    return false;\r\n  }\r\n\r\n  try {\r\n    // Create a Supabase client using the service role for admin access\r\n    const supabase = createSupabaseServiceClient();\r\n\r\n    // Query the admin_users table to check admin status\r\n    const { data, error } = await supabase\r\n      .from(\"admin_users\")\r\n      .select(\"is_admin\")\r\n      .eq(\"user_id\", userId)\r\n      .maybeSingle();\r\n\r\n    if (error) {\r\n      console.error(\r\n        `Error checking admin_users table for user ${userId}:`,\r\n        error.message\r\n      );\r\n      return false;\r\n    }\r\n\r\n    return !!data?.is_admin;\r\n  } catch (error: any) {\r\n    console.error(\r\n      `Exception during admin status check for user ${userId}:`,\r\n      error.message\r\n    );\r\n    return false;\r\n  }\r\n}\r\n","\"use client\";\r\n\r\nimport {\r\n  BadgeCheck,\r\n  Bell,\r\n  ChevronsUpDown,\r\n  CreditCard,\r\n  LogOut,\r\n  Sparkles,\r\n  UserPlus,\r\n  LogIn,\r\n} from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport { toast } from \"sonner\";\r\n\r\nimport { useAuth } from \"@/lib/auth/hooks\";\r\nimport { Button } from \"@/ui/button\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuGroup,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuTrigger,\r\n} from \"@/ui/dropdown-menu\";\r\nimport {\r\n  SidebarMenu,\r\n  SidebarMenuButton,\r\n  SidebarMenuItem,\r\n  useSidebar,\r\n} from \"@/ui/sidebar\";\r\nimport { UserAvatar } from \"@/ui/user-avatar\";\r\n\r\nexport function NavUser({\r\n  user,\r\n}: {\r\n  user?: {\r\n    name: string;\r\n    email: string;\r\n    avatar: string;\r\n  };\r\n}) {\r\n  const { isMobile } = useSidebar();\r\n  const { signOut } = useAuth();\r\n\r\n  // If no user is provided, show sign in/sign up buttons\r\n  if (!user) {\r\n    return (\r\n      <SidebarMenu>\r\n        <SidebarMenuItem className=\"flex gap-2\">\r\n          <Button\r\n            asChild\r\n            variant=\"outline\"\r\n            className=\"w-full border-blue-500 text-blue-600 hover:bg-blue-100 dark:border-blue-400 dark:text-blue-300 dark:hover:bg-blue-900/30\"\r\n            size=\"sm\"\r\n          >\r\n            <Link href=\"/auth/login\">\r\n              <LogIn className=\"mr-2 h-4 w-4\" />\r\n              Sign In\r\n            </Link>\r\n          </Button>\r\n          <Button\r\n            asChild\r\n            className=\"w-full bg-blue-600 hover:bg-blue-700 text-white dark:bg-blue-700 dark:hover:bg-blue-800 shadow-sm\"\r\n            size=\"sm\"\r\n          >\r\n            <Link href=\"/auth/register\">\r\n              <UserPlus className=\"mr-2 h-4 w-4\" />\r\n              Sign Up\r\n            </Link>\r\n          </Button>\r\n        </SidebarMenuItem>\r\n      </SidebarMenu>\r\n    );\r\n  }\r\n\r\n  // Function to handle logout with error handling\r\n  const handleLogout = async () => {\r\n    try {\r\n      if (!signOut) {\r\n        toast.error(\"Logout function not available\");\r\n        console.error(\"SignOut function is undefined\");\r\n        return;\r\n      }\r\n\r\n      await signOut();\r\n      toast.success(\"Logged out successfully\");\r\n    } catch (error) {\r\n      console.error(\"Logout failed:\", error);\r\n      toast.error(\"Failed to logout. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Otherwise, show the user dropdown\r\n  return (\r\n    <SidebarMenu>\r\n      <SidebarMenuItem>\r\n        <DropdownMenu>\r\n          <DropdownMenuTrigger asChild>\r\n            <SidebarMenuButton\r\n              size=\"lg\"\r\n              className=\"data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground\"\r\n            >\r\n              <UserAvatar\r\n                user={user}\r\n                size=\"sm\"\r\n                shape=\"square\"\r\n                className=\"rounded-lg\"\r\n              />\r\n              <div className=\"grid flex-1 text-left text-sm leading-tight\">\r\n                <span className=\"truncate font-medium\">{user.name}</span>\r\n                <span className=\"truncate text-xs\">{user.email}</span>\r\n              </div>\r\n              <ChevronsUpDown className=\"ml-auto size-4\" />\r\n            </SidebarMenuButton>\r\n          </DropdownMenuTrigger>\r\n          <DropdownMenuContent\r\n            className=\"w-(--radix-dropdown-menu-trigger-width) min-w-56 rounded-lg\"\r\n            side={isMobile ? \"bottom\" : \"right\"}\r\n            align=\"end\"\r\n            sideOffset={4}\r\n          >\r\n            <DropdownMenuLabel className=\"p-0 font-normal\">\r\n              <div className=\"flex items-center gap-2 px-1 py-1.5 text-left text-sm\">\r\n                <UserAvatar\r\n                  user={user}\r\n                  size=\"sm\"\r\n                  shape=\"square\"\r\n                  className=\"rounded-lg\"\r\n                />\r\n                <div className=\"grid flex-1 text-left text-sm leading-tight\">\r\n                  <span className=\"truncate font-medium\">{user.name}</span>\r\n                  <span className=\"truncate text-xs\">{user.email}</span>\r\n                </div>\r\n              </div>\r\n            </DropdownMenuLabel>\r\n            <DropdownMenuSeparator />\r\n            <DropdownMenuGroup>\r\n              <DropdownMenuItem asChild>\r\n                <Link href=\"/subscription/plans\">\r\n                  <Sparkles className=\"mr-2 h-4 w-4\" />\r\n                  Upgrade to Pro\r\n                </Link>\r\n              </DropdownMenuItem>\r\n            </DropdownMenuGroup>\r\n            <DropdownMenuSeparator />\r\n            <DropdownMenuGroup>\r\n              <DropdownMenuItem asChild>\r\n                <Link href=\"/profile\" data-tour=\"profile\">\r\n                  <BadgeCheck className=\"mr-2 h-4 w-4\" />\r\n                  Account\r\n                </Link>\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem asChild>\r\n                <Link href=\"/settings/billing\">\r\n                  <CreditCard className=\"mr-2 h-4 w-4\" />\r\n                  Billing\r\n                </Link>\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem asChild>\r\n                <Link href=\"/settings?tab=notifications\">\r\n                  <Bell className=\"mr-2 h-4 w-4\" />\r\n                  Notifications\r\n                </Link>\r\n              </DropdownMenuItem>\r\n            </DropdownMenuGroup>\r\n            <DropdownMenuSeparator />\r\n            <DropdownMenuItem onClick={handleLogout}>\r\n              <LogOut className=\"mr-2 h-4 w-4\" />\r\n              Log out\r\n            </DropdownMenuItem>\r\n          </DropdownMenuContent>\r\n        </DropdownMenu>\r\n      </SidebarMenuItem>\r\n    </SidebarMenu>\r\n  );\r\n}\r\n","\"use client\";\r\n\r\nimport {\r\n  AudioWaveform,\r\n  BookOpen,\r\n  Bot,\r\n  Command,\r\n  Frame,\r\n  GalleryVerticalEnd,\r\n  Map,\r\n  PieChart,\r\n  Settings2,\r\n  Terminal,\r\n  Code,\r\n  Activity,\r\n  Briefcase,\r\n  FileCheck,\r\n  Users,\r\n  Globe,\r\n  BarChart,\r\n  MessagesSquare,\r\n  Lightbulb,\r\n  Calendar,\r\n  ChevronRight,\r\n  ChevronDown,\r\n  Plus,\r\n  Trash2,\r\n} from \"lucide-react\";\r\nimport { useTranslations } from \"next-intl\";\r\nimport * as React from \"react\";\r\nimport { useEffect, useState, useCallback, ReactNode } from \"react\";\r\n\r\nimport { useChat, type Chat } from \"@/hooks/useChat\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Skeleton } from \"@/components/ui/skeleton\";\r\nimport { useClientLocale } from \"@/hooks/use-client-locale\";\r\nimport { useIsAdmin } from \"@/hooks/useIsAdmin\";\r\nimport { isRTL } from \"@/i18n/i18n\";\r\nimport { Link, usePathname } from \"@/i18n/navigation\";\r\nimport { useAuth } from \"@/lib/auth/hooks\";\r\nimport { getUserAvatar, getIdenticonUrl } from \"@/lib/avatar-utils\";\r\nimport {\r\n  useSupabaseBrowser,\r\n  type TypedSSRSupabaseClient,\r\n} from \"@/lib/supabase/client\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { Database } from \"@/types/supabase\";\r\nimport { NavUser } from \"@/ui/nav-user\";\r\nimport {\r\n  Sidebar,\r\n  SidebarContent,\r\n  SidebarFooter,\r\n  SidebarGroup,\r\n  SidebarGroupLabel,\r\n  SidebarHeader,\r\n  SidebarMenu,\r\n  SidebarMenuButton,\r\n  SidebarMenuItem,\r\n  SidebarMenuSub,\r\n  SidebarMenuSubButton,\r\n  SidebarMenuSubItem,\r\n  SidebarRail,\r\n  useSidebar,\r\n} from \"@/ui/sidebar\";\r\n\r\nimport { NotificationButton } from \"./notification-button\";\r\n\r\n// Types for navigation data\r\ninterface NavItem {\r\n  titleKey: string;\r\n  url: string;\r\n  isActive?: boolean;\r\n  subMenu?: NavItem[];\r\n}\r\n\r\ninterface NavSection {\r\n  titleKey: string;\r\n  url: string;\r\n  items: NavItem[];\r\n}\r\n\r\n// Hijraah-specific navigation data\r\nconst data: {\r\n  navMain: NavSection[];\r\n} = {\r\n  navMain: [\r\n    {\r\n      titleKey: \"dashboard\",\r\n      url: \"/dashboard\",\r\n      items: [\r\n        {\r\n          titleKey: \"overview\",\r\n          url: \"/dashboard\",\r\n        },\r\n        {\r\n          titleKey: \"cases\",\r\n          url: \"/dashboard/cases\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      titleKey: \"caseManagement\",\r\n      url: \"/dashboard/cases\",\r\n      items: [\r\n        {\r\n          titleKey: \"allCases\",\r\n          url: \"/dashboard/cases\",\r\n        },\r\n        {\r\n          titleKey: \"newCase\",\r\n          url: \"/dashboard/cases/new\",\r\n        },\r\n        {\r\n          titleKey: \"assignedCases\",\r\n          url: \"/dashboard/cases?assigned=true\",\r\n        },\r\n        {\r\n          titleKey: \"caseTemplates\",\r\n          url: \"/dashboard/cases/templates\",\r\n        },\r\n        {\r\n          titleKey: \"reports\",\r\n          url: \"/dashboard/cases/reports\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      titleKey: \"immigrationServices\",\r\n      url: \"#\",\r\n      items: [\r\n        {\r\n          titleKey: \"visaApplications\",\r\n          url: \"/services/visas\",\r\n        },\r\n        {\r\n          titleKey: \"workPermits\",\r\n          url: \"/services/work-permits\",\r\n        },\r\n        {\r\n          titleKey: \"residency\",\r\n          url: \"/services/residency\",\r\n        },\r\n        {\r\n          titleKey: \"citizenship\",\r\n          url: \"/services/citizenship\",\r\n        },\r\n        {\r\n          titleKey: \"familySponsorship\",\r\n          url: \"/services/family\",\r\n        },\r\n        {\r\n          titleKey: \"businessImmigration\",\r\n          url: \"/services/business\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      titleKey: \"documents\",\r\n      url: \"/documents\",\r\n      items: [\r\n        {\r\n          titleKey: \"myDocuments\",\r\n          url: \"/documents\",\r\n        },\r\n        {\r\n          titleKey: \"uploadDocuments\",\r\n          url: \"/documents/upload\",\r\n        },\r\n        {\r\n          titleKey: \"documentStatus\",\r\n          url: \"/documents/status\",\r\n        },\r\n        {\r\n          titleKey: \"verification\",\r\n          url: \"/documents/verification\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      titleKey: \"resources\",\r\n      url: \"#\",\r\n      items: [\r\n        {\r\n          titleKey: \"countryInformation\",\r\n          url: \"/resources/countries\",\r\n        },\r\n        {\r\n          titleKey: \"immigrationNews\",\r\n          url: \"/resources/news\",\r\n        },\r\n        {\r\n          titleKey: \"legalRequirements\",\r\n          url: \"/resources/legal\",\r\n        },\r\n        {\r\n          titleKey: \"faqs\",\r\n          url: \"/resources/faqs\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      titleKey: \"support\",\r\n      url: \"#\",\r\n      items: [\r\n        {\r\n          titleKey: \"chatSupport\",\r\n          url: \"/chat\",\r\n        },\r\n        {\r\n          titleKey: \"scheduleConsultation\",\r\n          url: \"/support/schedule\",\r\n        },\r\n        {\r\n          titleKey: \"knowledgeBase\",\r\n          url: \"/support/knowledge\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      titleKey: \"admin\",\r\n      url: \"#\",\r\n      items: [\r\n        {\r\n          titleKey: \"scrapingSources\",\r\n          url: \"/admin/scraping-sources\",\r\n        },\r\n        {\r\n          titleKey: \"systemSettings\",\r\n          url: \"/admin/settings\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\r\n  const { open } = useSidebar();\r\n  const { user, isLoading, signOut } = useAuth();\r\n  const { isAdmin } = useIsAdmin();\r\n  const t = useTranslations(\"sidebar\");\r\n  const locale = useClientLocale();\r\n  const rtl = isRTL(locale);\r\n  const pathname = usePathname();\r\n  const [avatarUrl, setAvatarUrl] = useState<string | undefined>(undefined);\r\n  const supabase = useSupabaseBrowser();\r\n  const [isSheetOpen, setIsSheetOpen] = useState(false);\r\n  const [openSubMenu, setOpenSubMenu] = useState<string | null>(null);\r\n\r\n  // Chat History State\r\n  const { getChats, deleteChat, isLoading: isLoadingChatAction } = useChat();\r\n  const [chats, setChats] = useState<Chat[]>([]);\r\n  const [isLoadingChats, setIsLoadingChats] = useState(false);\r\n  const [chatError, setChatError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (user && supabase) {\r\n      const fetchAvatar = async () => {\r\n        try {\r\n          const url = await getUserAvatar(supabase, user.id);\r\n          setAvatarUrl(url);\r\n        } catch (error) {\r\n          console.error(\"Error fetching avatar:\", error);\r\n          if (user?.id) {\r\n            setAvatarUrl(getIdenticonUrl(user.id));\r\n          }\r\n        }\r\n      };\r\n      fetchAvatar();\r\n    }\r\n  }, [user, supabase]);\r\n\r\n  // Fetch chat history (memoised to avoid infinite loops)\r\n  const loadChats = useCallback(async () => {\r\n    if (!user) {\r\n      setChats([]); // Clear chats if user logs out\r\n      return;\r\n    }\r\n\r\n    let isMounted = true;\r\n    setIsLoadingChats(true);\r\n    setChatError(null);\r\n    try {\r\n      const userChats = await getChats({ limit: 50 });\r\n      if (isMounted) setChats(userChats);\r\n    } catch (error: any) {\r\n      console.error(\"Error loading chats:\", error);\r\n      if (isMounted) setChatError(\"Failed to load chat history.\");\r\n    } finally {\r\n      if (isMounted) setIsLoadingChats(false);\r\n    }\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    loadChats();\r\n  }, [loadChats]);\r\n\r\n  // Handler for deleting a chat\r\n  const handleDeleteChatClick = async (e: React.MouseEvent, chatId: string) => {\r\n    e.stopPropagation(); // Prevent navigation when clicking delete\r\n    e.preventDefault();\r\n    if (!confirm(\"Are you sure you want to delete this chat?\")) {\r\n      return;\r\n    }\r\n    try {\r\n      await deleteChat(chatId);\r\n      setChats((prevChats) => prevChats.filter((chat) => chat.id !== chatId));\r\n      // Optional: Navigate away if the current chat was deleted\r\n      if (pathname === `/chat/${chatId}`) {\r\n        // Navigate to a safe place, e.g., new chat or dashboard\r\n        window.location.href = \"/chat/new\"; // Simple redirect for now\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting chat:\", error);\r\n      // Optionally show a toast notification\r\n      setChatError(\"Failed to delete chat.\");\r\n    }\r\n  };\r\n\r\n  // If sidebar is closed, return null\r\n  if (!open) {\r\n    return null;\r\n  }\r\n\r\n  // If auth state is loading, show a skeleton sidebar\r\n  if (isLoading) {\r\n    return (\r\n      <Sidebar\r\n        collapsible=\"icon\"\r\n        className={cn(\r\n          \"border-sidebar-border bg-sidebar-background text-sidebar-foreground\",\r\n          rtl ? \"border-l ml-auto\" : \"border-r\"\r\n        )}\r\n        {...props}\r\n      >\r\n        <SidebarHeader>\r\n          <div className=\"p-4 space-y-2\">\r\n            <Skeleton className=\"h-8 w-3/4\" />\r\n            <Skeleton className=\"h-4 w-1/2\" />\r\n          </div>\r\n        </SidebarHeader>\r\n        <SidebarContent className=\"flex-1 overflow-y-auto\">\r\n          <div className=\"p-4 space-y-4\">\r\n            {/* Chat History Skeleton */}\r\n            <div className=\"space-y-2\">\r\n              <Skeleton className=\"h-6 w-1/3\" />\r\n              <Skeleton className=\"h-8 w-full\" /> {/* New Chat Button */}\r\n              <Skeleton className=\"h-8 w-full ml-2\" />\r\n              <Skeleton className=\"h-8 w-full ml-2\" />\r\n              <Skeleton className=\"h-8 w-full ml-2\" />\r\n            </div>\r\n            {/* Other Skeletons */}\r\n            {[...Array(4)].map((_, i) => (\r\n              <div key={i} className=\"space-y-2\">\r\n                <Skeleton className=\"h-6 w-4/5\" />\r\n                <Skeleton className=\"h-4 w-full ml-4\" />\r\n                <Skeleton className=\"h-4 w-full ml-4\" />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </SidebarContent>\r\n        <SidebarFooter className=\"border-t border-sidebar-border p-4\">\r\n          <Skeleton className=\"h-10 w-full\" />\r\n        </SidebarFooter>\r\n      </Sidebar>\r\n    );\r\n  }\r\n\r\n  // Filter out admin sections if user is not an admin\r\n  const filteredNavMain = data.navMain.filter(\r\n    (section) => section.titleKey !== \"admin\" || isAdmin\r\n  );\r\n\r\n  // Prepare user data for NavUser component if user is authenticated\r\n  const userData = user\r\n    ? {\r\n        name:\r\n          user.user_metadata?.full_name || user.email?.split(\"@\")[0] || \"User\",\r\n        email: user.email || \"\",\r\n        avatar: avatarUrl || \"/avatars/default-1.png\",\r\n      }\r\n    : undefined;\r\n\r\n  const toggleSubMenu = (label: string) => {\r\n    setOpenSubMenu(openSubMenu === label ? null : label);\r\n  };\r\n\r\n  const renderNavItem = (item: NavItem, isSubItem = false) => {\r\n    // Check if the item URL starts with /admin/ and if the user is an admin\r\n    if (item.url.startsWith(\"/admin/\") && !isAdmin) {\r\n      return null;\r\n    }\r\n\r\n    // Refactored isActive check using usePathname\r\n    const isActive = pathname === item.url;\r\n\r\n    // Use the translated title\r\n    const itemContent = <>{t(item.titleKey as any)}</>; // Use translation\r\n\r\n    // Wrap content with Link for navigation\r\n    const linkContent = (\r\n      <Link href={item.url} className=\"flex-grow w-full\">\r\n        {itemContent}\r\n      </Link>\r\n    );\r\n\r\n    return (\r\n      <SidebarMenuItem\r\n        key={item.titleKey}\r\n        className={cn({\r\n          \"bg-primary/10 text-primary\": isActive, // Example active style\r\n          \"hover:bg-muted/50\": !isActive, // Example hover style for non-active\r\n        })}\r\n        onClick={item.subMenu ? () => toggleSubMenu(item.titleKey) : undefined}\r\n      >\r\n        {item.subMenu ? itemContent : linkContent}\r\n        {item.subMenu && (\r\n          <span className=\"ml-auto\">\r\n            {openSubMenu === item.titleKey ? (\r\n              <ChevronDown size={16} />\r\n            ) : (\r\n              <ChevronRight size={16} />\r\n            )}\r\n          </span>\r\n        )}\r\n      </SidebarMenuItem>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Sidebar\r\n      collapsible=\"icon\"\r\n      className={cn(\r\n        \"border-sidebar-border bg-sidebar-background text-sidebar-foreground\",\r\n        rtl ? \"border-l ml-auto\" : \"border-r\"\r\n      )}\r\n      {...props}\r\n    >\r\n      <SidebarHeader>\r\n        <div className=\"p-4\">\r\n          <h2 className=\"text-lg font-semibold\">Hijraah</h2>\r\n        </div>\r\n      </SidebarHeader>\r\n      <SidebarContent className=\"flex-1 overflow-y-auto\">\r\n        <SidebarMenu>\r\n          {/* Chat History Section */}\r\n          <SidebarGroup>\r\n            <SidebarGroupLabel className=\"flex items-center justify-between\">\r\n              {t(\"chats\")} {/* Assuming 'chats' translation exists */}\r\n              <Link href=\"/chat/new\" passHref legacyBehavior>\r\n                <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6\">\r\n                  <Plus size={16} />\r\n                  <span className=\"sr-only\">New Chat</span>\r\n                </Button>\r\n              </Link>\r\n            </SidebarGroupLabel>\r\n            {isLoadingChats ? (\r\n              <>\r\n                <Skeleton className=\"h-8 w-full my-1\" />\r\n                <Skeleton className=\"h-8 w-full my-1\" />\r\n                <Skeleton className=\"h-8 w-full my-1\" />\r\n              </>\r\n            ) : chatError ? (\r\n              <div className=\"text-destructive text-xs px-2\">{chatError}</div>\r\n            ) : chats.length === 0 ? (\r\n              <div className=\"text-muted-foreground text-xs px-2\">\r\n                No chats yet.\r\n              </div>\r\n            ) : (\r\n              chats.map((chat) => {\r\n                const isActive = pathname === `/chat/${chat.id}`;\r\n                return (\r\n                  <SidebarMenuItem\r\n                    key={chat.id}\r\n                    className={cn(\"group flex justify-between items-center\", {\r\n                      \"bg-primary/10 text-primary\": isActive,\r\n                      \"hover:bg-muted/50\": !isActive,\r\n                    })}\r\n                  >\r\n                    <Link\r\n                      href={`/chat/${chat.id}`}\r\n                      className=\"flex-grow truncate pr-2\"\r\n                      title={chat.title || \"Untitled Chat\"}\r\n                    >\r\n                      {chat.title || \"Untitled Chat\"}\r\n                    </Link>\r\n                    {/* Delete Button - appears on hover */}\r\n                    <Button\r\n                      variant=\"ghost\"\r\n                      size=\"icon\"\r\n                      className=\"h-6 w-6 shrink-0 text-muted-foreground opacity-0 group-hover:opacity-100 hover:text-destructive\"\r\n                      onClick={(e) => handleDeleteChatClick(e, chat.id)}\r\n                      disabled={isLoadingChatAction}\r\n                    >\r\n                      <Trash2 size={14} />\r\n                      <span className=\"sr-only\">Delete Chat</span>\r\n                    </Button>\r\n                  </SidebarMenuItem>\r\n                );\r\n              })\r\n            )}\r\n          </SidebarGroup>\r\n\r\n          {/* Existing Navigation Sections */}\r\n          {filteredNavMain.map((section) => (\r\n            <SidebarGroup key={section.titleKey}>\r\n              <SidebarGroupLabel>\r\n                {t(section.titleKey as any)}\r\n              </SidebarGroupLabel>\r\n              {section.items.map((item) => (\r\n                <React.Fragment key={item.titleKey}>\r\n                  {renderNavItem(item)}\r\n                  {item.subMenu && openSubMenu === item.titleKey && (\r\n                    <SidebarMenuSub>\r\n                      {item.subMenu.map((subItem) =>\r\n                        renderNavItem(subItem, true)\r\n                      )}\r\n                    </SidebarMenuSub>\r\n                  )}\r\n                </React.Fragment>\r\n              ))}\r\n            </SidebarGroup>\r\n          ))}\r\n        </SidebarMenu>\r\n      </SidebarContent>\r\n      <SidebarFooter className=\"border-t border-sidebar-border p-2\">\r\n        {userData ? (\r\n          <NavUser user={userData} />\r\n        ) : (\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Link href=\"/login\" className=\"flex-1\">\r\n              <SidebarMenuButton className=\"w-full\">\r\n                {t(\"login\")}\r\n              </SidebarMenuButton>\r\n            </Link>\r\n            <Link href=\"/auth/register\" className=\"flex-1\">\r\n              <SidebarMenuButton className=\"w-full\">\r\n                {t(\"signUp\")}\r\n              </SidebarMenuButton>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </SidebarFooter>\r\n    </Sidebar>\r\n  );\r\n}\r\n","import { useState, useCallback } from \"react\";\r\nimport { useAuth } from \"@/lib/auth/hooks\";\r\n\r\nimport { useToast } from \"@/components/ui/use-toast\";\r\nimport { ChatModelType } from \"@/_core/chat/entities/chat\";\r\nimport { generateId } from \"@/shared/utils/id-generator\";\r\n\r\nexport type Chat = {\r\n  id: string;\r\n  userId: string;\r\n  title: string;\r\n  description: string | null;\r\n  modelType: ChatModelType;\r\n  caseId: string | null;\r\n  messages: Message[];\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  latestMessage: Message | null;\r\n  metadata?: {\r\n    shared?: boolean;\r\n    [key: string]: any;\r\n  };\r\n};\r\n\r\nexport type Message = {\r\n  id: string;\r\n  role: \"user\" | \"assistant\" | \"system\";\r\n  content: string;\r\n  attachments?: Attachment[];\r\n  createdAt: string;\r\n};\r\n\r\nexport type Attachment = {\r\n  id: string;\r\n  type: \"image\" | \"document\" | \"link\";\r\n  fileId?: string;\r\n  url?: string;\r\n  name: string;\r\n  contentType?: string;\r\n  size?: number;\r\n};\r\n\r\nexport type ChatOptions = {\r\n  title?: string;\r\n  description?: string;\r\n  modelType?: ChatModelType;\r\n  caseId?: string;\r\n  initialMessage?: string;\r\n  countryCode?: string;\r\n};\r\n\r\nexport function useChat() {\r\n  const { toast } = useToast();\r\n  const { session } = useAuth();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [chats, setChats] = useState<Chat[]>([]);\r\n  const [currentChat, setCurrentChat] = useState<Chat | null>(null);\r\n\r\n  const authHeaders: Record<string, string> = session?.access_token\r\n    ? { Authorization: `Bearer ${session.access_token}` }\r\n    : {};\r\n\r\n  // Create a new chat\r\n  const createChat = useCallback(\r\n    async (options: ChatOptions = {}): Promise<Chat | null> => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch(\"/api/chat\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            ...authHeaders,\r\n          },\r\n          body: JSON.stringify(options),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const error = await response.json();\r\n          throw new Error(error.error || \"Failed to create chat\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        const newChat = data.chat;\r\n\r\n        setChats((prevChats) => [newChat, ...prevChats]);\r\n        setCurrentChat(newChat);\r\n\r\n        return newChat;\r\n      } catch (error: any) {\r\n        toast({\r\n          title: \"Error\",\r\n          description: error.message || \"Failed to create chat\",\r\n          variant: \"destructive\",\r\n        });\r\n        return null;\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    [toast, authHeaders]\r\n  );\r\n\r\n  // Get user's chats\r\n  const getChats = useCallback(\r\n    async (\r\n      options: {\r\n        limit?: number;\r\n        offset?: number;\r\n        caseId?: string;\r\n      } = {}\r\n    ): Promise<Chat[]> => {\r\n      try {\r\n        setIsLoading(true);\r\n\r\n        // Build query string\r\n        const queryParams = new URLSearchParams();\r\n        if (options.limit)\r\n          queryParams.append(\"limit\", options.limit.toString());\r\n        if (options.offset)\r\n          queryParams.append(\"offset\", options.offset.toString());\r\n        if (options.caseId) queryParams.append(\"caseId\", options.caseId);\r\n\r\n        const response = await fetch(`/api/chat?${queryParams.toString()}`, {\r\n          headers: {\r\n            ...authHeaders,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const error = await response.json();\r\n          throw new Error(error.error || \"Failed to fetch chats\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setChats(data.chats);\r\n\r\n        return data.chats;\r\n      } catch (error: any) {\r\n        toast({\r\n          title: \"Error\",\r\n          description: error.message || \"Failed to fetch chats\",\r\n          variant: \"destructive\",\r\n        });\r\n        return [];\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    [toast, authHeaders]\r\n  );\r\n\r\n  // Get a specific chat\r\n  const getChat = useCallback(\r\n    async (chatId: string): Promise<Chat | null> => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch(`/api/chat/${chatId}`, {\r\n          headers: {\r\n            ...authHeaders,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const error = await response.json();\r\n          throw new Error(error.error || \"Failed to fetch chat\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setCurrentChat(data.chat);\r\n\r\n        return data.chat;\r\n      } catch (error: any) {\r\n        toast({\r\n          title: \"Error\",\r\n          description: error.message || \"Failed to fetch chat\",\r\n          variant: \"destructive\",\r\n        });\r\n        return null;\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    [toast, authHeaders]\r\n  );\r\n\r\n  // Send a message to a chat\r\n  const sendMessage = useCallback(\r\n    async (\r\n      chatId: string,\r\n      content: string,\r\n      attachments: Omit<Attachment, \"id\">[] = []\r\n    ): Promise<{\r\n      userMessageId: string;\r\n      assistantMessageId: string | null;\r\n    } | null> => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch(`/api/chat/${chatId}/messages`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            ...authHeaders,\r\n          },\r\n          body: JSON.stringify({\r\n            message: content,\r\n            attachments: attachments,\r\n          }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const error = await response.json();\r\n          throw new Error(error.error || \"Failed to send message\");\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        // Update current chat with new messages\r\n        await getChat(chatId);\r\n\r\n        return {\r\n          userMessageId: data.userMessageId,\r\n          assistantMessageId: data.assistantMessageId,\r\n        };\r\n      } catch (error: any) {\r\n        toast({\r\n          title: \"Error\",\r\n          description: error.message || \"Failed to send message\",\r\n          variant: \"destructive\",\r\n        });\r\n        return null;\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    [toast, authHeaders, getChat]\r\n  );\r\n\r\n  // Update chat details\r\n  const updateChat = useCallback(\r\n    async (\r\n      chatId: string,\r\n      updates: {\r\n        title?: string;\r\n        description?: string | null;\r\n        modelType?: ChatModelType;\r\n        caseId?: string | null;\r\n        metadata?: {\r\n          shared?: boolean;\r\n          [key: string]: any;\r\n        };\r\n      }\r\n    ): Promise<Chat | null> => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch(`/api/chat/${chatId}`, {\r\n          method: \"PATCH\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            ...authHeaders,\r\n          },\r\n          body: JSON.stringify(updates),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const error = await response.json();\r\n          throw new Error(error.error || \"Failed to update chat\");\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        setCurrentChat(data.chat);\r\n        setChats((prevChats) =>\r\n          prevChats.map((chat) => (chat.id === chatId ? data.chat : chat))\r\n        );\r\n\r\n        return data.chat;\r\n      } catch (error: any) {\r\n        toast({\r\n          title: \"Error\",\r\n          description: error.message || \"Failed to update chat\",\r\n          variant: \"destructive\",\r\n        });\r\n        return null;\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    [toast, authHeaders]\r\n  );\r\n\r\n  // Delete a chat\r\n  const deleteChat = useCallback(\r\n    async (chatId: string): Promise<boolean> => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch(`/api/chat/${chatId}`, {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            ...authHeaders,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const error = await response.json();\r\n          throw new Error(error.error || \"Failed to delete chat\");\r\n        }\r\n\r\n        setChats((prevChats) => prevChats.filter((chat) => chat.id !== chatId));\r\n        if (currentChat?.id === chatId) {\r\n          setCurrentChat(null);\r\n        }\r\n\r\n        return true;\r\n      } catch (error: any) {\r\n        toast({\r\n          title: \"Error\",\r\n          description: error.message || \"Failed to delete chat\",\r\n          variant: \"destructive\",\r\n        });\r\n        return false;\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    [toast, authHeaders, currentChat]\r\n  );\r\n\r\n  // Generate a title for a chat\r\n  const generateChatTitle = useCallback(\r\n    async (chatId: string): Promise<string | null> => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await fetch(`/api/chat/${chatId}/generate-title`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            ...authHeaders,\r\n          },\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const error = await response.json();\r\n          throw new Error(error.error || \"Failed to generate chat title\");\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        // Update chat with new title\r\n        if (currentChat?.id === chatId) {\r\n          setCurrentChat((prev) =>\r\n            prev ? { ...prev, title: data.title } : null\r\n          );\r\n        }\r\n\r\n        setChats((prevChats) =>\r\n          prevChats.map((chat) =>\r\n            chat.id === chatId ? { ...chat, title: data.title } : chat\r\n          )\r\n        );\r\n\r\n        return data.title;\r\n      } catch (error: any) {\r\n        toast({\r\n          title: \"Error\",\r\n          description: error.message || \"Failed to generate chat title\",\r\n          variant: \"destructive\",\r\n        });\r\n        return null;\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    [toast, authHeaders, currentChat]\r\n  );\r\n\r\n  return {\r\n    isLoading,\r\n    chats,\r\n    currentChat,\r\n    createChat,\r\n    getChats,\r\n    getChat,\r\n    sendMessage,\r\n    updateChat,\r\n    deleteChat,\r\n    generateChatTitle,\r\n  };\r\n}\r\n","import { createServerReference, callServer, findSourceMapURL } from 'private-next-rsc-action-client-wrapper'\nexport const verifyUserIsAdmin = /*#__PURE__*/createServerReference(\"4055c9f9dce3c849928e65e87017b3609674121d00\", callServer, undefined, findSourceMapURL, \"verifyUserIsAdmin\")","import { useEffect, useState } from \"react\";\r\n\r\nimport { verifyUserIsAdmin } from \"@/lib/actions/admin\";\r\nimport { useAuth } from \"@/lib/auth/hooks\";\r\n\r\nexport function useIsAdmin() {\r\n  const { user } = useAuth();\r\n  const [isAdmin, setIsAdmin] = useState<boolean>(false);\r\n  const [isLoading, setIsLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    async function checkAdminStatus() {\r\n      if (!user || !user.id) {\r\n        setIsAdmin(false);\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      setIsLoading(true);\r\n      try {\r\n        const adminStatus = await verifyUserIsAdmin(user.id);\r\n        setIsAdmin(adminStatus);\r\n      } catch (error) {\r\n        console.error(\"Error checking admin status via server action:\", error);\r\n        setIsAdmin(false);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    checkAdminStatus();\r\n  }, [user]);\r\n\r\n  return { isAdmin, isLoading };\r\n}\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 73285;\nmodule.exports = webpackEmptyContext;","\"use client\";\r\n\r\nimport { usePathname } from \"next/navigation\";\r\n\r\nimport { locales, defaultLocale, Locale } from \"@/i18n/i18n\";\r\n\r\n/**\r\n * Client-safe hook to get the current locale based on the URL pathname.\r\n * It avoids server-only APIs like `next/headers`.\r\n * @returns The detected locale or the default locale.\r\n */\r\nexport function useClientLocale(): Locale {\r\n  const pathname = usePathname();\r\n\r\n  // Extract locale from URL path, checking for exact match or path prefix\r\n  const pathnameLocale = locales.find(\r\n    (locale) => pathname === `/${locale}` || pathname.startsWith(`/${locale}/`)\r\n  );\r\n\r\n  // Return the detected locale, or the default locale if none is found in the path\r\n  return pathnameLocale || defaultLocale;\r\n}\r\n","import { SupabaseClient } from \"@supabase/supabase-js\";\r\n\r\nimport type { Database } from \"@/types/database.types\";\r\n\r\n/**\r\n * Custom Error for Avatar Upload failures\r\n */\r\nexport class AvatarUploadError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public originalError?: any\r\n  ) {\r\n    super(message);\r\n    this.name = \"AvatarUploadError\";\r\n    if (originalError && originalError.stack) {\r\n      this.stack = originalError.stack;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Custom Error for Profile Update failures\r\n */\r\nexport class ProfileUpdateError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public originalError?: any\r\n  ) {\r\n    super(message);\r\n    this.name = \"ProfileUpdateError\";\r\n    if (originalError && originalError.stack) {\r\n      this.stack = originalError.stack;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Utility functions for avatar management\r\n */\r\n\r\nconst AVATAR_BUCKET = \"avatars\";\r\nconst DEFAULT_AVATARS = [\r\n  \"/avatars/default-1.png\",\r\n  \"/avatars/default-2.png\",\r\n  \"/avatars/default-3.png\",\r\n  \"/avatars/default-4.png\",\r\n  \"/avatars/default-5.png\",\r\n];\r\n\r\n// Default avatar path\r\nconst defaultAvatarPath = \"/avatars/default.png\";\r\n\r\n// Cache for avatar URLs\r\nconst avatarCache = new Map<string, string>();\r\n\r\n/**\r\n * Get a random default avatar URL\r\n */\r\nexport function getRandomDefaultAvatar(): string {\r\n  const randomIndex = Math.floor(Math.random() * DEFAULT_AVATARS.length);\r\n  return DEFAULT_AVATARS[randomIndex];\r\n}\r\n\r\n/**\r\n * Generate an avatar URL based on user ID\r\n */\r\nexport function generateAvatarUrl(userId: string): string {\r\n  // Hash userId to get a consistent avatar for a user\r\n  let hash = 0;\r\n  for (let i = 0; i < userId.length; i++) {\r\n    hash = (hash << 5) - hash + userId.charCodeAt(i);\r\n    hash = hash & hash; // Convert to 32bit integer\r\n  }\r\n\r\n  // Use the hash to pick an avatar\r\n  const index = Math.abs(hash) % DEFAULT_AVATARS.length;\r\n  return DEFAULT_AVATARS[index];\r\n}\r\n\r\n/**\r\n * Upload an avatar image to Supabase storage\r\n */\r\nexport async function uploadAvatar(\r\n  supabase: SupabaseClient<Database>,\r\n  file: File,\r\n  userId: string\r\n): Promise<string> {\r\n  try {\r\n    const fileExt = file.name.split(\".\").pop();\r\n    const fileName = `${userId}-${Date.now()}.${fileExt}`;\r\n    const filePath = `${userId}/${fileName}`;\r\n\r\n    // Upload image\r\n    const { error: uploadError } = await supabase.storage\r\n      .from(AVATAR_BUCKET)\r\n      .upload(filePath, file, { upsert: true });\r\n\r\n    if (uploadError) {\r\n      throw new AvatarUploadError(\r\n        \"Failed to upload avatar to storage.\",\r\n        uploadError\r\n      );\r\n    }\r\n\r\n    // Get public URL\r\n    const {\r\n      data: { publicUrl },\r\n    } = supabase.storage.from(AVATAR_BUCKET).getPublicUrl(filePath);\r\n\r\n    if (!publicUrl) {\r\n      throw new AvatarUploadError(\r\n        \"Failed to get public URL for avatar after upload.\"\r\n      );\r\n    }\r\n\r\n    return publicUrl;\r\n  } catch (error) {\r\n    if (error instanceof AvatarUploadError) {\r\n      throw error;\r\n    }\r\n    console.error(\"Error uploading avatar:\", error);\r\n    throw new AvatarUploadError(\r\n      \"An unexpected error occurred during avatar upload.\",\r\n      error\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Update a user's avatar_url in the profile\r\n */\r\nexport async function updateUserAvatar(\r\n  supabase: SupabaseClient<Database>,\r\n  userId: string,\r\n  avatarUrl: string\r\n): Promise<void> {\r\n  try {\r\n    // First, check if profile exists\r\n    const { data: profile, error: profileError } = await supabase\r\n      .from(\"profiles\")\r\n      .select(\"id\")\r\n      .eq(\"id\", userId)\r\n      .maybeSingle();\r\n\r\n    if (profileError) {\r\n      throw new ProfileUpdateError(\r\n        \"Error checking for existing profile before avatar update.\",\r\n        profileError\r\n      );\r\n    }\r\n\r\n    if (profile) {\r\n      // Update existing profile\r\n      const { error } = await supabase\r\n        .from(\"profiles\")\r\n        .update({ avatar_url: avatarUrl, updated_at: new Date().toISOString() })\r\n        .eq(\"id\", userId);\r\n\r\n      if (error) {\r\n        throw new ProfileUpdateError(\r\n          \"Failed to update profile with new avatar URL.\",\r\n          error\r\n        );\r\n      }\r\n    } else {\r\n      // Create new profile\r\n      const { error } = await supabase.from(\"profiles\").insert({\r\n        id: userId,\r\n        avatar_url: avatarUrl,\r\n        // first_name and last_name could be fetched or passed if needed here\r\n        // For now, relying on the handle_new_user trigger for defaults on new auth users,\r\n        // but this direct insert might need more fields if it's a common path.\r\n        created_at: new Date().toISOString(),\r\n        updated_at: new Date().toISOString(),\r\n      });\r\n\r\n      if (error) {\r\n        throw new ProfileUpdateError(\r\n          \"Failed to create new profile with avatar URL.\",\r\n          error\r\n        );\r\n      }\r\n    }\r\n  } catch (error) {\r\n    if (error instanceof ProfileUpdateError) {\r\n      throw error;\r\n    }\r\n    console.error(\"Error updating user avatar:\", error);\r\n    throw new ProfileUpdateError(\r\n      \"An unexpected error occurred while updating user avatar.\",\r\n      error\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Generates a deterministic Identicon URL based on the user ID.\r\n * @param userId The user's unique ID.\r\n * @returns A URL to the Identicon image.\r\n */\r\nexport const getIdenticonUrl = (userId: string): string => {\r\n  // Simple hashing function (replace with a more robust one if needed)\r\n  let hash = 0;\r\n  for (let i = 0; i < userId.length; i++) {\r\n    hash = userId.charCodeAt(i) + ((hash << 5) - hash);\r\n    hash = hash & hash; // Convert to 32bit integer\r\n  }\r\n  const identiconId = Math.abs(hash % 1000); // Generate a number between 0-999\r\n  return `https://api.dicebear.com/8.x/identicon/svg?seed=${identiconId}`;\r\n};\r\n\r\n/**\r\n * Retrieves the user's avatar URL.\r\n * Fetches from Supabase storage, falls back to Identicon, uses cache.\r\n * @param supabase The Supabase client instance.\r\n * @param userId The user's unique ID.\r\n * @returns A promise that resolves to the avatar URL string.\r\n */\r\nexport async function getUserAvatar(\r\n  supabase: SupabaseClient<Database>, // Accept client as argument\r\n  userId: string\r\n): Promise<string> {\r\n  if (!userId) {\r\n    console.warn(\"getUserAvatar called with no userId, returning default.\");\r\n    return defaultAvatarPath;\r\n  }\r\n\r\n  // Check cache first\r\n  if (avatarCache.has(userId)) {\r\n    return avatarCache.get(userId)!;\r\n  }\r\n\r\n  // Ensure supabase client is provided\r\n  if (!supabase) {\r\n    console.error(\"getUserAvatar requires a valid Supabase client instance.\");\r\n    return getIdenticonUrl(userId); // Fallback to identicon if client missing\r\n  }\r\n\r\n  try {\r\n    // 1. Check 'profiles' table for an 'avatar_url' column\r\n    const { data: profileData, error: profileError } = await supabase\r\n      .from(\"profiles\") // Ensure 'profiles' table exists\r\n      .select(\"avatar_url\") // Ensure 'avatar_url' column exists\r\n      .eq(\"id\", userId)\r\n      .single();\r\n\r\n    if (profileError && profileError.code !== \"PGRST116\") {\r\n      // Ignore 'PGRST116' (No rows found)\r\n      console.error(\r\n        \"Error fetching profile avatar_url (raw):\",\r\n        profileError,\r\n        \"Error fetching profile avatar_url (JSON):\",\r\n        JSON.stringify(profileError, Object.getOwnPropertyNames(profileError))\r\n      );\r\n    }\r\n\r\n    if (profileData?.avatar_url) {\r\n      avatarCache.set(userId, profileData.avatar_url);\r\n      return profileData.avatar_url;\r\n    }\r\n\r\n    // 2. If no avatar_url in profile, check Supabase Storage (e.g., 'avatars' bucket)\r\n    const avatarFilePath = `public/${userId}.png`; // Adjust path convention as needed\r\n    const { data: storageData } = await supabase.storage\r\n      .from(\"avatars\") // Ensure 'avatars' bucket exists\r\n      .getPublicUrl(avatarFilePath);\r\n\r\n    // Check for specific storage errors (like file not found)\r\n    if (storageData?.publicUrl) {\r\n      // Verify the URL is accessible before caching (optional but recommended)\r\n      // Could involve a quick HEAD request, but adds latency.\r\n      // For simplicity, we assume the URL is valid if returned without critical error.\r\n\r\n      // Check if the URL ends with the expected file path to avoid potential default bucket URLs\r\n      if (storageData.publicUrl.endsWith(avatarFilePath)) {\r\n        avatarCache.set(userId, storageData.publicUrl);\r\n        return storageData.publicUrl;\r\n      } else {\r\n        console.warn(\r\n          `Storage URL ${storageData.publicUrl} does not match expected path ${avatarFilePath}. Falling back.`\r\n        );\r\n      }\r\n    }\r\n\r\n    // 3. Fallback to Identicon if no profile URL and no storage URL found/valid\r\n    const identiconUrl = getIdenticonUrl(userId);\r\n    avatarCache.set(userId, identiconUrl);\r\n    return identiconUrl;\r\n  } catch (error) {\r\n    console.error(\r\n      \"Error getting user avatar (raw):\",\r\n      error,\r\n      \"Error getting user avatar (JSON):\",\r\n      JSON.stringify(error, Object.getOwnPropertyNames(error))\r\n    );\r\n    // Final fallback in case of any unexpected error\r\n    const identiconUrl = getIdenticonUrl(userId);\r\n    avatarCache.set(userId, identiconUrl); // Cache fallback\r\n    return identiconUrl;\r\n  }\r\n}\r\n\r\n/**\r\n * Clears the avatar cache for a specific user.\r\n * @param userId The user ID to clear from the cache.\r\n */\r\nexport function clearAvatarCache(userId: string): void {\r\n  avatarCache.delete(userId);\r\n}\r\n\r\n/**\r\n * Clears the entire avatar cache.\r\n */\r\nexport function clearAllAvatarCache(): void {\r\n  avatarCache.clear();\r\n}\r\n"],"names":["UserAvatar","user","className","fallbackClassName","size","shape","shapeClasses","circle","square","Avatar","sizeClasses","sm","md","lg","xl","avatar","AvatarImage","src","alt","name","onError","console","warn","e","target","style","display","AvatarFallback","getInitials","split","map","part","slice","join","toUpperCase","User","actionTypes","ADD_TOAST","UPDATE_TOAST","DISMISS_TOAST","REMOVE_TOAST","count","toastTimeouts","Map","reducer","state","action","type","toasts","toast","TOAST_LIMIT","t","id","toastId","has","clearTimeout","get","delete","timeout","entries","undefined","open","filter","listeners","memoryState","dispatch","forEach","listener","props","genId","Number","MAX_VALUE","toString","dismiss","onOpenChange","update","useToast","setState","React","push","index","indexOf","splice","browserClientInstance","fetch","ponyfetch","fetchPonyfill","supabaseUrl","process","supabaseAnonKey","serviceRoleKey","env","SUPABASE_SERVICE_ROLE_KEY","anonymousHeaders","apikey","serviceHeaders","g","globalThis","__USING_PONYFETCH__","verifyUserIsAdmin","userId","supabase","createSupabaseServiceClient","createSupabaseClient","auth","autoRefreshToken","persistSession","global","headers","data","error","from","select","eq","maybeSingle","message","is_admin","checkPublicEnvVars","_createBrowserClient","NavUser","isMobile","useSidebar","signOut","useAuth","SidebarMenu","SidebarMenuItem","Button","asChild","variant","Link","href","LogIn","UserPlus","handleLogout","success","DropdownMenu","DropdownMenuTrigger","SidebarMenuButton","div","span","email","ChevronsUpDown","DropdownMenuContent","side","align","sideOffset","DropdownMenuLabel","DropdownMenuSeparator","DropdownMenuGroup","DropdownMenuItem","Sparkles","data-tour","BadgeCheck","CreditCard","Bell","onClick","LogOut","navMain","titleKey","url","items","AppSidebar","isLoading","isAdmin","useIsAdmin","useTranslations","locale","useClientLocale","rtl","isRTL","pathname","usePathname","avatarUrl","setAvatarUrl","useState","useSupabaseBrowser","isSheetOpen","setIsSheetOpen","openSubMenu","setOpenSubMenu","getChats","deleteChat","isLoadingChatAction","useChat","chats","setChats","isLoadingChats","setIsLoadingChats","chatError","setChatError","useCallback","isMounted","userChats","limit","handleDeleteChatClick","chatId","stopPropagation","preventDefault","confirm","prevChats","chat","window","location","Sidebar","collapsible","cn","SidebarHeader","Skeleton","SidebarContent","_","i","SidebarFooter","filteredNavMain","section","userData","user_metadata","full_name","toggleSubMenu","label","renderNavItem","item","isSubItem","startsWith","isActive","itemContent","linkContent","subMenu","ChevronDown","ChevronRight","h2","SidebarGroup","SidebarGroupLabel","passHref","legacyBehavior","Plus","length","title","disabled","Trash2","SidebarMenuSub","subItem","session","setIsLoading","currentChat","setCurrentChat","authHeaders","access_token","Authorization","createChat","options","response","method","body","JSON","stringify","ok","json","newChat","description","queryParams","URLSearchParams","append","offset","caseId","getChat","sendMessage","content","attachments","userMessageId","assistantMessageId","updateChat","updates","generateChatTitle","prev","setIsAdmin","pathnameLocale","locales","find","defaultLocale","AvatarUploadError","Error","constructor","originalError","stack","ProfileUpdateError","AVATAR_BUCKET","avatarCache","uploadAvatar","file","fileExt","pop","fileName","Date","now","filePath","uploadError","storage","upload","upsert","publicUrl","getPublicUrl","updateUserAvatar","profile","profileError","avatar_url","updated_at","toISOString","insert","created_at","getIdenticonUrl","hash","charCodeAt","Math","abs","identiconId","getUserAvatar","profileData","single","code","Object","getOwnPropertyNames","set","avatarFilePath","storageData","endsWith","identiconUrl"],"sourceRoot":""}