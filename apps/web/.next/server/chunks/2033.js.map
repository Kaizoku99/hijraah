{"version":3,"file":"2033.js","mappings":"gcAqBA,qCAA6C,CAC7C,QACA,CAAC,EAAC,CAiCF,SANA,KACA,0CACA,cACA,SACK,CACL,EACA,GACA,oBACA,QACA,CAAK,CACL,uDACA,QACA,CAAK,CACL,8CACA,QACA,CAAK,CACL,+BACA,QACA,CAAK,CACL,iCACA,QACA,CAAK,CACL,gCACA,QACA,CAAK,CACL,sCACA,QACA,CAAK,CACL,wCACA,QACA,CAAK,CACL,yCACA,QACA,CAAK,CACL,sCACA,QACA,CAAK,CACL,oCACA,QACA,CAAK,CACL,iCACA,QACA,CAAK,CACL,6BACA,QACA,CAAK,CACL,uCACA,QACA,CAAK,CACL,qCACA,QACA,CAAK,CACL,gCACA,QACA,CAAK,CACL,oCACA,QACA,CAAK,CACL,4CACA,QACA,CAAK,CACL,qCACA,QACA,CAAK,CACL,2CACA,QACA,CAAK,CACL,sCACA,QACA,CAAK,CACL,iDACA,QACA,CAAK,CACL,kDACA,QACA,CAAK,CACL,iCACA,QACA,CACA,CAAC,EACD,MAQA,YACA,0BACA,SACA,CACA,EAZsD,EAAQ,KAAO,GACrE,EAA4B,EAAQ,KAA8C,EAClF,EAAiC,EAAQ,KAAmD,CADzD,CAEnC,EAAsC,EAAQ,KAAoC,CAD1C,CAExC,EAAkC,EAAQ,KAA2C,CADxC,CAE7C,EAA+B,EAAQ,KAA4B,CAD1B,CAEzC,EAA2B,EAAQ,IAAuC,EADpC,EAEnB,EAAQ,KAAqB,EADd,EAOlC,QAN0B,IAM1B,mCACA,cACA,OACA,yBACA,mBACA,6BACA,8BACA,CACA,CACA,aACA,OACA,uBACA,sBACA,sBACA,wBACA,gBACA,CACA,CACA,cACA,MACA,0DAEA,kBACA,QACA,2CADA,GAWA,iCACA,wBACA,iEAAgG,SAAa,+EAA+E,EAAW,oJACvM,aACA,cACA,eACA,CAAS,EAET,KACA,6BACA,oCACU,gCACV,eAEA,8DAAkG,SAAa,kDAAkD,EAAW,mGAC5K,aACA,cACA,eACA,CAAa,CAGb,OAFA,4BACA,4BACA,CACA,CAAgH,CAAtG,CAIV,CACA,OALmB,EAKnB,GAL8G,CAK9G,GACA,wCACA,6BACA,8BACA,CACA,kBAEA,8DAA0F,SAAa,oDAAoD,EAAW,qGACtK,aACA,cACA,eACA,CAAK,CAIL,OAHA,eACA,4BACA,4BACA,CACA,CACA,gBACA,GACA,6CAMA,qDACA,gBAMA,CAIA,kBAEA,QADA,SAA4B,GAAO,kEAAkE,EAAW,IAEhH,sBACA,wBACA,GACA,wBAGA,oDACA,YACA,CAAS,CAET,CACA,oBACA,wBACA,GACA,qCACA,0BACA,+BAGA,QACA,CACA,cAGA,mBACA,CACA,oBAEA,QADA,oBACA,SAMA,wBACA,GACA,qCACA,0BACA,8BACA,mBAGA,0BAIA,QACA,CACA,iBAAmD,GAAO,kEAAkE,EAAW,GACvI,CACA,QACA,mBAAoB,UAAe,EACnC,wCAEA,MADA,mDAEA,CACA,kBACA,IACA,GACA,wBAGA,oDACA,YACA,CAAS,EAET,mCACA,CACA,gBACA,eAAoB,GAAO,kEAAkE,EAAW,oKAExG,oBACA,0DACA,YAGA,CACA,cACA,iKACA,CACA,0BACA,iJACA,aACA,cACA,eACA,CAAK,EAEL,mCACA,cACA,0DACA,aACA,cACA,eACA,CAAK,EAEL,OADA,WACA,CACA,CACA,cACA,+FACA,CACA,cACA,iBACA,CACA,gBAKA,OADA,6CACA,iBACA,CACA,cACA,qEAAgH,qBAAmB,IACnI,gBAGA,qBAEA,kCAIA,8BAIA,wBAIS,WACT,6BAA4C,EAAW;AAAA,EAAK,EAAM,GAElE,CACA,aACA,MACA,2LACA,aACA,cACA,eACA,CAAS,CAET,CACA,cACA,IACA,0BAEA,IACA,8BACA,CAAM,SACN,UACA,CACA,eACA,CACA,cACA,0BAgBA,OAfA,cAIA,qCACA,SACA,CAAS,EAOT,wCAEA,SAEA,gBACA,wBACA,GACA,wBACA,oDACA,YACA,CAAS,CAET,CACA,cACA,oCACA,iFAGA,wCACA,IAEA,qBAIA,0DACc,yBAEd,+BACc,6BACd,SAGA,CACA,CACA,yCACA,sBAAiD,yBAA0C,WAC3F,sBAAiD,yBAA0C,WAC3F,sBAA+C,uBAAwC,WACvF,sBACA,eAGM,c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","sources":["webpack://@hijraah/web/../../node_modules/.pnpm/next@15.3.0-canary.31_@babe_be67f368de2727c847f3a61f5e6cf4fa/node_modules/next/dist/server/app-render/dynamic-rendering.js","webpack://@hijraah/web/../../node_modules/.pnpm/next@15.3.0-canary.31_@babe_be67f368de2727c847f3a61f5e6cf4fa/node_modules/next/dist/lib/metadata/metadata-constants.js","webpack://@hijraah/web/../../src/client/app-build-id.ts","webpack://@hijraah/web/../../src/client/app-find-source-map-url.ts","webpack://@hijraah/web/../../../../src/shared/lib/router/utils/app-paths.ts","webpack://@hijraah/web/../../../src/shared/lib/segment.ts","webpack://@hijraah/web/../../../src/client/components/nav-failure-handler.ts","webpack://@hijraah/web/../../../../src/client/components/http-access-fallback/http-access-fallback.ts","webpack://@hijraah/web/../../../src/client/components/unstable-rethrow.ts","webpack://@hijraah/web/../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_interop_require_default.js","webpack://@hijraah/web/../../../src/client/components/navigation-untracked.ts","webpack://@hijraah/web/../../../src/client/components/navigation.react-server.ts","webpack://@hijraah/web/../../../../src/client/components/router-reducer/router-reducer-types.ts","webpack://@hijraah/web/../../../src/client/components/hooks-server-context.ts","webpack://@hijraah/web/../../../../src/shared/lib/lazy-dynamic/bailout-to-csr.ts","webpack://@hijraah/web/../../../../src/client/components/router-reducer/create-href-from-url.ts","webpack://@hijraah/web/../../../src/client/components/app-router-headers.ts","webpack://@hijraah/web/../../../src/client/components/navigation.ts","webpack://@hijraah/web/../../../../src/shared/lib/utils/warn-once.ts","webpack://@hijraah/web/../../node_modules/.pnpm/next@15.3.0-canary.31_@babe_be67f368de2727c847f3a61f5e6cf4fa/node_modules/next/dist/server/route-modules/app-page/vendored/contexts/hooks-client-context.js","webpack://@hijraah/web/../../../src/shared/lib/hash.ts","webpack://@hijraah/web/../../node_modules/.pnpm/next@15.3.0-canary.31_@babe_be67f368de2727c847f3a61f5e6cf4fa/node_modules/next/dist/server/lib/router-utils/is-postpone.js?dd95","webpack://@hijraah/web/../../../../src/shared/lib/router/utils/interception-routes.ts","webpack://@hijraah/web/../../../src/client/components/not-found.ts","webpack://@hijraah/web/../../../src/client/components/redirect-error.ts","webpack://@hijraah/web/../../node_modules/.pnpm/next@15.3.0-canary.31_@babe_be67f368de2727c847f3a61f5e6cf4fa/node_modules/next/dist/server/dynamic-rendering-utils.js","webpack://@hijraah/web/../../node_modules/.pnpm/next@15.3.0-canary.31_@babe_be67f368de2727c847f3a61f5e6cf4fa/node_modules/next/dist/lib/scheduler.js","webpack://@hijraah/web/../../../../src/client/components/router-reducer/reducers/get-segment-value.ts","webpack://@hijraah/web/../../../src/client/components/bailout-to-client-rendering.ts","webpack://@hijraah/web/../../../src/client/components/unresolved-thenable.ts","webpack://@hijraah/web/../../../src/client/components/use-action-queue.ts","webpack://@hijraah/web/../../../src/client/components/redirect-boundary.tsx","webpack://@hijraah/web/../../../src/client/components/unstable-rethrow.server.ts","webpack://@hijraah/web/../../../src/client/components/redirect.ts","webpack://@hijraah/web/../../../../src/shared/lib/page-path/ensure-leading-slash.ts","webpack://@hijraah/web/../../src/client/app-call-server.ts","webpack://@hijraah/web/../../../src/client/components/redirect-status-code.ts","webpack://@hijraah/web/../../node_modules/.pnpm/next@15.3.0-canary.31_@babe_be67f368de2727c847f3a61f5e6cf4fa/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-server-dom-webpack-client-edge.js","webpack://@hijraah/web/../../../src/client/components/is-next-router-error.ts","webpack://@hijraah/web/../../../../src/client/components/router-reducer/set-cache-busting-search-param.ts","webpack://@hijraah/web/../../node_modules/.pnpm/next@15.3.0-canary.31_@babe_be67f368de2727c847f3a61f5e6cf4fa/node_modules/next/dist/server/route-modules/app-page/vendored/contexts/app-router-context.js","webpack://@hijraah/web/../../../src/client/components/error-boundary.tsx","webpack://@hijraah/web/../../src/client/flight-data-helpers.ts","webpack://@hijraah/web/../../../src/client/components/unauthorized.ts","webpack://@hijraah/web/../../../src/client/components/match-segments.ts","webpack://@hijraah/web/../../../src/shared/lib/is-thenable.ts","webpack://@hijraah/web/../../../../src/client/components/router-reducer/fetch-server-response.ts","webpack://@hijraah/web/../../node_modules/.pnpm/@swc+helpers@0.5.15/node_modules/@swc/helpers/esm/_interop_require_wildcard.js","webpack://@hijraah/web/../../node_modules/.pnpm/next@15.3.0-canary.31_@babe_be67f368de2727c847f3a61f5e6cf4fa/node_modules/next/dist/api/navigation.js","webpack://@hijraah/web/../../node_modules/.pnpm/next@15.3.0-canary.31_@babe_be67f368de2727c847f3a61f5e6cf4fa/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-dom.js","webpack://@hijraah/web/../../../src/client/components/forbidden.ts","webpack://@hijraah/web/../../../src/client/components/static-generation-bailout.ts","webpack://@hijraah/web/../../../../src/client/components/router-reducer/reducers/has-interception-route-in-current-tree.ts","webpack://@hijraah/web/../../../../src/client/components/router-reducer/create-router-cache-key.ts","webpack://@hijraah/web/../../node_modules/.pnpm/next@15.3.0-canary.31_@babe_be67f368de2727c847f3a61f5e6cf4fa/node_modules/next/dist/server/route-modules/app-page/vendored/contexts/server-inserted-html.js"],"sourcesContent":["/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */ \"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    Postpone: null,\n    abortAndThrowOnSynchronousRequestDataAccess: null,\n    abortOnSynchronousPlatformIOAccess: null,\n    accessedDynamicData: null,\n    annotateDynamicAccess: null,\n    consumeDynamicAccess: null,\n    createDynamicTrackingState: null,\n    createDynamicValidationState: null,\n    createHangingInputAbortSignal: null,\n    createPostponedAbortSignal: null,\n    formatDynamicAPIAccesses: null,\n    getFirstDynamicReason: null,\n    isDynamicPostpone: null,\n    isPrerenderInterruptedError: null,\n    markCurrentScopeAsDynamic: null,\n    postponeWithTracking: null,\n    throwIfDisallowedDynamic: null,\n    throwToInterruptStaticGeneration: null,\n    trackAllowedDynamicAccess: null,\n    trackDynamicDataInDynamicRender: null,\n    trackFallbackParamAccessed: null,\n    trackSynchronousPlatformIOAccessInDev: null,\n    trackSynchronousRequestDataAccessInDev: null,\n    useDynamicRouteParams: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    Postpone: function() {\n        return Postpone;\n    },\n    abortAndThrowOnSynchronousRequestDataAccess: function() {\n        return abortAndThrowOnSynchronousRequestDataAccess;\n    },\n    abortOnSynchronousPlatformIOAccess: function() {\n        return abortOnSynchronousPlatformIOAccess;\n    },\n    accessedDynamicData: function() {\n        return accessedDynamicData;\n    },\n    annotateDynamicAccess: function() {\n        return annotateDynamicAccess;\n    },\n    consumeDynamicAccess: function() {\n        return consumeDynamicAccess;\n    },\n    createDynamicTrackingState: function() {\n        return createDynamicTrackingState;\n    },\n    createDynamicValidationState: function() {\n        return createDynamicValidationState;\n    },\n    createHangingInputAbortSignal: function() {\n        return createHangingInputAbortSignal;\n    },\n    createPostponedAbortSignal: function() {\n        return createPostponedAbortSignal;\n    },\n    formatDynamicAPIAccesses: function() {\n        return formatDynamicAPIAccesses;\n    },\n    getFirstDynamicReason: function() {\n        return getFirstDynamicReason;\n    },\n    isDynamicPostpone: function() {\n        return isDynamicPostpone;\n    },\n    isPrerenderInterruptedError: function() {\n        return isPrerenderInterruptedError;\n    },\n    markCurrentScopeAsDynamic: function() {\n        return markCurrentScopeAsDynamic;\n    },\n    postponeWithTracking: function() {\n        return postponeWithTracking;\n    },\n    throwIfDisallowedDynamic: function() {\n        return throwIfDisallowedDynamic;\n    },\n    throwToInterruptStaticGeneration: function() {\n        return throwToInterruptStaticGeneration;\n    },\n    trackAllowedDynamicAccess: function() {\n        return trackAllowedDynamicAccess;\n    },\n    trackDynamicDataInDynamicRender: function() {\n        return trackDynamicDataInDynamicRender;\n    },\n    trackFallbackParamAccessed: function() {\n        return trackFallbackParamAccessed;\n    },\n    trackSynchronousPlatformIOAccessInDev: function() {\n        return trackSynchronousPlatformIOAccessInDev;\n    },\n    trackSynchronousRequestDataAccessInDev: function() {\n        return trackSynchronousRequestDataAccessInDev;\n    },\n    useDynamicRouteParams: function() {\n        return useDynamicRouteParams;\n    }\n});\nconst _react = /*#__PURE__*/ _interop_require_default(require(\"react\"));\nconst _hooksservercontext = require(\"../../client/components/hooks-server-context\");\nconst _staticgenerationbailout = require(\"../../client/components/static-generation-bailout\");\nconst _workunitasyncstorageexternal = require(\"./work-unit-async-storage.external\");\nconst _workasyncstorageexternal = require(\"../app-render/work-async-storage.external\");\nconst _dynamicrenderingutils = require(\"../dynamic-rendering-utils\");\nconst _metadataconstants = require(\"../../lib/metadata/metadata-constants\");\nconst _scheduler = require(\"../../lib/scheduler\");\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst hasPostpone = typeof _react.default.unstable_postpone === 'function';\nfunction createDynamicTrackingState(isDebugDynamicAccesses) {\n    return {\n        isDebugDynamicAccesses,\n        dynamicAccesses: [],\n        syncDynamicExpression: undefined,\n        syncDynamicErrorWithStack: null\n    };\n}\nfunction createDynamicValidationState() {\n    return {\n        hasSuspendedDynamic: false,\n        hasDynamicMetadata: false,\n        hasDynamicViewport: false,\n        hasSyncDynamicErrors: false,\n        dynamicErrors: []\n    };\n}\nfunction getFirstDynamicReason(trackingState) {\n    var _trackingState_dynamicAccesses_;\n    return (_trackingState_dynamicAccesses_ = trackingState.dynamicAccesses[0]) == null ? void 0 : _trackingState_dynamicAccesses_.expression;\n}\nfunction markCurrentScopeAsDynamic(store, workUnitStore, expression) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache' || workUnitStore.type === 'unstable-cache') {\n            // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n            // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n            // forbidden inside a cache scope.\n            return;\n        }\n    }\n    // If we're forcing dynamic rendering or we're forcing static rendering, we\n    // don't need to do anything here because the entire page is already dynamic\n    // or it's static and it should not throw or postpone here.\n    if (store.forceDynamic || store.forceStatic) return;\n    if (store.dynamicShouldError) {\n        throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n            value: \"E553\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n    if (workUnitStore) {\n        if (workUnitStore.type === 'prerender-ppr') {\n            postponeWithTracking(store.route, expression, workUnitStore.dynamicTracking);\n        } else if (workUnitStore.type === 'prerender-legacy') {\n            workUnitStore.revalidate = 0;\n            // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n            const err = Object.defineProperty(new _hooksservercontext.DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n                value: \"E550\",\n                enumerable: false,\n                configurable: true\n            });\n            store.dynamicUsageDescription = expression;\n            store.dynamicUsageStack = err.stack;\n            throw err;\n        } else if (process.env.NODE_ENV === 'development' && workUnitStore && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\nfunction trackFallbackParamAccessed(store, expression) {\n    const prerenderStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    if (!prerenderStore || prerenderStore.type !== 'prerender-ppr') return;\n    postponeWithTracking(store.route, expression, prerenderStore.dynamicTracking);\n}\nfunction throwToInterruptStaticGeneration(expression, store, prerenderStore) {\n    // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n    const err = Object.defineProperty(new _hooksservercontext.DynamicServerError(`Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`), \"__NEXT_ERROR_CODE\", {\n        value: \"E558\",\n        enumerable: false,\n        configurable: true\n    });\n    prerenderStore.revalidate = 0;\n    store.dynamicUsageDescription = expression;\n    store.dynamicUsageStack = err.stack;\n    throw err;\n}\nfunction trackDynamicDataInDynamicRender(_store, workUnitStore) {\n    if (workUnitStore) {\n        if (workUnitStore.type === 'cache' || workUnitStore.type === 'unstable-cache') {\n            // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n            // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n            // forbidden inside a cache scope.\n            return;\n        }\n        if (workUnitStore.type === 'prerender' || workUnitStore.type === 'prerender-legacy') {\n            workUnitStore.revalidate = 0;\n        }\n        if (process.env.NODE_ENV === 'development' && workUnitStore.type === 'request') {\n            workUnitStore.usedDynamic = true;\n        }\n    }\n}\n// Despite it's name we don't actually abort unless we have a controller to call abort on\n// There are times when we let a prerender run long to discover caches where we want the semantics\n// of tracking dynamic access without terminating the prerender early\nfunction abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore) {\n    const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`;\n    const error = createPrerenderInterruptedError(reason);\n    prerenderStore.controller.abort(error);\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nfunction abortOnSynchronousPlatformIOAccess(route, expression, errorWithStack, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        if (dynamicTracking.syncDynamicErrorWithStack === null) {\n            dynamicTracking.syncDynamicExpression = expression;\n            dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n        }\n    }\n    abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n}\nfunction trackSynchronousPlatformIOAccessInDev(requestStore) {\n    // We don't actually have a controller to abort but we do the semantic equivalent by\n    // advancing the request store out of prerender mode\n    requestStore.prerenderPhase = false;\n}\nfunction abortAndThrowOnSynchronousRequestDataAccess(route, expression, errorWithStack, prerenderStore) {\n    const prerenderSignal = prerenderStore.controller.signal;\n    if (prerenderSignal.aborted === false) {\n        // TODO it would be better to move this aborted check into the callsite so we can avoid making\n        // the error object when it isn't relevant to the aborting of the prerender however\n        // since we need the throw semantics regardless of whether we abort it is easier to land\n        // this way. See how this was handled with `abortOnSynchronousPlatformIOAccess` for a closer\n        // to ideal implementation\n        const dynamicTracking = prerenderStore.dynamicTracking;\n        if (dynamicTracking) {\n            if (dynamicTracking.syncDynamicErrorWithStack === null) {\n                dynamicTracking.syncDynamicExpression = expression;\n                dynamicTracking.syncDynamicErrorWithStack = errorWithStack;\n                if (prerenderStore.validating === true) {\n                    // We always log Request Access in dev at the point of calling the function\n                    // So we mark the dynamic validation as not requiring it to be printed\n                    dynamicTracking.syncDynamicLogged = true;\n                }\n            }\n        }\n        abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore);\n    }\n    throw createPrerenderInterruptedError(`Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`);\n}\nconst trackSynchronousRequestDataAccessInDev = trackSynchronousPlatformIOAccessInDev;\nfunction Postpone({ reason, route }) {\n    const prerenderStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n    const dynamicTracking = prerenderStore && prerenderStore.type === 'prerender-ppr' ? prerenderStore.dynamicTracking : null;\n    postponeWithTracking(route, reason, dynamicTracking);\n}\nfunction postponeWithTracking(route, expression, dynamicTracking) {\n    assertPostpone();\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            // When we aren't debugging, we don't need to create another error for the\n            // stack trace.\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n    _react.default.unstable_postpone(createPostponeReason(route, expression));\n}\nfunction createPostponeReason(route, expression) {\n    return `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` + `React throws this special object to indicate where. It should not be caught by ` + `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`;\n}\nfunction isDynamicPostpone(err) {\n    if (typeof err === 'object' && err !== null && typeof err.message === 'string') {\n        return isDynamicPostponeReason(err.message);\n    }\n    return false;\n}\nfunction isDynamicPostponeReason(reason) {\n    return reason.includes('needs to bail out of prerendering at this point because it used') && reason.includes('Learn more: https://nextjs.org/docs/messages/ppr-caught-error');\n}\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n    throw Object.defineProperty(new Error('Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'), \"__NEXT_ERROR_CODE\", {\n        value: \"E296\",\n        enumerable: false,\n        configurable: true\n    });\n}\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED';\nfunction createPrerenderInterruptedError(message) {\n    const error = Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.digest = NEXT_PRERENDER_INTERRUPTED;\n    return error;\n}\nfunction isPrerenderInterruptedError(error) {\n    return typeof error === 'object' && error !== null && error.digest === NEXT_PRERENDER_INTERRUPTED && 'name' in error && 'message' in error && error instanceof Error;\n}\nfunction accessedDynamicData(dynamicAccesses) {\n    return dynamicAccesses.length > 0;\n}\nfunction consumeDynamicAccess(serverDynamic, clientDynamic) {\n    // We mutate because we only call this once we are no longer writing\n    // to the dynamicTrackingState and it's more efficient than creating a new\n    // array.\n    serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses);\n    return serverDynamic.dynamicAccesses;\n}\nfunction formatDynamicAPIAccesses(dynamicAccesses) {\n    return dynamicAccesses.filter((access)=>typeof access.stack === 'string' && access.stack.length > 0).map(({ expression, stack })=>{\n        stack = stack.split('\\n')// Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4).filter((line)=>{\n            // Exclude Next.js internals from the stack trace.\n            if (line.includes('node_modules/next/')) {\n                return false;\n            }\n            // Exclude anonymous functions from the stack trace.\n            if (line.includes(' (<anonymous>)')) {\n                return false;\n            }\n            // Exclude Node.js internals from the stack trace.\n            if (line.includes(' (node:')) {\n                return false;\n            }\n            return true;\n        }).join('\\n');\n        return `Dynamic API Usage Debug - ${expression}:\\n${stack}`;\n    });\n}\nfunction assertPostpone() {\n    if (!hasPostpone) {\n        throw Object.defineProperty(new Error(`Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`), \"__NEXT_ERROR_CODE\", {\n            value: \"E224\",\n            enumerable: false,\n            configurable: true\n        });\n    }\n}\nfunction createPostponedAbortSignal(reason) {\n    assertPostpone();\n    const controller = new AbortController();\n    // We get our hands on a postpone instance by calling postpone and catching the throw\n    try {\n        _react.default.unstable_postpone(reason);\n    } catch (x) {\n        controller.abort(x);\n    }\n    return controller.signal;\n}\nfunction createHangingInputAbortSignal(workUnitStore) {\n    const controller = new AbortController();\n    if (workUnitStore.cacheSignal) {\n        // If we have a cacheSignal it means we're in a prospective render. If the input\n        // we're waiting on is coming from another cache, we do want to wait for it so that\n        // we can resolve this cache entry too.\n        workUnitStore.cacheSignal.inputReady().then(()=>{\n            controller.abort();\n        });\n    } else {\n        // Otherwise we're in the final render and we should already have all our caches\n        // filled. We might still be waiting on some microtasks so we wait one tick before\n        // giving up. When we give up, we still want to render the content of this cache\n        // as deeply as we can so that we can suspend as deeply as possible in the tree\n        // or not at all if we don't end up waiting for the input.\n        (0, _scheduler.scheduleOnNextTick)(()=>controller.abort());\n    }\n    return controller.signal;\n}\nfunction annotateDynamicAccess(expression, prerenderStore) {\n    const dynamicTracking = prerenderStore.dynamicTracking;\n    if (dynamicTracking) {\n        dynamicTracking.dynamicAccesses.push({\n            stack: dynamicTracking.isDebugDynamicAccesses ? new Error().stack : undefined,\n            expression\n        });\n    }\n}\nfunction useDynamicRouteParams(expression) {\n    const workStore = _workasyncstorageexternal.workAsyncStorage.getStore();\n    if (workStore && workStore.isStaticGeneration && workStore.fallbackRouteParams && workStore.fallbackRouteParams.size > 0) {\n        // There are fallback route params, we should track these as dynamic\n        // accesses.\n        const workUnitStore = _workunitasyncstorageexternal.workUnitAsyncStorage.getStore();\n        if (workUnitStore) {\n            // We're prerendering with dynamicIO or PPR or both\n            if (workUnitStore.type === 'prerender') {\n                // We are in a prerender with dynamicIO semantics\n                // We are going to hang here and never resolve. This will cause the currently\n                // rendering component to effectively be a dynamic hole\n                _react.default.use((0, _dynamicrenderingutils.makeHangingPromise)(workUnitStore.renderSignal, expression));\n            } else if (workUnitStore.type === 'prerender-ppr') {\n                // We're prerendering with PPR\n                postponeWithTracking(workStore.route, expression, workUnitStore.dynamicTracking);\n            } else if (workUnitStore.type === 'prerender-legacy') {\n                throwToInterruptStaticGeneration(expression, workStore, workUnitStore);\n            }\n        }\n    }\n}\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/;\nconst hasMetadataRegex = new RegExp(`\\\\n\\\\s+at ${_metadataconstants.METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasViewportRegex = new RegExp(`\\\\n\\\\s+at ${_metadataconstants.VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`);\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${_metadataconstants.OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`);\nfunction trackAllowedDynamicAccess(route, componentStack, dynamicValidation, serverDynamic, clientDynamic) {\n    if (hasOutletRegex.test(componentStack)) {\n        // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n        return;\n    } else if (hasMetadataRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicMetadata = true;\n        return;\n    } else if (hasViewportRegex.test(componentStack)) {\n        dynamicValidation.hasDynamicViewport = true;\n        return;\n    } else if (hasSuspenseRegex.test(componentStack)) {\n        dynamicValidation.hasSuspendedDynamic = true;\n        return;\n    } else if (serverDynamic.syncDynamicErrorWithStack || clientDynamic.syncDynamicErrorWithStack) {\n        dynamicValidation.hasSyncDynamicErrors = true;\n        return;\n    } else {\n        const message = `Route \"${route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. We don't have the exact line number added to error messages yet but you can see which component in the stack below. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`;\n        const error = createErrorWithComponentStack(message, componentStack);\n        dynamicValidation.dynamicErrors.push(error);\n        return;\n    }\n}\nfunction createErrorWithComponentStack(message, componentStack) {\n    const error = Object.defineProperty(new Error(message), \"__NEXT_ERROR_CODE\", {\n        value: \"E394\",\n        enumerable: false,\n        configurable: true\n    });\n    error.stack = 'Error: ' + message + componentStack;\n    return error;\n}\nfunction throwIfDisallowedDynamic(route, dynamicValidation, serverDynamic, clientDynamic) {\n    let syncError;\n    let syncExpression;\n    let syncLogged;\n    if (serverDynamic.syncDynamicErrorWithStack) {\n        syncError = serverDynamic.syncDynamicErrorWithStack;\n        syncExpression = serverDynamic.syncDynamicExpression;\n        syncLogged = serverDynamic.syncDynamicLogged === true;\n    } else if (clientDynamic.syncDynamicErrorWithStack) {\n        syncError = clientDynamic.syncDynamicErrorWithStack;\n        syncExpression = clientDynamic.syncDynamicExpression;\n        syncLogged = clientDynamic.syncDynamicLogged === true;\n    } else {\n        syncError = null;\n        syncExpression = undefined;\n        syncLogged = false;\n    }\n    if (dynamicValidation.hasSyncDynamicErrors && syncError) {\n        if (!syncLogged) {\n            // In dev we already log errors about sync dynamic access. But during builds we need to ensure\n            // the offending sync error is logged before we exit the build\n            console.error(syncError);\n        }\n        // The actual error should have been logged when the sync access ocurred\n        throw new _staticgenerationbailout.StaticGenBailoutError();\n    }\n    const dynamicErrors = dynamicValidation.dynamicErrors;\n    if (dynamicErrors.length) {\n        for(let i = 0; i < dynamicErrors.length; i++){\n            console.error(dynamicErrors[i]);\n        }\n        throw new _staticgenerationbailout.StaticGenBailoutError();\n    }\n    if (!dynamicValidation.hasSuspendedDynamic) {\n        if (dynamicValidation.hasDynamicMetadata) {\n            if (syncError) {\n                console.error(syncError);\n                throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route \"${route}\" has a \\`generateMetadata\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E608\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route \"${route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateMetadata\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E534\",\n                enumerable: false,\n                configurable: true\n            });\n        } else if (dynamicValidation.hasDynamicViewport) {\n            if (syncError) {\n                console.error(syncError);\n                throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route \"${route}\" has a \\`generateViewport\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E573\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route \"${route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateViewport\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`), \"__NEXT_ERROR_CODE\", {\n                value: \"E590\",\n                enumerable: false,\n                configurable: true\n            });\n        }\n    }\n}\n\n//# sourceMappingURL=dynamic-rendering.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    METADATA_BOUNDARY_NAME: null,\n    OUTLET_BOUNDARY_NAME: null,\n    VIEWPORT_BOUNDARY_NAME: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    METADATA_BOUNDARY_NAME: function() {\n        return METADATA_BOUNDARY_NAME;\n    },\n    OUTLET_BOUNDARY_NAME: function() {\n        return OUTLET_BOUNDARY_NAME;\n    },\n    VIEWPORT_BOUNDARY_NAME: function() {\n        return VIEWPORT_BOUNDARY_NAME;\n    }\n});\nconst METADATA_BOUNDARY_NAME = '__next_metadata_boundary__';\nconst VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__';\nconst OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__';\n\n//# sourceMappingURL=metadata-constants.js.map","// This gets assigned as a side-effect during app initialization. Because it\n// represents the build used to create the JS bundle, it should never change\n// after being set, so we store it in a global variable.\n//\n// When performing RSC requests, if the incoming data has a different build ID,\n// we perform an MPA navigation/refresh to load the updated build and ensure\n// that the client and server in sync.\n\n// Starts as an empty string. In practice, because setAppBuildId is called\n// during initialization before hydration starts, this will always get\n// reassigned to the actual build ID before it's ever needed by a navigation.\n// If for some reasons it didn't, due to a bug or race condition, then on\n// navigation the build comparision would fail and trigger an MPA navigation.\nlet globalBuildId: string = ''\n\nexport function setAppBuildId(buildId: string) {\n  globalBuildId = buildId\n}\n\nexport function getAppBuildId(): string {\n  return globalBuildId\n}\n","const basePath = process.env.__NEXT_ROUTER_BASEPATH || ''\nconst pathname = `${basePath}/__nextjs_source-map`\n\nexport const findSourceMapURL =\n  process.env.NODE_ENV === 'development'\n    ? function findSourceMapURL(filename: string): string | null {\n        if (filename === '') {\n          return null\n        }\n\n        if (\n          filename.startsWith(document.location.origin) &&\n          filename.includes('/_next/static')\n        ) {\n          // This is a request for a client chunk. This can only happen when\n          // using Turbopack. In this case, since we control how those source\n          // maps are generated, we can safely assume that the sourceMappingURL\n          // is relative to the filename, with an added `.map` extension. The\n          // browser can just request this file, and it gets served through the\n          // normal dev server, without the need to route this through\n          // the `/__nextjs_source-map` dev middleware.\n          return `${filename}.map`\n        }\n\n        const url = new URL(pathname, document.location.origin)\n        url.searchParams.set('filename', filename)\n\n        return url.href\n      }\n    : undefined\n","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash'\nimport { isGroupSegment } from '../../segment'\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */\nexport function normalizeAppPath(route: string) {\n  return ensureLeadingSlash(\n    route.split('/').reduce((pathname, segment, index, segments) => {\n      // Empty segments are ignored.\n      if (!segment) {\n        return pathname\n      }\n\n      // Groups are ignored.\n      if (isGroupSegment(segment)) {\n        return pathname\n      }\n\n      // Parallel segments are ignored.\n      if (segment[0] === '@') {\n        return pathname\n      }\n\n      // The last segment (if it's a leaf) should be ignored.\n      if (\n        (segment === 'page' || segment === 'route') &&\n        index === segments.length - 1\n      ) {\n        return pathname\n      }\n\n      return `${pathname}/${segment}`\n    }, '')\n  )\n}\n\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */\nexport function normalizeRscURL(url: string) {\n  return url.replace(\n    /\\.rsc($|\\?)/,\n    // $1 ensures `?` is preserved\n    '$1'\n  )\n}\n","import type { Segment } from '../../server/app-render/types'\n\nexport function isGroupSegment(segment: string) {\n  // Use array[0] for performant purpose\n  return segment[0] === '(' && segment.endsWith(')')\n}\n\nexport function isParallelRouteSegment(segment: string) {\n  return segment.startsWith('@') && segment !== '@children'\n}\n\nexport function addSearchParamsIfPageSegment(\n  segment: Segment,\n  searchParams: Record<string, string | string[] | undefined>\n) {\n  const isPageSegment = segment.includes(PAGE_SEGMENT_KEY)\n\n  if (isPageSegment) {\n    const stringifiedQuery = JSON.stringify(searchParams)\n    return stringifiedQuery !== '{}'\n      ? PAGE_SEGMENT_KEY + '?' + stringifiedQuery\n      : PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n\nexport const PAGE_SEGMENT_KEY = '__PAGE__'\nexport const DEFAULT_SEGMENT_KEY = '__DEFAULT__'\n","import { useEffect } from 'react'\nimport { createHrefFromUrl } from './router-reducer/create-href-from-url'\n\nexport function handleHardNavError(error: unknown): boolean {\n  if (\n    error &&\n    typeof window !== 'undefined' &&\n    window.next.__pendingUrl &&\n    createHrefFromUrl(new URL(window.location.href)) !==\n      createHrefFromUrl(window.next.__pendingUrl)\n  ) {\n    console.error(\n      `Error occurred during navigation, falling back to hard navigation`,\n      error\n    )\n    window.location.href = window.next.__pendingUrl.toString()\n    return true\n  }\n  return false\n}\n\nexport function useNavFailureHandler() {\n  if (process.env.__NEXT_APP_NAV_FAIL_HANDLING) {\n    // this if is only for DCE of the feature flag not conditional\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      const uncaughtExceptionHandler = (\n        evt: ErrorEvent | PromiseRejectionEvent\n      ) => {\n        const error = 'reason' in evt ? evt.reason : evt.error\n        // if we have an unhandled exception/rejection during\n        // a navigation we fall back to a hard navigation to\n        // attempt recovering to a good state\n        handleHardNavError(error)\n      }\n      window.addEventListener('unhandledrejection', uncaughtExceptionHandler)\n      window.addEventListener('error', uncaughtExceptionHandler)\n      return () => {\n        window.removeEventListener('error', uncaughtExceptionHandler)\n        window.removeEventListener(\n          'unhandledrejection',\n          uncaughtExceptionHandler\n        )\n      }\n    }, [])\n  }\n}\n","export const HTTPAccessErrorStatus = {\n  NOT_FOUND: 404,\n  FORBIDDEN: 403,\n  UNAUTHORIZED: 401,\n}\n\nconst ALLOWED_CODES = new Set(Object.values(HTTPAccessErrorStatus))\n\nexport const HTTP_ERROR_FALLBACK_ERROR_CODE = 'NEXT_HTTP_ERROR_FALLBACK'\n\nexport type HTTPAccessFallbackError = Error & {\n  digest: `${typeof HTTP_ERROR_FALLBACK_ERROR_CODE};${string}`\n}\n\n/**\n * Checks an error to determine if it's an error generated by\n * the HTTP navigation APIs `notFound()`, `forbidden()` or `unauthorized()`.\n *\n * @param error the error that may reference a HTTP access error\n * @returns true if the error is a HTTP access error\n */\nexport function isHTTPAccessFallbackError(\n  error: unknown\n): error is HTTPAccessFallbackError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n  const [prefix, httpStatus] = error.digest.split(';')\n\n  return (\n    prefix === HTTP_ERROR_FALLBACK_ERROR_CODE &&\n    ALLOWED_CODES.has(Number(httpStatus))\n  )\n}\n\nexport function getAccessFallbackHTTPStatus(\n  error: HTTPAccessFallbackError\n): number {\n  const httpStatus = error.digest.split(';')[1]\n  return Number(httpStatus)\n}\n\nexport function getAccessFallbackErrorTypeByStatus(\n  status: number\n): 'not-found' | 'forbidden' | 'unauthorized' | undefined {\n  switch (status) {\n    case 401:\n      return 'unauthorized'\n    case 403:\n      return 'forbidden'\n    case 404:\n      return 'not-found'\n    default:\n      return\n  }\n}\n","/**\n * This function should be used to rethrow internal Next.js errors so that they can be handled by the framework.\n * When wrapping an API that uses errors to interrupt control flow, you should use this function before you do any error handling.\n * This function will rethrow the error if it is a Next.js error so it can be handled, otherwise it will do nothing.\n *\n * Read more: [Next.js Docs: `unstable_rethrow`](https://nextjs.org/docs/app/api-reference/functions/unstable_rethrow)\n */\nexport const unstable_rethrow =\n  typeof window === 'undefined'\n    ? (\n        require('./unstable-rethrow.server') as typeof import('./unstable-rethrow.server')\n      ).unstable_rethrow\n    : (\n        require('./unstable-rethrow.browser') as typeof import('./unstable-rethrow.browser')\n      ).unstable_rethrow\n","function _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : { default: obj };\n}\nexport { _interop_require_default as _ };\n","import { useContext } from 'react'\nimport { PathnameContext } from '../../shared/lib/hooks-client-context.shared-runtime'\n\n/**\n * This checks to see if the current render has any unknown route parameters.\n * It's used to trigger a different render path in the error boundary.\n *\n * @returns true if there are any unknown route parameters, false otherwise\n */\nfunction hasFallbackRouteParams() {\n  if (typeof window === 'undefined') {\n    // AsyncLocalStorage should not be included in the client bundle.\n    const { workAsyncStorage } =\n      require('../../server/app-render/work-async-storage.external') as typeof import('../../server/app-render/work-async-storage.external')\n\n    const workStore = workAsyncStorage.getStore()\n    if (!workStore) return false\n\n    const { fallbackRouteParams } = workStore\n    if (!fallbackRouteParams || fallbackRouteParams.size === 0) return false\n\n    return true\n  }\n\n  return false\n}\n\n/**\n * This returns a `null` value if there are any unknown route parameters, and\n * otherwise returns the pathname from the context. This is an alternative to\n * `usePathname` that is used in the error boundary to avoid rendering the\n * error boundary when there are unknown route parameters. This doesn't throw\n * when accessed with unknown route parameters.\n *\n * @returns\n *\n * @internal\n */\nexport function useUntrackedPathname(): string | null {\n  // If there are any unknown route parameters we would typically throw\n  // an error, but this internal method allows us to return a null value instead\n  // for components that do not propagate the pathname to the static shell (like\n  // the error boundary).\n  if (hasFallbackRouteParams()) {\n    return null\n  }\n\n  // This shouldn't cause any issues related to conditional rendering because\n  // the environment will be consistent for the render.\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useContext(PathnameContext)\n}\n","/** @internal */\nclass ReadonlyURLSearchParamsError extends Error {\n  constructor() {\n    super(\n      'Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams'\n    )\n  }\n}\n\nclass ReadonlyURLSearchParams extends URLSearchParams {\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  append() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  delete() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  set() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n  /** @deprecated Method unavailable on `ReadonlyURLSearchParams`. Read more: https://nextjs.org/docs/app/api-reference/functions/use-search-params#updating-searchparams */\n  sort() {\n    throw new ReadonlyURLSearchParamsError()\n  }\n}\n\nexport { redirect, permanentRedirect } from './redirect'\nexport { RedirectType } from './redirect-error'\nexport { notFound } from './not-found'\nexport { forbidden } from './forbidden'\nexport { unauthorized } from './unauthorized'\nexport { unstable_rethrow } from './unstable-rethrow'\nexport { ReadonlyURLSearchParams }\n","import type { CacheNode } from '../../../shared/lib/app-router-context.shared-runtime'\nimport type {\n  FlightRouterState,\n  FlightSegmentPath,\n} from '../../../server/app-render/types'\nimport type { FetchServerResponseResult } from './fetch-server-response'\n\nexport const ACTION_REFRESH = 'refresh'\nexport const ACTION_NAVIGATE = 'navigate'\nexport const ACTION_RESTORE = 'restore'\nexport const ACTION_SERVER_PATCH = 'server-patch'\nexport const ACTION_PREFETCH = 'prefetch'\nexport const ACTION_HMR_REFRESH = 'hmr-refresh'\nexport const ACTION_SERVER_ACTION = 'server-action'\n\nexport type RouterChangeByServerResponse = ({\n  navigatedAt,\n  previousTree,\n  serverResponse,\n}: {\n  navigatedAt: number\n  previousTree: FlightRouterState\n  serverResponse: FetchServerResponseResult\n}) => void\n\nexport interface Mutable {\n  mpaNavigation?: boolean\n  patchedTree?: FlightRouterState\n  canonicalUrl?: string\n  scrollableSegments?: FlightSegmentPath[]\n  pendingPush?: boolean\n  cache?: CacheNode\n  prefetchCache?: AppRouterState['prefetchCache']\n  hashFragment?: string\n  shouldScroll?: boolean\n  preserveCustomHistoryState?: boolean\n  onlyHashChange?: boolean\n}\n\nexport interface ServerActionMutable extends Mutable {\n  inFlightServerAction?: Promise<any> | null\n}\n\n/**\n * Refresh triggers a refresh of the full page data.\n * - fetches the Flight data and fills rsc at the root of the cache.\n * - The router state is updated at the root.\n */\nexport interface RefreshAction {\n  type: typeof ACTION_REFRESH\n  origin: Location['origin']\n}\n\nexport interface HmrRefreshAction {\n  type: typeof ACTION_HMR_REFRESH\n  origin: Location['origin']\n}\n\nexport type ServerActionDispatcher = (\n  args: Omit<\n    ServerActionAction,\n    'type' | 'mutable' | 'navigate' | 'changeByServerResponse' | 'cache'\n  >\n) => void\n\nexport interface ServerActionAction {\n  type: typeof ACTION_SERVER_ACTION\n  actionId: string\n  actionArgs: any[]\n  resolve: (value: any) => void\n  reject: (reason?: any) => void\n}\n\n/**\n * Navigate triggers a navigation to the provided url. It supports two types: `push` and `replace`.\n *\n * `navigateType`:\n * - `push` - pushes a new history entry in the browser history\n * - `replace` - replaces the current history entry in the browser history\n *\n * Navigate has multiple cache heuristics:\n * - page was prefetched\n *  - Apply router state tree from prefetch\n *  - Apply Flight data from prefetch to the cache\n *  - If Flight data is a string, it's a redirect and the state is updated to trigger a redirect\n *  - Check if hard navigation is needed\n *    - Hard navigation happens when a dynamic parameter below the common layout changed\n *    - When hard navigation is needed the cache is invalidated below the flightSegmentPath\n *    - The missing cache nodes of the page will be fetched in layout-router and trigger the SERVER_PATCH action\n *  - If hard navigation is not needed\n *    - The cache is reused\n *    - If any cache nodes are missing they'll be fetched in layout-router and trigger the SERVER_PATCH action\n * - page was not prefetched\n *  - The navigate was called from `next/router` (`router.push()` / `router.replace()`) / `next/link` without prefetched data available (e.g. the prefetch didn't come back from the server before clicking the link)\n *    - Flight data is fetched in the reducer (suspends the reducer)\n *    - Router state tree is created based on Flight data\n *    - Cache is filled based on the Flight data\n *\n * Above steps explain 3 cases:\n * - `soft` - Reuses the existing cache and fetches missing nodes in layout-router.\n * - `hard` - Creates a new cache where cache nodes are removed below the common layout and fetches missing nodes in layout-router.\n * - `optimistic` (explicit no prefetch) - Creates a new cache and kicks off the data fetch in the reducer. The data fetch is awaited in the layout-router.\n */\nexport interface NavigateAction {\n  type: typeof ACTION_NAVIGATE\n  url: URL\n  isExternalUrl: boolean\n  locationSearch: Location['search']\n  navigateType: 'push' | 'replace'\n  shouldScroll: boolean\n  allowAliasing: boolean\n}\n\n/**\n * Restore applies the provided router state.\n * - Used for `popstate` (back/forward navigation) where a known router state has to be applied.\n * - Also used when syncing the router state with `pushState`/`replaceState` calls.\n * - Router state is applied as-is from the history state, if available.\n * - If the history state does not contain the router state, the existing router state is used.\n * - If any cache node is missing it will be fetched in layout-router during rendering and the server-patch case.\n * - If existing cache nodes match these are used.\n */\nexport interface RestoreAction {\n  type: typeof ACTION_RESTORE\n  url: URL\n  tree: FlightRouterState | undefined\n}\n\n/**\n * Server-patch applies the provided Flight data to the cache and router tree.\n * - Only triggered in layout-router.\n * - Creates a new cache and router state with the Flight data applied.\n */\nexport interface ServerPatchAction {\n  type: typeof ACTION_SERVER_PATCH\n  navigatedAt: number\n  serverResponse: FetchServerResponseResult\n  previousTree: FlightRouterState\n}\n\n/**\n * PrefetchKind defines the type of prefetching that should be done.\n * - `auto` - if the page is dynamic, prefetch the page data partially, if static prefetch the page data fully.\n * - `full` - prefetch the page data fully.\n * - `temporary` - a temporary prefetch entry is added to the cache, this is used when prefetch={false} is used in next/link or when you push a route programmatically.\n */\n\nexport enum PrefetchKind {\n  AUTO = 'auto',\n  FULL = 'full',\n  TEMPORARY = 'temporary',\n}\n\n/**\n * Prefetch adds the provided FlightData to the prefetch cache\n * - Creates the router state tree based on the patch in FlightData\n * - Adds the FlightData to the prefetch cache\n * - In ACTION_NAVIGATE the prefetch cache is checked and the router state tree and FlightData are applied.\n */\nexport interface PrefetchAction {\n  type: typeof ACTION_PREFETCH\n  url: URL\n  kind: PrefetchKind\n}\n\nexport interface PushRef {\n  /**\n   * If the app-router should push a new history entry in app-router's useEffect()\n   */\n  pendingPush: boolean\n  /**\n   * Multi-page navigation through location.href.\n   */\n  mpaNavigation: boolean\n  /**\n   * Skip applying the router state to the browser history state.\n   */\n  preserveCustomHistoryState: boolean\n}\n\nexport type FocusAndScrollRef = {\n  /**\n   * If focus and scroll should be set in the layout-router's useEffect()\n   */\n  apply: boolean\n  /**\n   * The hash fragment that should be scrolled to.\n   */\n  hashFragment: string | null\n  /**\n   * The paths of the segments that should be focused.\n   */\n  segmentPaths: FlightSegmentPath[]\n  /**\n   * If only the URLs hash fragment changed\n   */\n  onlyHashChange: boolean\n}\n\nexport type PrefetchCacheEntry = {\n  treeAtTimeOfPrefetch: FlightRouterState\n  data: Promise<FetchServerResponseResult>\n  kind: PrefetchKind\n  prefetchTime: number\n  staleTime: number\n  lastUsedTime: number | null\n  key: string\n  status: PrefetchCacheEntryStatus\n  url: URL\n}\n\nexport enum PrefetchCacheEntryStatus {\n  fresh = 'fresh',\n  reusable = 'reusable',\n  expired = 'expired',\n  stale = 'stale',\n}\n\n/**\n * Handles keeping the state of app-router.\n */\nexport type AppRouterState = {\n  /**\n   * The router state, this is written into the history state in app-router using replaceState/pushState.\n   * - Has to be serializable as it is written into the history state.\n   * - Holds which segments and parallel routes are shown on the screen.\n   */\n  tree: FlightRouterState\n  /**\n   * The cache holds React nodes for every segment that is shown on screen as well as previously shown segments.\n   * It also holds in-progress data requests.\n   * Prefetched data is stored separately in `prefetchCache`, that is applied during ACTION_NAVIGATE.\n   */\n  cache: CacheNode\n  /**\n   * Cache that holds prefetched Flight responses keyed by url.\n   */\n  prefetchCache: Map<string, PrefetchCacheEntry>\n  /**\n   * Decides if the update should create a new history entry and if the navigation has to trigger a browser navigation.\n   */\n  pushRef: PushRef\n  /**\n   * Decides if the update should apply scroll and focus management.\n   */\n  focusAndScrollRef: FocusAndScrollRef\n  /**\n   * The canonical url that is pushed/replaced.\n   * - This is the url you see in the browser.\n   */\n  canonicalUrl: string\n  /**\n   * The underlying \"url\" representing the UI state, which is used for intercepting routes.\n   */\n  nextUrl: string | null\n}\n\nexport type ReadonlyReducerState = Readonly<AppRouterState>\nexport type ReducerState = Promise<AppRouterState> | AppRouterState\nexport type ReducerActions = Readonly<\n  | RefreshAction\n  | NavigateAction\n  | RestoreAction\n  | ServerPatchAction\n  | PrefetchAction\n  | HmrRefreshAction\n  | ServerActionAction\n>\n","const DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE'\n\nexport class DynamicServerError extends Error {\n  digest: typeof DYNAMIC_ERROR_CODE = DYNAMIC_ERROR_CODE\n\n  constructor(public readonly description: string) {\n    super(`Dynamic server usage: ${description}`)\n  }\n}\n\nexport function isDynamicServerError(err: unknown): err is DynamicServerError {\n  if (\n    typeof err !== 'object' ||\n    err === null ||\n    !('digest' in err) ||\n    typeof err.digest !== 'string'\n  ) {\n    return false\n  }\n\n  return err.digest === DYNAMIC_ERROR_CODE\n}\n","// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING'\n\n/** An error that should be thrown when we want to bail out to client-side rendering. */\nexport class BailoutToCSRError extends Error {\n  public readonly digest = BAILOUT_TO_CSR\n\n  constructor(public readonly reason: string) {\n    super(`Bail out to client-side rendering: ${reason}`)\n  }\n}\n\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */\nexport function isBailoutToCSRError(err: unknown): err is BailoutToCSRError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === BAILOUT_TO_CSR\n}\n","export function createHrefFromUrl(\n  url: Pick<URL, 'pathname' | 'search' | 'hash'>,\n  includeHash: boolean = true\n): string {\n  return url.pathname + url.search + (includeHash ? url.hash : '')\n}\n","export const RSC_HEADER = 'RSC' as const\nexport const ACTION_HEADER = 'Next-Action' as const\n// TODO: Instead of sending the full router state, we only need to send the\n// segment path. Saves bytes. Then we could also use this field for segment\n// prefetches, which also need to specify a particular segment.\nexport const NEXT_ROUTER_STATE_TREE_HEADER = 'Next-Router-State-Tree' as const\nexport const NEXT_ROUTER_PREFETCH_HEADER = 'Next-Router-Prefetch' as const\n// This contains the path to the segment being prefetched.\n// TODO: If we change Next-Router-State-Tree to be a segment path, we can use\n// that instead. Then Next-Router-Prefetch and Next-Router-Segment-Prefetch can\n// be merged into a single enum.\nexport const NEXT_ROUTER_SEGMENT_PREFETCH_HEADER =\n  'Next-Router-Segment-Prefetch' as const\nexport const NEXT_HMR_REFRESH_HEADER = 'Next-HMR-Refresh' as const\nexport const NEXT_URL = 'Next-Url' as const\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component' as const\n\nexport const FLIGHT_HEADERS = [\n  RSC_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_HMR_REFRESH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n] as const\n\nexport const NEXT_RSC_UNION_QUERY = '_rsc' as const\n\nexport const NEXT_ROUTER_STALE_TIME_HEADER = 'x-nextjs-stale-time' as const\nexport const NEXT_DID_POSTPONE_HEADER = 'x-nextjs-postponed' as const\nexport const NEXT_REWRITTEN_PATH_HEADER = 'x-nextjs-rewritten-path' as const\nexport const NEXT_REWRITTEN_QUERY_HEADER = 'x-nextjs-rewritten-query' as const\nexport const NEXT_IS_PRERENDER_HEADER = 'x-nextjs-prerender' as const\n","import type { FlightRouterState } from '../../server/app-render/types'\nimport type { Params } from '../../server/request/params'\n\nimport { useContext, useMemo } from 'react'\nimport {\n  AppRouterContext,\n  LayoutRouterContext,\n  type AppRouterInstance,\n} from '../../shared/lib/app-router-context.shared-runtime'\nimport {\n  SearchParamsContext,\n  PathnameContext,\n  PathParamsContext,\n} from '../../shared/lib/hooks-client-context.shared-runtime'\nimport { getSegmentValue } from './router-reducer/reducers/get-segment-value'\nimport { PAGE_SEGMENT_KEY, DEFAULT_SEGMENT_KEY } from '../../shared/lib/segment'\nimport { ReadonlyURLSearchParams } from './navigation.react-server'\n\nconst useDynamicRouteParams =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/dynamic-rendering') as typeof import('../../server/app-render/dynamic-rendering')\n      ).useDynamicRouteParams\n    : undefined\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you *read* the current URL's search parameters.\n *\n * Learn more about [`URLSearchParams` on MDN](https://developer.mozilla.org/docs/Web/API/URLSearchParams)\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useSearchParams } from 'next/navigation'\n *\n * export default function Page() {\n *   const searchParams = useSearchParams()\n *   searchParams.get('foo') // returns 'bar' when ?foo=bar\n *   // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSearchParams`](https://nextjs.org/docs/app/api-reference/functions/use-search-params)\n */\n// Client components API\nexport function useSearchParams(): ReadonlyURLSearchParams {\n  const searchParams = useContext(SearchParamsContext)\n\n  // In the case where this is `null`, the compat types added in\n  // `next-env.d.ts` will add a new overload that changes the return type to\n  // include `null`.\n  const readonlySearchParams = useMemo(() => {\n    if (!searchParams) {\n      // When the router is not ready in pages, we won't have the search params\n      // available.\n      return null\n    }\n\n    return new ReadonlyURLSearchParams(searchParams)\n  }, [searchParams]) as ReadonlyURLSearchParams\n\n  if (typeof window === 'undefined') {\n    // AsyncLocalStorage should not be included in the client bundle.\n    const { bailoutToClientRendering } =\n      require('./bailout-to-client-rendering') as typeof import('./bailout-to-client-rendering')\n    // TODO-APP: handle dynamic = 'force-static' here and on the client\n    bailoutToClientRendering('useSearchParams()')\n  }\n\n  return readonlySearchParams\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the current URL's pathname.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { usePathname } from 'next/navigation'\n *\n * export default function Page() {\n *  const pathname = usePathname() // returns \"/dashboard\" on /dashboard?foo=bar\n *  // ...\n * }\n * ```\n *\n * Read more: [Next.js Docs: `usePathname`](https://nextjs.org/docs/app/api-reference/functions/use-pathname)\n */\n// Client components API\nexport function usePathname(): string {\n  useDynamicRouteParams?.('usePathname()')\n\n  // In the case where this is `null`, the compat types added in `next-env.d.ts`\n  // will add a new overload that changes the return type to include `null`.\n  return useContext(PathnameContext) as string\n}\n\n// Client components API\nexport {\n  ServerInsertedHTMLContext,\n  useServerInsertedHTML,\n} from '../../shared/lib/server-inserted-html.shared-runtime'\n\n/**\n *\n * This hook allows you to programmatically change routes inside [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components).\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useRouter } from 'next/navigation'\n *\n * export default function Page() {\n *  const router = useRouter()\n *  // ...\n *  router.push('/dashboard') // Navigate to /dashboard\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useRouter`](https://nextjs.org/docs/app/api-reference/functions/use-router)\n */\n// Client components API\nexport function useRouter(): AppRouterInstance {\n  const router = useContext(AppRouterContext)\n  if (router === null) {\n    throw new Error('invariant expected app router to be mounted')\n  }\n\n  return router\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read a route's dynamic params filled in by the current URL.\n *\n * @example\n * ```ts\n * \"use client\"\n * import { useParams } from 'next/navigation'\n *\n * export default function Page() {\n *   // on /dashboard/[team] where pathname is /dashboard/nextjs\n *   const { team } = useParams() // team === \"nextjs\"\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useParams`](https://nextjs.org/docs/app/api-reference/functions/use-params)\n */\n// Client components API\nexport function useParams<T extends Params = Params>(): T {\n  useDynamicRouteParams?.('useParams()')\n\n  return useContext(PathParamsContext) as T\n}\n\n/** Get the canonical parameters from the current level to the leaf node. */\n// Client components API\nfunction getSelectedLayoutSegmentPath(\n  tree: FlightRouterState,\n  parallelRouteKey: string,\n  first = true,\n  segmentPath: string[] = []\n): string[] {\n  let node: FlightRouterState\n  if (first) {\n    // Use the provided parallel route key on the first parallel route\n    node = tree[1][parallelRouteKey]\n  } else {\n    // After first parallel route prefer children, if there's no children pick the first parallel route.\n    const parallelRoutes = tree[1]\n    node = parallelRoutes.children ?? Object.values(parallelRoutes)[0]\n  }\n\n  if (!node) return segmentPath\n  const segment = node[0]\n\n  let segmentValue = getSegmentValue(segment)\n\n  if (!segmentValue || segmentValue.startsWith(PAGE_SEGMENT_KEY)) {\n    return segmentPath\n  }\n\n  segmentPath.push(segmentValue)\n\n  return getSelectedLayoutSegmentPath(\n    node,\n    parallelRouteKey,\n    false,\n    segmentPath\n  )\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segments **below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n *\n * import { useSelectedLayoutSegments } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segments = useSelectedLayoutSegments()\n *\n *   return (\n *     <ul>\n *       {segments.map((segment, index) => (\n *         <li key={index}>{segment}</li>\n *       ))}\n *     </ul>\n *   )\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegments`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segments)\n */\n// Client components API\nexport function useSelectedLayoutSegments(\n  parallelRouteKey: string = 'children'\n): string[] {\n  useDynamicRouteParams?.('useSelectedLayoutSegments()')\n\n  const context = useContext(LayoutRouterContext)\n  // @ts-expect-error This only happens in `pages`. Type is overwritten in navigation.d.ts\n  if (!context) return null\n\n  return getSelectedLayoutSegmentPath(context.parentTree, parallelRouteKey)\n}\n\n/**\n * A [Client Component](https://nextjs.org/docs/app/building-your-application/rendering/client-components) hook\n * that lets you read the active route segment **one level below** the Layout it is called from.\n *\n * @example\n * ```ts\n * 'use client'\n * import { useSelectedLayoutSegment } from 'next/navigation'\n *\n * export default function ExampleClientComponent() {\n *   const segment = useSelectedLayoutSegment()\n *\n *   return <p>Active segment: {segment}</p>\n * }\n * ```\n *\n * Read more: [Next.js Docs: `useSelectedLayoutSegment`](https://nextjs.org/docs/app/api-reference/functions/use-selected-layout-segment)\n */\n// Client components API\nexport function useSelectedLayoutSegment(\n  parallelRouteKey: string = 'children'\n): string | null {\n  useDynamicRouteParams?.('useSelectedLayoutSegment()')\n\n  const selectedLayoutSegments = useSelectedLayoutSegments(parallelRouteKey)\n\n  if (!selectedLayoutSegments || selectedLayoutSegments.length === 0) {\n    return null\n  }\n\n  const selectedLayoutSegment =\n    parallelRouteKey === 'children'\n      ? selectedLayoutSegments[0]\n      : selectedLayoutSegments[selectedLayoutSegments.length - 1]\n\n  // if the default slot is showing, we return null since it's not technically \"selected\" (it's a fallback)\n  // and returning an internal value like `__DEFAULT__` would be confusing.\n  return selectedLayoutSegment === DEFAULT_SEGMENT_KEY\n    ? null\n    : selectedLayoutSegment\n}\n\n// Shared components APIs\nexport {\n  notFound,\n  forbidden,\n  unauthorized,\n  redirect,\n  permanentRedirect,\n  RedirectType,\n  ReadonlyURLSearchParams,\n  unstable_rethrow,\n} from './navigation.react-server'\n","let warnOnce = (_: string) => {}\nif (process.env.NODE_ENV !== 'production') {\n  const warnings = new Set<string>()\n  warnOnce = (msg: string) => {\n    if (!warnings.has(msg)) {\n      console.warn(msg)\n    }\n    warnings.add(msg)\n  }\n}\n\nexport { warnOnce }\n","\"use strict\";\nmodule.exports = require('../../module.compiled').vendored['contexts'].HooksClientContext;\n\n//# sourceMappingURL=hooks-client-context.js.map","// http://www.cse.yorku.ca/~oz/hash.html\n// More specifically, 32-bit hash via djbxor\n// (ref: https://gist.github.com/eplawless/52813b1d8ad9af510d85?permalink_comment_id=3367765#gistcomment-3367765)\n// This is due to number type differences between rust for turbopack to js number types,\n// where rust does not have easy way to repreesnt js's 53-bit float number type for the matching\n// overflow behavior. This is more `correct` in terms of having canonical hash across different runtime / implementation\n// as can gaurantee determinstic output from 32bit hash.\nexport function djb2Hash(str: string) {\n  let hash = 5381\n  for (let i = 0; i < str.length; i++) {\n    const char = str.charCodeAt(i)\n    hash = ((hash << 5) + hash + char) & 0xffffffff\n  }\n  return hash >>> 0\n}\n\nexport function hexHash(str: string) {\n  return djb2Hash(str).toString(36).slice(0, 5)\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"isPostpone\", {\n    enumerable: true,\n    get: function() {\n        return isPostpone;\n    }\n});\nconst REACT_POSTPONE_TYPE = Symbol.for('react.postpone');\nfunction isPostpone(error) {\n    return typeof error === 'object' && error !== null && error.$$typeof === REACT_POSTPONE_TYPE;\n}\n\n//# sourceMappingURL=is-postpone.js.map","import { normalizeAppPath } from './app-paths'\n\n// order matters here, the first match will be used\nexport const INTERCEPTION_ROUTE_MARKERS = [\n  '(..)(..)',\n  '(.)',\n  '(..)',\n  '(...)',\n] as const\n\nexport function isInterceptionRouteAppPath(path: string): boolean {\n  // TODO-APP: add more serious validation\n  return (\n    path\n      .split('/')\n      .find((segment) =>\n        INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n      ) !== undefined\n  )\n}\n\nexport function extractInterceptionRouteInformation(path: string) {\n  let interceptingRoute: string | undefined,\n    marker: (typeof INTERCEPTION_ROUTE_MARKERS)[number] | undefined,\n    interceptedRoute: string | undefined\n\n  for (const segment of path.split('/')) {\n    marker = INTERCEPTION_ROUTE_MARKERS.find((m) => segment.startsWith(m))\n    if (marker) {\n      ;[interceptingRoute, interceptedRoute] = path.split(marker, 2)\n      break\n    }\n  }\n\n  if (!interceptingRoute || !marker || !interceptedRoute) {\n    throw new Error(\n      `Invalid interception route: ${path}. Must be in the format /<intercepting route>/(..|...|..)(..)/<intercepted route>`\n    )\n  }\n\n  interceptingRoute = normalizeAppPath(interceptingRoute) // normalize the path, e.g. /(blog)/feed -> /feed\n\n  switch (marker) {\n    case '(.)':\n      // (.) indicates that we should match with sibling routes, so we just need to append the intercepted route to the intercepting route\n      if (interceptingRoute === '/') {\n        interceptedRoute = `/${interceptedRoute}`\n      } else {\n        interceptedRoute = interceptingRoute + '/' + interceptedRoute\n      }\n      break\n    case '(..)':\n      // (..) indicates that we should match at one level up, so we need to remove the last segment of the intercepting route\n      if (interceptingRoute === '/') {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..) marker at the root level, use (.) instead.`\n        )\n      }\n      interceptedRoute = interceptingRoute\n        .split('/')\n        .slice(0, -1)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    case '(...)':\n      // (...) will match the route segment in the root directory, so we need to use the root directory to prepend the intercepted route\n      interceptedRoute = '/' + interceptedRoute\n      break\n    case '(..)(..)':\n      // (..)(..) indicates that we should match at two levels up, so we need to remove the last two segments of the intercepting route\n\n      const splitInterceptingRoute = interceptingRoute.split('/')\n      if (splitInterceptingRoute.length <= 2) {\n        throw new Error(\n          `Invalid interception route: ${path}. Cannot use (..)(..) marker at the root level or one level up.`\n        )\n      }\n\n      interceptedRoute = splitInterceptingRoute\n        .slice(0, -2)\n        .concat(interceptedRoute)\n        .join('/')\n      break\n    default:\n      throw new Error('Invariant: unexpected marker')\n  }\n\n  return { interceptingRoute, interceptedRoute }\n}\n","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n/**\n * This function allows you to render the [not-found.js file](https://nextjs.org/docs/app/api-reference/file-conventions/not-found)\n * within a route segment as well as inject a tag.\n *\n * `notFound()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a `<meta name=\"robots\" content=\"noindex\" />` meta tag and set the status code to 404.\n * - In a Route Handler or Server Action, it will serve a 404 to the caller.\n *\n * Read more: [Next.js Docs: `notFound`](https://nextjs.org/docs/app/api-reference/functions/not-found)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};404`\n\nexport function notFound(): never {\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n\n  throw error\n}\n","import { RedirectStatusCode } from './redirect-status-code'\n\nexport const REDIRECT_ERROR_CODE = 'NEXT_REDIRECT'\n\nexport enum RedirectType {\n  push = 'push',\n  replace = 'replace',\n}\n\nexport type RedirectError = Error & {\n  digest: `${typeof REDIRECT_ERROR_CODE};${RedirectType};${string};${RedirectStatusCode};`\n}\n\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */\nexport function isRedirectError(error: unknown): error is RedirectError {\n  if (\n    typeof error !== 'object' ||\n    error === null ||\n    !('digest' in error) ||\n    typeof error.digest !== 'string'\n  ) {\n    return false\n  }\n\n  const digest = error.digest.split(';')\n  const [errorCode, type] = digest\n  const destination = digest.slice(2, -2).join(';')\n  const status = digest.at(-2)\n\n  const statusCode = Number(status)\n\n  return (\n    errorCode === REDIRECT_ERROR_CODE &&\n    (type === 'replace' || type === 'push') &&\n    typeof destination === 'string' &&\n    !isNaN(statusCode) &&\n    statusCode in RedirectStatusCode\n  )\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    isHangingPromiseRejectionError: null,\n    makeHangingPromise: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    isHangingPromiseRejectionError: function() {\n        return isHangingPromiseRejectionError;\n    },\n    makeHangingPromise: function() {\n        return makeHangingPromise;\n    }\n});\nfunction isHangingPromiseRejectionError(err) {\n    if (typeof err !== 'object' || err === null || !('digest' in err)) {\n        return false;\n    }\n    return err.digest === HANGING_PROMISE_REJECTION;\n}\nconst HANGING_PROMISE_REJECTION = 'HANGING_PROMISE_REJECTION';\nclass HangingPromiseRejectionError extends Error {\n    constructor(expression){\n        super(`During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context.`), this.expression = expression, this.digest = HANGING_PROMISE_REJECTION;\n    }\n}\nconst abortListenersBySignal = new WeakMap();\nfunction makeHangingPromise(signal, expression) {\n    if (signal.aborted) {\n        return Promise.reject(new HangingPromiseRejectionError(expression));\n    } else {\n        const hangingPromise = new Promise((_, reject)=>{\n            const boundRejection = reject.bind(null, new HangingPromiseRejectionError(expression));\n            let currentListeners = abortListenersBySignal.get(signal);\n            if (currentListeners) {\n                currentListeners.push(boundRejection);\n            } else {\n                const listeners = [\n                    boundRejection\n                ];\n                abortListenersBySignal.set(signal, listeners);\n                signal.addEventListener('abort', ()=>{\n                    for(let i = 0; i < listeners.length; i++){\n                        listeners[i]();\n                    }\n                }, {\n                    once: true\n                });\n            }\n        });\n        // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n        // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n        // your own promise out of it you'll need to ensure you handle the error when it rejects.\n        hangingPromise.catch(ignoreReject);\n        return hangingPromise;\n    }\n}\nfunction ignoreReject() {}\n\n//# sourceMappingURL=dynamic-rendering-utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    atLeastOneTask: null,\n    scheduleImmediate: null,\n    scheduleOnNextTick: null,\n    waitAtLeastOneReactRenderTask: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    atLeastOneTask: function() {\n        return atLeastOneTask;\n    },\n    scheduleImmediate: function() {\n        return scheduleImmediate;\n    },\n    scheduleOnNextTick: function() {\n        return scheduleOnNextTick;\n    },\n    waitAtLeastOneReactRenderTask: function() {\n        return waitAtLeastOneReactRenderTask;\n    }\n});\nconst scheduleOnNextTick = (cb)=>{\n    // We use Promise.resolve().then() here so that the operation is scheduled at\n    // the end of the promise job queue, we then add it to the next process tick\n    // to ensure it's evaluated afterwards.\n    //\n    // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n    //\n    Promise.resolve().then(()=>{\n        if (process.env.NEXT_RUNTIME === 'edge') {\n            setTimeout(cb, 0);\n        } else {\n            process.nextTick(cb);\n        }\n    });\n};\nconst scheduleImmediate = (cb)=>{\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        setTimeout(cb, 0);\n    } else {\n        setImmediate(cb);\n    }\n};\nfunction atLeastOneTask() {\n    return new Promise((resolve)=>scheduleImmediate(resolve));\n}\nfunction waitAtLeastOneReactRenderTask() {\n    if (process.env.NEXT_RUNTIME === 'edge') {\n        return new Promise((r)=>setTimeout(r, 0));\n    } else {\n        return new Promise((r)=>setImmediate(r));\n    }\n}\n\n//# sourceMappingURL=scheduler.js.map","import type { Segment } from '../../../../server/app-render/types'\n\nexport function getSegmentValue(segment: Segment) {\n  return Array.isArray(segment) ? segment[1] : segment\n}\n","import { BailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { workAsyncStorage } from '../../server/app-render/work-async-storage.external'\n\nexport function bailoutToClientRendering(reason: string): void | never {\n  const workStore = workAsyncStorage.getStore()\n\n  if (workStore?.forceStatic) return\n\n  if (workStore?.isStaticGeneration) throw new BailoutToCSRError(reason)\n}\n","/**\n * Create a \"Thenable\" that does not resolve. This is used to suspend indefinitely when data is not available yet.\n */\nexport const unresolvedThenable = {\n  then: () => {},\n} as PromiseLike<void>\n","import type { Dispatch } from 'react'\nimport React, { use } from 'react'\nimport { isThenable } from '../../shared/lib/is-thenable'\nimport type { AppRouterActionQueue } from './app-router-instance'\nimport type {\n  AppRouterState,\n  ReducerActions,\n  ReducerState,\n} from './router-reducer/router-reducer-types'\n\n// The app router state lives outside of React, so we can import the dispatch\n// method directly wherever we need it, rather than passing it around via props\n// or context.\nlet dispatch: Dispatch<ReducerActions> | null = null\n\nexport function dispatchAppRouterAction(action: ReducerActions) {\n  if (dispatch === null) {\n    throw new Error(\n      'Internal Next.js error: Router action dispatched before initialization.'\n    )\n  }\n  dispatch(action)\n}\n\nexport function useActionQueue(\n  actionQueue: AppRouterActionQueue\n): AppRouterState {\n  const [state, setState] = React.useState<ReducerState>(actionQueue.state)\n\n  // Because of a known issue that requires to decode Flight streams inside the\n  // render phase, we have to be a bit clever and assign the dispatch method to\n  // a module-level variable upon initialization. The useState hook in this\n  // module only exists to synchronize state that lives outside of React.\n  // Ideally, what we'd do instead is pass the state as a prop to root.render;\n  // this is conceptually how we're modeling the app router state, despite the\n  // weird implementation details.\n  if (process.env.NODE_ENV !== 'production') {\n    const useSyncDevRenderIndicator =\n      require('./react-dev-overlay/utils/dev-indicator/use-sync-dev-render-indicator')\n        .useSyncDevRenderIndicator as typeof import('./react-dev-overlay/utils/dev-indicator/use-sync-dev-render-indicator').useSyncDevRenderIndicator\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const syncDevRenderIndicator = useSyncDevRenderIndicator()\n\n    dispatch = (action: ReducerActions) => {\n      syncDevRenderIndicator(() => {\n        actionQueue.dispatch(action, setState)\n      })\n    }\n  } else {\n    dispatch = (action: ReducerActions) =>\n      actionQueue.dispatch(action, setState)\n  }\n\n  return isThenable(state) ? use(state) : state\n}\n","'use client'\nimport React, { useEffect } from 'react'\nimport type { AppRouterInstance } from '../../shared/lib/app-router-context.shared-runtime'\nimport { useRouter } from './navigation'\nimport { getRedirectTypeFromError, getURLFromRedirectError } from './redirect'\nimport { RedirectType, isRedirectError } from './redirect-error'\n\ninterface RedirectBoundaryProps {\n  router: AppRouterInstance\n  children: React.ReactNode\n}\n\nfunction HandleRedirect({\n  redirect,\n  reset,\n  redirectType,\n}: {\n  redirect: string\n  redirectType: RedirectType\n  reset: () => void\n}) {\n  const router = useRouter()\n\n  useEffect(() => {\n    React.startTransition(() => {\n      if (redirectType === RedirectType.push) {\n        router.push(redirect, {})\n      } else {\n        router.replace(redirect, {})\n      }\n      reset()\n    })\n  }, [redirect, redirectType, reset, router])\n\n  return null\n}\n\nexport class RedirectErrorBoundary extends React.Component<\n  RedirectBoundaryProps,\n  { redirect: string | null; redirectType: RedirectType | null }\n> {\n  constructor(props: RedirectBoundaryProps) {\n    super(props)\n    this.state = { redirect: null, redirectType: null }\n  }\n\n  static getDerivedStateFromError(error: any) {\n    if (isRedirectError(error)) {\n      const url = getURLFromRedirectError(error)\n      const redirectType = getRedirectTypeFromError(error)\n      return { redirect: url, redirectType }\n    }\n    // Re-throw if error is not for redirect\n    throw error\n  }\n\n  // Explicit type is needed to avoid the generated `.d.ts` having a wide return type that could be specific to the `@types/react` version.\n  render(): React.ReactNode {\n    const { redirect, redirectType } = this.state\n    if (redirect !== null && redirectType !== null) {\n      return (\n        <HandleRedirect\n          redirect={redirect}\n          redirectType={redirectType}\n          reset={() => this.setState({ redirect: null })}\n        />\n      )\n    }\n\n    return this.props.children\n  }\n}\n\nexport function RedirectBoundary({ children }: { children: React.ReactNode }) {\n  const router = useRouter()\n  return (\n    <RedirectErrorBoundary router={router}>{children}</RedirectErrorBoundary>\n  )\n}\n","import { isHangingPromiseRejectionError } from '../../server/dynamic-rendering-utils'\nimport { isPostpone } from '../../server/lib/router-utils/is-postpone'\nimport { isBailoutToCSRError } from '../../shared/lib/lazy-dynamic/bailout-to-csr'\nimport { isNextRouterError } from './is-next-router-error'\nimport { isDynamicPostpone } from '../../server/app-render/dynamic-rendering'\nimport { isDynamicServerError } from './hooks-server-context'\n\nexport function unstable_rethrow(error: unknown): void {\n  if (\n    isNextRouterError(error) ||\n    isBailoutToCSRError(error) ||\n    isDynamicServerError(error) ||\n    isDynamicPostpone(error) ||\n    isPostpone(error) ||\n    isHangingPromiseRejectionError(error)\n  ) {\n    throw error\n  }\n\n  if (error instanceof Error && 'cause' in error) {\n    unstable_rethrow(error.cause)\n  }\n}\n","import { RedirectStatusCode } from './redirect-status-code'\nimport {\n  RedirectType,\n  type RedirectError,\n  isRedirectError,\n  REDIRECT_ERROR_CODE,\n} from './redirect-error'\n\nconst actionAsyncStorage =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/action-async-storage.external') as typeof import('../../server/app-render/action-async-storage.external')\n      ).actionAsyncStorage\n    : undefined\n\nexport function getRedirectError(\n  url: string,\n  type: RedirectType,\n  statusCode: RedirectStatusCode = RedirectStatusCode.TemporaryRedirect\n): RedirectError {\n  const error = new Error(REDIRECT_ERROR_CODE) as RedirectError\n  error.digest = `${REDIRECT_ERROR_CODE};${type};${url};${statusCode};`\n  return error\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 307/303 to the caller.\n * - In a Server Action, type defaults to 'push' and 'replace' elsewhere.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function redirect(\n  /** The URL to redirect to */\n  url: string,\n  type?: RedirectType\n): never {\n  type ??= actionAsyncStorage?.getStore()?.isAction\n    ? RedirectType.push\n    : RedirectType.replace\n\n  throw getRedirectError(url, type, RedirectStatusCode.TemporaryRedirect)\n}\n\n/**\n * This function allows you to redirect the user to another URL. It can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * - In a Server Component, this will insert a meta tag to redirect the user to the target page.\n * - In a Route Handler or Server Action, it will serve a 308/303 to the caller.\n *\n * Read more: [Next.js Docs: `redirect`](https://nextjs.org/docs/app/api-reference/functions/redirect)\n */\nexport function permanentRedirect(\n  /** The URL to redirect to */\n  url: string,\n  type: RedirectType = RedirectType.replace\n): never {\n  throw getRedirectError(url, type, RedirectStatusCode.PermanentRedirect)\n}\n\n/**\n * Returns the encoded URL from the error if it's a RedirectError, null\n * otherwise. Note that this does not validate the URL returned.\n *\n * @param error the error that may be a redirect error\n * @return the url if the error was a redirect error\n */\nexport function getURLFromRedirectError(error: RedirectError): string\nexport function getURLFromRedirectError(error: unknown): string | null {\n  if (!isRedirectError(error)) return null\n\n  // Slices off the beginning of the digest that contains the code and the\n  // separating ';'.\n  return error.digest.split(';').slice(2, -2).join(';')\n}\n\nexport function getRedirectTypeFromError(error: RedirectError): RedirectType {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return error.digest.split(';', 2)[1] as RedirectType\n}\n\nexport function getRedirectStatusCodeFromError(error: RedirectError): number {\n  if (!isRedirectError(error)) {\n    throw new Error('Not a redirect error')\n  }\n\n  return Number(error.digest.split(';').at(-2))\n}\n","/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */\nexport function ensureLeadingSlash(path: string) {\n  return path.startsWith('/') ? path : `/${path}`\n}\n","import { startTransition } from 'react'\nimport { ACTION_SERVER_ACTION } from './components/router-reducer/router-reducer-types'\nimport { dispatchAppRouterAction } from './components/use-action-queue'\n\nexport async function callServer(actionId: string, actionArgs: any[]) {\n  return new Promise((resolve, reject) => {\n    startTransition(() => {\n      dispatchAppRouterAction({\n        type: ACTION_SERVER_ACTION,\n        actionId,\n        actionArgs,\n        resolve,\n        reject,\n      })\n    })\n  })\n}\n","export enum RedirectStatusCode {\n  SeeOther = 303,\n  TemporaryRedirect = 307,\n  PermanentRedirect = 308,\n}\n","\"use strict\";\nmodule.exports = require('../../module.compiled').vendored['react-ssr'].ReactServerDOMWebpackClientEdge;\n\n//# sourceMappingURL=react-server-dom-webpack-client-edge.js.map","import {\n  isHTTPAccessFallbackError,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\nimport { isRedirectError, type RedirectError } from './redirect-error'\n\n/**\n * Returns true if the error is a navigation signal error. These errors are\n * thrown by user code to perform navigation operations and interrupt the React\n * render.\n */\nexport function isNextRouterError(\n  error: unknown\n): error is RedirectError | HTTPAccessFallbackError {\n  return isRedirectError(error) || isHTTPAccessFallbackError(error)\n}\n","'use client'\nimport { hexHash } from '../../../shared/lib/hash'\nimport {\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_ROUTER_SEGMENT_PREFETCH_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_URL,\n  NEXT_RSC_UNION_QUERY,\n} from '../app-router-headers'\nimport type { RequestHeaders } from './fetch-server-response'\n\n/**\n * Mutates the provided URL by adding a cache-busting search parameter for CDNs that don't\n * support custom headers. This helps avoid caching conflicts by making each request unique.\n *\n * Rather than relying on the Vary header which some CDNs ignore, we append a search param\n * to create a unique URL that forces a fresh request.\n *\n * Example:\n * URL before: https://example.com/path?query=1\n * URL after: https://example.com/path?query=1&_rsc=abc123\n *\n * Note: This function mutates the input URL directly and does not return anything.\n *\n * TODO: Since we need to use a search param anyway, we could simplify by removing the custom\n * headers approach entirely and just use search params.\n */\nexport const setCacheBustingSearchParam = (\n  url: URL,\n  headers: RequestHeaders\n): void => {\n  const uniqueCacheKey = hexHash(\n    [\n      headers[NEXT_ROUTER_PREFETCH_HEADER] || '0',\n      headers[NEXT_ROUTER_SEGMENT_PREFETCH_HEADER] || '0',\n      headers[NEXT_ROUTER_STATE_TREE_HEADER],\n      headers[NEXT_URL],\n    ].join(',')\n  )\n\n  /**\n   * Note that we intentionally do not use `url.searchParams.set` here:\n   *\n   * const url = new URL('https://example.com/search?q=custom%20spacing');\n   * url.searchParams.set('_rsc', 'abc123');\n   * console.log(url.toString()); // Outputs: https://example.com/search?q=custom+spacing&_rsc=abc123\n   *                                                                             ^ <--- this is causing confusion\n   * This is in fact intended based on https://url.spec.whatwg.org/#interface-urlsearchparams, but\n   * we want to preserve the %20 as %20 if that's what the user passed in, hence the custom\n   * logic below.\n   */\n  const existingSearch = url.search\n  const rawQuery = existingSearch.startsWith('?')\n    ? existingSearch.slice(1)\n    : existingSearch\n  const pairs = rawQuery.split('&').filter(Boolean)\n  pairs.push(`${NEXT_RSC_UNION_QUERY}=${uniqueCacheKey}`)\n  url.search = pairs.length ? `?${pairs.join('&')}` : ''\n}\n","\"use strict\";\nmodule.exports = require('../../module.compiled').vendored['contexts'].AppRouterContext;\n\n//# sourceMappingURL=app-router-context.js.map","'use client'\n\nimport React, { type JSX } from 'react'\nimport { useUntrackedPathname } from './navigation-untracked'\nimport { isNextRouterError } from './is-next-router-error'\nimport { handleHardNavError } from './nav-failure-handler'\n\nconst workAsyncStorage =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/work-async-storage.external') as typeof import('../../server/app-render/work-async-storage.external')\n      ).workAsyncStorage\n    : undefined\n\nconst styles = {\n  error: {\n    // https://github.com/sindresorhus/modern-normalize/blob/main/modern-normalize.css#L38-L52\n    fontFamily:\n      'system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"',\n    height: '100vh',\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    fontSize: '14px',\n    fontWeight: 400,\n    lineHeight: '28px',\n    margin: '0 8px',\n  },\n} as const\n\nexport type ErrorComponent = React.ComponentType<{\n  error: Error\n  // global-error, there's no `reset` function;\n  // regular error boundary, there's a `reset` function.\n  reset?: () => void\n}>\n\nexport interface ErrorBoundaryProps {\n  children?: React.ReactNode\n  errorComponent: ErrorComponent | undefined\n  errorStyles?: React.ReactNode | undefined\n  errorScripts?: React.ReactNode | undefined\n}\n\ninterface ErrorBoundaryHandlerProps extends ErrorBoundaryProps {\n  pathname: string | null\n  errorComponent: ErrorComponent\n}\n\ninterface ErrorBoundaryHandlerState {\n  error: Error | null\n  previousPathname: string | null\n}\n\n// if we are revalidating we want to re-throw the error so the\n// function crashes so we can maintain our previous cache\n// instead of caching the error page\nfunction HandleISRError({ error }: { error: any }) {\n  if (workAsyncStorage) {\n    const store = workAsyncStorage.getStore()\n    if (store?.isRevalidate || store?.isStaticGeneration) {\n      console.error(error)\n      throw error\n    }\n  }\n\n  return null\n}\n\nexport class ErrorBoundaryHandler extends React.Component<\n  ErrorBoundaryHandlerProps,\n  ErrorBoundaryHandlerState\n> {\n  constructor(props: ErrorBoundaryHandlerProps) {\n    super(props)\n    this.state = { error: null, previousPathname: this.props.pathname }\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    if (isNextRouterError(error)) {\n      // Re-throw if an expected internal Next.js router error occurs\n      // this means it should be handled by a different boundary (such as a NotFound boundary in a parent segment)\n      throw error\n    }\n\n    return { error }\n  }\n\n  static getDerivedStateFromProps(\n    props: ErrorBoundaryHandlerProps,\n    state: ErrorBoundaryHandlerState\n  ): ErrorBoundaryHandlerState | null {\n    const { error } = state\n\n    // if we encounter an error while\n    // a navigation is pending we shouldn't render\n    // the error boundary and instead should fallback\n    // to a hard navigation to attempt recovering\n    if (process.env.__NEXT_APP_NAV_FAIL_HANDLING) {\n      if (error && handleHardNavError(error)) {\n        // clear error so we don't render anything\n        return {\n          error: null,\n          previousPathname: props.pathname,\n        }\n      }\n    }\n\n    /**\n     * Handles reset of the error boundary when a navigation happens.\n     * Ensures the error boundary does not stay enabled when navigating to a new page.\n     * Approach of setState in render is safe as it checks the previous pathname and then overrides\n     * it as outlined in https://react.dev/reference/react/useState#storing-information-from-previous-renders\n     */\n    if (props.pathname !== state.previousPathname && state.error) {\n      return {\n        error: null,\n        previousPathname: props.pathname,\n      }\n    }\n    return {\n      error: state.error,\n      previousPathname: props.pathname,\n    }\n  }\n\n  reset = () => {\n    this.setState({ error: null })\n  }\n\n  // Explicit type is needed to avoid the generated `.d.ts` having a wide return type that could be specific to the `@types/react` version.\n  render(): React.ReactNode {\n    if (this.state.error) {\n      return (\n        <>\n          <HandleISRError error={this.state.error} />\n          {this.props.errorStyles}\n          {this.props.errorScripts}\n          <this.props.errorComponent\n            error={this.state.error}\n            reset={this.reset}\n          />\n        </>\n      )\n    }\n\n    return this.props.children\n  }\n}\n\nexport type GlobalErrorComponent = React.ComponentType<{\n  error: any\n}>\nexport function GlobalError({ error }: { error: any }) {\n  const digest: string | undefined = error?.digest\n  return (\n    <html id=\"__next_error__\">\n      <head></head>\n      <body>\n        <HandleISRError error={error} />\n        <div style={styles.error}>\n          <div>\n            <h2 style={styles.text}>\n              Application error: a {digest ? 'server' : 'client'}-side exception\n              has occurred while loading {window.location.hostname} (see the{' '}\n              {digest ? 'server logs' : 'browser console'} for more\n              information).\n            </h2>\n            {digest ? <p style={styles.text}>{`Digest: ${digest}`}</p> : null}\n          </div>\n        </div>\n      </body>\n    </html>\n  )\n}\n\n// Exported so that the import signature in the loaders can be identical to user\n// supplied custom global error signatures.\nexport default GlobalError\n\n/**\n * Handles errors through `getDerivedStateFromError`.\n * Renders the provided error component and provides a way to `reset` the error boundary state.\n */\n\n/**\n * Renders error boundary with the provided \"errorComponent\" property as the fallback.\n * If no \"errorComponent\" property is provided it renders the children without an error boundary.\n */\nexport function ErrorBoundary({\n  errorComponent,\n  errorStyles,\n  errorScripts,\n  children,\n}: ErrorBoundaryProps & {\n  children: React.ReactNode\n}): JSX.Element {\n  // When we're rendering the missing params shell, this will return null. This\n  // is because we won't be rendering any not found boundaries or error\n  // boundaries for the missing params shell. When this runs on the client\n  // (where these errors can occur), we will get the correct pathname.\n  const pathname = useUntrackedPathname()\n  if (errorComponent) {\n    return (\n      <ErrorBoundaryHandler\n        pathname={pathname}\n        errorComponent={errorComponent}\n        errorStyles={errorStyles}\n        errorScripts={errorScripts}\n      >\n        {children}\n      </ErrorBoundaryHandler>\n    )\n  }\n\n  return <>{children}</>\n}\n","import type {\n  CacheNodeSeedData,\n  FlightData,\n  FlightDataPath,\n  FlightRouterState,\n  FlightSegmentPath,\n  Segment,\n} from '../server/app-render/types'\nimport type { HeadData } from '../shared/lib/app-router-context.shared-runtime'\n\nexport type NormalizedFlightData = {\n  /**\n   * The full `FlightSegmentPath` inclusive of the final `Segment`\n   */\n  segmentPath: FlightSegmentPath\n  /**\n   * The `FlightSegmentPath` exclusive of the final `Segment`\n   */\n  pathToSegment: FlightSegmentPath\n  segment: Segment\n  tree: FlightRouterState\n  seedData: CacheNodeSeedData | null\n  head: HeadData\n  isHeadPartial: boolean\n  isRootRender: boolean\n}\n\n// TODO: We should only have to export `normalizeFlightData`, however because the initial flight data\n// that gets passed to `createInitialRouterState` doesn't conform to the `FlightDataPath` type (it's missing the root segment)\n// we're currently exporting it so we can use it directly. This should be fixed as part of the unification of\n// the different ways we express `FlightSegmentPath`.\nexport function getFlightDataPartsFromPath(\n  flightDataPath: FlightDataPath\n): NormalizedFlightData {\n  // Pick the last 4 items from the `FlightDataPath` to get the [tree, seedData, viewport, isHeadPartial].\n  const flightDataPathLength = 4\n  // tree, seedData, and head are *always* the last three items in the `FlightDataPath`.\n  const [tree, seedData, head, isHeadPartial] =\n    flightDataPath.slice(-flightDataPathLength)\n  // The `FlightSegmentPath` is everything except the last three items. For a root render, it won't be present.\n  const segmentPath = flightDataPath.slice(0, -flightDataPathLength)\n\n  return {\n    // TODO: Unify these two segment path helpers. We are inconsistently pushing an empty segment (\"\")\n    // to the start of the segment path in some places which makes it hard to use solely the segment path.\n    // Look for \"// TODO-APP: remove ''\" in the codebase.\n    pathToSegment: segmentPath.slice(0, -1),\n    segmentPath,\n    // if the `FlightDataPath` corresponds with the root, there'll be no segment path,\n    // in which case we default to ''.\n    segment: segmentPath[segmentPath.length - 1] ?? '',\n    tree,\n    seedData,\n    head,\n    isHeadPartial,\n    isRootRender: flightDataPath.length === flightDataPathLength,\n  }\n}\n\nexport function getNextFlightSegmentPath(\n  flightSegmentPath: FlightSegmentPath\n): FlightSegmentPath {\n  // Since `FlightSegmentPath` is a repeated tuple of `Segment` and `ParallelRouteKey`, we slice off two items\n  // to get the next segment path.\n  return flightSegmentPath.slice(2)\n}\n\nexport function normalizeFlightData(\n  flightData: FlightData\n): NormalizedFlightData[] | string {\n  // FlightData can be a string when the server didn't respond with a proper flight response,\n  // or when a redirect happens, to signal to the client that it needs to perform an MPA navigation.\n  if (typeof flightData === 'string') {\n    return flightData\n  }\n\n  return flightData.map(getFlightDataPartsFromPath)\n}\n","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `unauthorized` docs\n/**\n * @experimental\n * This function allows you to render the [unauthorized.js file](https://nextjs.org/docs/app/api-reference/file-conventions/unauthorized)\n * within a route segment as well as inject a tag.\n *\n * `unauthorized()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n *\n * Read more: [Next.js Docs: `unauthorized`](https://nextjs.org/docs/app/api-reference/functions/unauthorized)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};401`\n\nexport function unauthorized(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`unauthorized()\\` is experimental and only allowed to be used when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n","import type { Segment } from '../../server/app-render/types'\n\nexport const matchSegment = (\n  existingSegment: Segment,\n  segment: Segment\n): boolean => {\n  // segment is either Array or string\n  if (typeof existingSegment === 'string') {\n    if (typeof segment === 'string') {\n      // Common case: segment is just a string\n      return existingSegment === segment\n    }\n    return false\n  }\n\n  if (typeof segment === 'string') {\n    return false\n  }\n  return existingSegment[0] === segment[0] && existingSegment[1] === segment[1]\n}\n","/**\n * Check to see if a value is Thenable.\n *\n * @param promise the maybe-thenable value\n * @returns true if the value is thenable\n */\nexport function isThenable<T = unknown>(\n  promise: Promise<T> | T\n): promise is Promise<T> {\n  return (\n    promise !== null &&\n    typeof promise === 'object' &&\n    'then' in promise &&\n    typeof promise.then === 'function'\n  )\n}\n","'use client'\n\n// @ts-ignore\n// eslint-disable-next-line import/no-extraneous-dependencies\n// import { createFromReadableStream } from 'react-server-dom-webpack/client'\nconst { createFromReadableStream } = (\n  !!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')\n) as typeof import('react-server-dom-webpack/client')\n\nimport type {\n  FlightRouterState,\n  NavigationFlightResponse,\n} from '../../../server/app-render/types'\n\nimport type { NEXT_ROUTER_SEGMENT_PREFETCH_HEADER } from '../app-router-headers'\nimport {\n  NEXT_ROUTER_PREFETCH_HEADER,\n  NEXT_ROUTER_STATE_TREE_HEADER,\n  NEXT_RSC_UNION_QUERY,\n  NEXT_URL,\n  RSC_HEADER,\n  RSC_CONTENT_TYPE_HEADER,\n  NEXT_HMR_REFRESH_HEADER,\n  NEXT_DID_POSTPONE_HEADER,\n  NEXT_ROUTER_STALE_TIME_HEADER,\n} from '../app-router-headers'\nimport { callServer } from '../../app-call-server'\nimport { findSourceMapURL } from '../../app-find-source-map-url'\nimport { PrefetchKind } from './router-reducer-types'\nimport {\n  normalizeFlightData,\n  type NormalizedFlightData,\n} from '../../flight-data-helpers'\nimport { getAppBuildId } from '../../app-build-id'\nimport { setCacheBustingSearchParam } from './set-cache-busting-search-param'\n\nexport interface FetchServerResponseOptions {\n  readonly flightRouterState: FlightRouterState\n  readonly nextUrl: string | null\n  readonly prefetchKind?: PrefetchKind\n  readonly isHmrRefresh?: boolean\n}\n\nexport type FetchServerResponseResult = {\n  flightData: NormalizedFlightData[] | string\n  canonicalUrl: URL | undefined\n  couldBeIntercepted: boolean\n  prerendered: boolean\n  postponed: boolean\n  staleTime: number\n}\n\nexport type RequestHeaders = {\n  [RSC_HEADER]?: '1'\n  [NEXT_ROUTER_STATE_TREE_HEADER]?: string\n  [NEXT_URL]?: string\n  [NEXT_ROUTER_PREFETCH_HEADER]?: '1'\n  [NEXT_ROUTER_SEGMENT_PREFETCH_HEADER]?: string\n  'x-deployment-id'?: string\n  [NEXT_HMR_REFRESH_HEADER]?: '1'\n  // A header that is only added in test mode to assert on fetch priority\n  'Next-Test-Fetch-Priority'?: RequestInit['priority']\n}\n\nexport function urlToUrlWithoutFlightMarker(url: string): URL {\n  const urlWithoutFlightParameters = new URL(url, location.origin)\n  urlWithoutFlightParameters.searchParams.delete(NEXT_RSC_UNION_QUERY)\n  if (process.env.NODE_ENV === 'production') {\n    if (\n      process.env.__NEXT_CONFIG_OUTPUT === 'export' &&\n      urlWithoutFlightParameters.pathname.endsWith('.txt')\n    ) {\n      const { pathname } = urlWithoutFlightParameters\n      const length = pathname.endsWith('/index.txt') ? 10 : 4\n      // Slice off `/index.txt` or `.txt` from the end of the pathname\n      urlWithoutFlightParameters.pathname = pathname.slice(0, -length)\n    }\n  }\n  return urlWithoutFlightParameters\n}\n\nfunction doMpaNavigation(url: string): FetchServerResponseResult {\n  return {\n    flightData: urlToUrlWithoutFlightMarker(url).toString(),\n    canonicalUrl: undefined,\n    couldBeIntercepted: false,\n    prerendered: false,\n    postponed: false,\n    staleTime: -1,\n  }\n}\n\nlet abortController = new AbortController()\n\nif (typeof window !== 'undefined') {\n  // Abort any in-flight requests when the page is unloaded, e.g. due to\n  // reloading the page or performing hard navigations. This allows us to ignore\n  // what would otherwise be a thrown TypeError when the browser cancels the\n  // requests.\n  window.addEventListener('pagehide', () => {\n    abortController.abort()\n  })\n\n  // Use a fresh AbortController instance on pageshow, e.g. when navigating back\n  // and the JavaScript execution context is restored by the browser.\n  window.addEventListener('pageshow', () => {\n    abortController = new AbortController()\n  })\n}\n\n/**\n * Fetch the flight data for the provided url. Takes in the current router state\n * to decide what to render server-side.\n */\nexport async function fetchServerResponse(\n  url: URL,\n  options: FetchServerResponseOptions\n): Promise<FetchServerResponseResult> {\n  const { flightRouterState, nextUrl, prefetchKind } = options\n\n  const headers: RequestHeaders = {\n    // Enable flight response\n    [RSC_HEADER]: '1',\n    // Provide the current router state\n    [NEXT_ROUTER_STATE_TREE_HEADER]: encodeURIComponent(\n      JSON.stringify(flightRouterState)\n    ),\n  }\n\n  /**\n   * Three cases:\n   * - `prefetchKind` is `undefined`, it means it's a normal navigation, so we want to prefetch the page data fully\n   * - `prefetchKind` is `full` - we want to prefetch the whole page so same as above\n   * - `prefetchKind` is `auto` - if the page is dynamic, prefetch the page data partially, if static prefetch the page data fully\n   */\n  if (prefetchKind === PrefetchKind.AUTO) {\n    headers[NEXT_ROUTER_PREFETCH_HEADER] = '1'\n  }\n\n  if (process.env.NODE_ENV === 'development' && options.isHmrRefresh) {\n    headers[NEXT_HMR_REFRESH_HEADER] = '1'\n  }\n\n  if (nextUrl) {\n    headers[NEXT_URL] = nextUrl\n  }\n\n  try {\n    // When creating a \"temporary\" prefetch (the \"on-demand\" prefetch that gets created on navigation, if one doesn't exist)\n    // we send the request with a \"high\" priority as it's in response to a user interaction that could be blocking a transition.\n    // Otherwise, all other prefetches are sent with a \"low\" priority.\n    // We use \"auto\" for in all other cases to match the existing default, as this function is shared outside of prefetching.\n    const fetchPriority = prefetchKind\n      ? prefetchKind === PrefetchKind.TEMPORARY\n        ? 'high'\n        : 'low'\n      : 'auto'\n\n    if (process.env.NODE_ENV === 'production') {\n      if (process.env.__NEXT_CONFIG_OUTPUT === 'export') {\n        // In \"output: export\" mode, we can't rely on headers to distinguish\n        // between HTML and RSC requests. Instead, we append an extra prefix\n        // to the request.\n        url = new URL(url)\n        if (url.pathname.endsWith('/')) {\n          url.pathname += 'index.txt'\n        } else {\n          url.pathname += '.txt'\n        }\n      }\n    }\n\n    const res = await createFetch(\n      url,\n      headers,\n      fetchPriority,\n      abortController.signal\n    )\n\n    const responseUrl = urlToUrlWithoutFlightMarker(res.url)\n    const canonicalUrl = res.redirected ? responseUrl : undefined\n\n    const contentType = res.headers.get('content-type') || ''\n    const interception = !!res.headers.get('vary')?.includes(NEXT_URL)\n    const postponed = !!res.headers.get(NEXT_DID_POSTPONE_HEADER)\n    const staleTimeHeader = res.headers.get(NEXT_ROUTER_STALE_TIME_HEADER)\n    const staleTime =\n      staleTimeHeader !== null ? parseInt(staleTimeHeader, 10) : -1\n    let isFlightResponse = contentType.startsWith(RSC_CONTENT_TYPE_HEADER)\n\n    if (process.env.NODE_ENV === 'production') {\n      if (process.env.__NEXT_CONFIG_OUTPUT === 'export') {\n        if (!isFlightResponse) {\n          isFlightResponse = contentType.startsWith('text/plain')\n        }\n      }\n    }\n\n    // If fetch returns something different than flight response handle it like a mpa navigation\n    // If the fetch was not 200, we also handle it like a mpa navigation\n    if (!isFlightResponse || !res.ok || !res.body) {\n      // in case the original URL came with a hash, preserve it before redirecting to the new URL\n      if (url.hash) {\n        responseUrl.hash = url.hash\n      }\n\n      return doMpaNavigation(responseUrl.toString())\n    }\n\n    // We may navigate to a page that requires a different Webpack runtime.\n    // In prod, every page will have the same Webpack runtime.\n    // In dev, the Webpack runtime is minimal for each page.\n    // We need to ensure the Webpack runtime is updated before executing client-side JS of the new page.\n    if (process.env.NODE_ENV !== 'production' && !process.env.TURBOPACK) {\n      await require('../react-dev-overlay/app/hot-reloader-client').waitForWebpackRuntimeHotUpdate()\n    }\n\n    // Handle the `fetch` readable stream that can be unwrapped by `React.use`.\n    const flightStream = postponed\n      ? createUnclosingPrefetchStream(res.body)\n      : res.body\n    const response = await (createFromNextReadableStream(\n      flightStream\n    ) as Promise<NavigationFlightResponse>)\n\n    if (getAppBuildId() !== response.b) {\n      return doMpaNavigation(res.url)\n    }\n\n    return {\n      flightData: normalizeFlightData(response.f),\n      canonicalUrl: canonicalUrl,\n      couldBeIntercepted: interception,\n      prerendered: response.S,\n      postponed,\n      staleTime,\n    }\n  } catch (err) {\n    if (!abortController.signal.aborted) {\n      console.error(\n        `Failed to fetch RSC payload for ${url}. Falling back to browser navigation.`,\n        err\n      )\n    }\n\n    // If fetch fails handle it like a mpa navigation\n    // TODO-APP: Add a test for the case where a CORS request fails, e.g. external url redirect coming from the response.\n    // See https://github.com/vercel/next.js/issues/43605#issuecomment-1451617521 for a reproduction.\n    return {\n      flightData: url.toString(),\n      canonicalUrl: undefined,\n      couldBeIntercepted: false,\n      prerendered: false,\n      postponed: false,\n      staleTime: -1,\n    }\n  }\n}\n\nexport function createFetch(\n  url: URL,\n  headers: RequestHeaders,\n  fetchPriority: 'auto' | 'high' | 'low' | null,\n  signal?: AbortSignal\n) {\n  const fetchUrl = new URL(url)\n\n  // TODO: In output: \"export\" mode, the headers do nothing. Omit them (and the\n  // cache busting search param) from the request so they're\n  // maximally cacheable.\n  setCacheBustingSearchParam(fetchUrl, headers)\n\n  if (process.env.__NEXT_TEST_MODE && fetchPriority !== null) {\n    headers['Next-Test-Fetch-Priority'] = fetchPriority\n  }\n\n  if (process.env.NEXT_DEPLOYMENT_ID) {\n    headers['x-deployment-id'] = process.env.NEXT_DEPLOYMENT_ID\n  }\n\n  return fetch(fetchUrl, {\n    // Backwards compat for older browsers. `same-origin` is the default in modern browsers.\n    credentials: 'same-origin',\n    headers,\n    priority: fetchPriority || undefined,\n    signal,\n  })\n}\n\nexport function createFromNextReadableStream(\n  flightStream: ReadableStream<Uint8Array>\n): Promise<unknown> {\n  return createFromReadableStream(flightStream, {\n    callServer,\n    findSourceMapURL,\n  })\n}\n\nfunction createUnclosingPrefetchStream(\n  originalFlightStream: ReadableStream<Uint8Array>\n): ReadableStream<Uint8Array> {\n  // When PPR is enabled, prefetch streams may contain references that never\n  // resolve, because that's how we encode dynamic data access. In the decoded\n  // object returned by the Flight client, these are reified into hanging\n  // promises that suspend during render, which is effectively what we want.\n  // The UI resolves when it switches to the dynamic data stream\n  // (via useDeferredValue(dynamic, static)).\n  //\n  // However, the Flight implementation currently errors if the server closes\n  // the response before all the references are resolved. As a cheat to work\n  // around this, we wrap the original stream in a new stream that never closes,\n  // and therefore doesn't error.\n  const reader = originalFlightStream.getReader()\n  return new ReadableStream({\n    async pull(controller) {\n      while (true) {\n        const { done, value } = await reader.read()\n        if (!done) {\n          // Pass to the target stream and keep consuming the Flight response\n          // from the server.\n          controller.enqueue(value)\n          continue\n        }\n        // The server stream has closed. Exit, but intentionally do not close\n        // the target stream.\n        return\n      }\n    },\n  })\n}\n","function _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) return obj;\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") return { default: obj };\n\n    var cache = _getRequireWildcardCache(nodeInterop);\n\n    if (cache && cache.has(obj)) return cache.get(obj);\n\n    var newObj = { __proto__: null };\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n            else newObj[key] = obj[key];\n        }\n    }\n\n    newObj.default = obj;\n\n    if (cache) cache.set(obj, newObj);\n\n    return newObj;\n}\nexport { _interop_require_wildcard as _ };\n","export * from '../client/components/navigation';\n\n//# sourceMappingURL=navigation.js.map","\"use strict\";\nmodule.exports = require('../../module.compiled').vendored['react-ssr'].ReactDOM;\n\n//# sourceMappingURL=react-dom.js.map","import {\n  HTTP_ERROR_FALLBACK_ERROR_CODE,\n  type HTTPAccessFallbackError,\n} from './http-access-fallback/http-access-fallback'\n\n// TODO: Add `forbidden` docs\n/**\n * @experimental\n * This function allows you to render the [forbidden.js file](https://nextjs.org/docs/app/api-reference/file-conventions/forbidden)\n * within a route segment as well as inject a tag.\n *\n * `forbidden()` can be used in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).\n *\n * Read more: [Next.js Docs: `forbidden`](https://nextjs.org/docs/app/api-reference/functions/forbidden)\n */\n\nconst DIGEST = `${HTTP_ERROR_FALLBACK_ERROR_CODE};403`\n\nexport function forbidden(): never {\n  if (!process.env.__NEXT_EXPERIMENTAL_AUTH_INTERRUPTS) {\n    throw new Error(\n      `\\`forbidden()\\` is experimental and only allowed to be enabled when \\`experimental.authInterrupts\\` is enabled.`\n    )\n  }\n\n  // eslint-disable-next-line no-throw-literal\n  const error = new Error(DIGEST) as HTTPAccessFallbackError\n  ;(error as HTTPAccessFallbackError).digest = DIGEST\n  throw error\n}\n","const NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT'\n\nexport class StaticGenBailoutError extends Error {\n  public readonly code = NEXT_STATIC_GEN_BAILOUT\n}\n\nexport function isStaticGenBailoutError(\n  error: unknown\n): error is StaticGenBailoutError {\n  if (typeof error !== 'object' || error === null || !('code' in error)) {\n    return false\n  }\n\n  return error.code === NEXT_STATIC_GEN_BAILOUT\n}\n","import type { FlightRouterState } from '../../../../server/app-render/types'\nimport { isInterceptionRouteAppPath } from '../../../../shared/lib/router/utils/interception-routes'\n\nexport function hasInterceptionRouteInCurrentTree([\n  segment,\n  parallelRoutes,\n]: FlightRouterState): boolean {\n  // If we have a dynamic segment, it's marked as an interception route by the presence of the `i` suffix.\n  if (Array.isArray(segment) && (segment[2] === 'di' || segment[2] === 'ci')) {\n    return true\n  }\n\n  // If segment is not an array, apply the existing string-based check\n  if (typeof segment === 'string' && isInterceptionRouteAppPath(segment)) {\n    return true\n  }\n\n  // Iterate through parallelRoutes if they exist\n  if (parallelRoutes) {\n    for (const key in parallelRoutes) {\n      if (hasInterceptionRouteInCurrentTree(parallelRoutes[key])) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","import type { Segment } from '../../../server/app-render/types'\nimport { PAGE_SEGMENT_KEY } from '../../../shared/lib/segment'\n\nexport function createRouterCacheKey(\n  segment: Segment,\n  withoutSearchParameters: boolean = false\n) {\n  // if the segment is an array, it means it's a dynamic segment\n  // for example, ['lang', 'en', 'd']. We need to convert it to a string to store it as a cache node key.\n  if (Array.isArray(segment)) {\n    return `${segment[0]}|${segment[1]}|${segment[2]}`\n  }\n\n  // Page segments might have search parameters, ie __PAGE__?foo=bar\n  // When `withoutSearchParameters` is true, we only want to return the page segment\n  if (withoutSearchParameters && segment.startsWith(PAGE_SEGMENT_KEY)) {\n    return PAGE_SEGMENT_KEY\n  }\n\n  return segment\n}\n","\"use strict\";\nmodule.exports = require('../../module.compiled').vendored['contexts'].ServerInsertedHtml;\n\n//# sourceMappingURL=server-inserted-html.js.map"],"names":["getAppBuildId","setAppBuildId","globalBuildId","buildId","findSourceMapURL","undefined","process","normalizeAppPath","normalizeRscURL","route","ensureLeadingSlash","split","reduce","pathname","segment","index","segments","isGroupSegment","length","url","replace","endsWith","isParallelRouteSegment","startsWith","addSearchParamsIfPageSegment","searchParams","isPageSegment","includes","PAGE_SEGMENT_KEY","stringifiedQuery","JSON","stringify","DEFAULT_SEGMENT_KEY","handleHardNavError","error","useNavFailureHandler","HTTPAccessErrorStatus","HTTP_ERROR_FALLBACK_ERROR_CODE","getAccessFallbackErrorTypeByStatus","getAccessFallbackHTTPStatus","isHTTPAccessFallbackError","NOT_FOUND","FORBIDDEN","UNAUTHORIZED","ALLOWED_CODES","Set","Object","values","digest","prefix","httpStatus","has","Number","status","unstable_rethrow","require","useUntrackedPathname","hasFallbackRouteParams","workAsyncStorage","workStore","getStore","fallbackRouteParams","size","useContext","PathnameContext","ReadonlyURLSearchParams","RedirectType","forbidden","notFound","permanentRedirect","redirect","unauthorized","ReadonlyURLSearchParamsError","Error","constructor","URLSearchParams","append","delete","set","sort","ACTION_HMR_REFRESH","ACTION_NAVIGATE","ACTION_PREFETCH","ACTION_REFRESH","ACTION_RESTORE","ACTION_SERVER_ACTION","ACTION_SERVER_PATCH","PrefetchCacheEntryStatus","PrefetchKind","DynamicServerError","isDynamicServerError","DYNAMIC_ERROR_CODE","description","err","BailoutToCSRError","isBailoutToCSRError","BAILOUT_TO_CSR","reason","createHrefFromUrl","includeHash","search","hash","ACTION_HEADER","FLIGHT_HEADERS","NEXT_DID_POSTPONE_HEADER","NEXT_HMR_REFRESH_HEADER","NEXT_IS_PRERENDER_HEADER","NEXT_REWRITTEN_PATH_HEADER","NEXT_REWRITTEN_QUERY_HEADER","NEXT_ROUTER_PREFETCH_HEADER","NEXT_ROUTER_SEGMENT_PREFETCH_HEADER","NEXT_ROUTER_STALE_TIME_HEADER","NEXT_ROUTER_STATE_TREE_HEADER","NEXT_RSC_UNION_QUERY","NEXT_URL","RSC_CONTENT_TYPE_HEADER","RSC_HEADER","ServerInsertedHTMLContext","useParams","usePathname","useRouter","useSearchParams","useSelectedLayoutSegment","useSelectedLayoutSegments","useServerInsertedHTML","useDynamicRouteParams","SearchParamsContext","readonlySearchParams","useMemo","bailoutToClientRendering","router","AppRouterContext","PathParamsContext","parallelRouteKey","context","LayoutRouterContext","getSelectedLayoutSegmentPath","tree","first","segmentPath","node","parallelRoutes","children","segmentValue","getSegmentValue","push","parentTree","selectedLayoutSegments","selectedLayoutSegment","warnOnce","_","djb2Hash","str","i","charCodeAt","char","hexHash","toString","slice","INTERCEPTION_ROUTE_MARKERS","extractInterceptionRouteInformation","isInterceptionRouteAppPath","path","find","m","interceptingRoute","marker","interceptedRoute","concat","join","splitInterceptingRoute","DIGEST","REDIRECT_ERROR_CODE","isRedirectError","errorCode","type","destination","statusCode","at","isNaN","RedirectStatusCode","Array","isArray","forceStatic","isStaticGeneration","unresolvedThenable","then","dispatchAppRouterAction","useActionQueue","dispatch","action","actionQueue","state","setState","React","useState","isThenable","use","RedirectBoundary","RedirectErrorBoundary","HandleRedirect","reset","redirectType","useEffect","startTransition","Component","getDerivedStateFromError","getURLFromRedirectError","getRedirectTypeFromError","render","props","isNextRouterError","isDynamicPostpone","isPostpone","isHangingPromiseRejectionError","getRedirectError","getRedirectStatusCodeFromError","actionAsyncStorage","TemporaryRedirect","isAction","PermanentRedirect","callServer","actionId","actionArgs","Promise","resolve","reject","setCacheBustingSearchParam","headers","uniqueCacheKey","existingSearch","pairs","rawQuery","filter","Boolean","ErrorBoundary","ErrorBoundaryHandler","GlobalError","fontFamily","height","textAlign","display","flexDirection","alignItems","justifyContent","text","fontSize","fontWeight","lineHeight","margin","HandleISRError","store","isRevalidate","console","getDerivedStateFromProps","previousPathname","errorStyles","errorScripts","this","errorComponent","html","id","head","body","div","style","styles","h2","window","location","hostname","p","getFlightDataPartsFromPath","flightDataPath","seedData","isHeadPartial","flightDataPathLength","pathToSegment","isRootRender","getNextFlightSegmentPath","flightSegmentPath","normalizeFlightData","flightData","map","matchSegment","existingSegment","promise","createFetch","createFromNextReadableStream","fetchServerResponse","urlToUrlWithoutFlightMarker","createFromReadableStream","urlWithoutFlightParameters","URL","origin","doMpaNavigation","canonicalUrl","couldBeIntercepted","prerendered","postponed","staleTime","abortController","AbortController","options","flightRouterState","nextUrl","prefetchKind","encodeURIComponent","AUTO","res","fetchPriority","TEMPORARY","signal","responseUrl","redirected","contentType","get","interception","staleTimeHeader","parseInt","ok","flightStream","createUnclosingPrefetchStream","reader","originalFlightStream","getReader","ReadableStream","pull","controller","done","value","read","enqueue","response","b","f","S","aborted","fetchUrl","fetch","credentials","priority","StaticGenBailoutError","isStaticGenBailoutError","NEXT_STATIC_GEN_BAILOUT","code","hasInterceptionRouteInCurrentTree","key","createRouterCacheKey","withoutSearchParameters"],"sourceRoot":""}