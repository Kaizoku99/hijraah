{"version":3,"file":"../app/api/ai/extract/route.js","mappings":"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","sources":["webpack://@hijraah/web/../../node_modules/.pnpm/next@15.3.0-canary.31_@babe_be67f368de2727c847f3a61f5e6cf4fa/node_modules/next/dist/server/web/spec-extension/adapters/reflect.js","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/after-task-async-storage.external.js\"","webpack://@hijraah/web/external commonjs2 \"module\"","webpack://@hijraah/web/../../node_modules/.pnpm/@opentelemetry+instrumentat_04f370d515cee0be955272f826166073/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ sync","webpack://@hijraah/web/external commonjs \"next/dist/compiled/next-server/app-page.runtime.prod.js\"","webpack://@hijraah/web/external commonjs2 \"punycode\"","webpack://@hijraah/web/external commonjs2 \"assert\"","webpack://@hijraah/web/external commonjs2 \"process\"","webpack://@hijraah/web/external commonjs2 \"os\"","webpack://@hijraah/web/./src/lib/supabase/client.ts","webpack://@hijraah/web/external commonjs2 \"stream\"","webpack://@hijraah/web/external commonjs2 \"util\"","webpack://@hijraah/web/external commonjs2 \"fs\"","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/work-async-storage.external.js\"","webpack://@hijraah/web/external node-commonjs \"node:child_process\"","webpack://@hijraah/web/external commonjs2 \"path\"","webpack://@hijraah/web/external commonjs2 \"tls\"","webpack://@hijraah/web/external commonjs2 \"diagnostics_channel\"","webpack://@hijraah/web/external node-commonjs \"node:http\"","webpack://@hijraah/web/external node-commonjs \"node:zlib\"","webpack://@hijraah/web/external node-commonjs \"node:tls\"","webpack://@hijraah/web/external node-commonjs \"node:https\"","webpack://@hijraah/web/external commonjs \"next/dist/compiled/next-server/app-route.runtime.prod.js\"","webpack://@hijraah/web/src/app/api/ai/extract/route.ts","webpack://@hijraah/web/sentry-wrapper-module","webpack://@hijraah/web/?52d0","webpack://@hijraah/web/external node-commonjs \"node:os\"","webpack://@hijraah/web/external node-commonjs \"node:diagnostics_channel\"","webpack://@hijraah/web/external commonjs2 \"crypto\"","webpack://@hijraah/web/external commonjs2 \"https\"","webpack://@hijraah/web/external node-commonjs \"node:stream\"","webpack://@hijraah/web/external node-commonjs \"node:util\"","webpack://@hijraah/web/ignored|E:\\downloads\\Hijraah\\node_modules\\.pnpm\\ws@8.18.2_bufferutil@4.0.9\\node_modules\\ws\\lib|utf-8-validate","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/work-unit-async-storage.external.js\"","webpack://@hijraah/web/external node-commonjs \"node:fs\"","webpack://@hijraah/web/external commonjs2 \"worker_threads\"","webpack://@hijraah/web/external commonjs2 \"zlib\"","webpack://@hijraah/web/external commonjs2 \"perf_hooks\"","webpack://@hijraah/web/external node-commonjs \"node:worker_threads\"","webpack://@hijraah/web/external node-commonjs \"node:path\"","webpack://@hijraah/web/external node-commonjs \"node:net\"","webpack://@hijraah/web/external commonjs2 \"buffer\"","webpack://@hijraah/web/external commonjs2 \"url\"","webpack://@hijraah/web/external commonjs2 \"child_process\"","webpack://@hijraah/web/external node-commonjs \"node:readline\"","webpack://@hijraah/web/external commonjs2 \"http\"","webpack://@hijraah/web/external commonjs2 \"tty\"","webpack://@hijraah/web/external commonjs2 \"async_hooks\"","webpack://@hijraah/web/external node-commonjs \"node:inspector\"","webpack://@hijraah/web/../../node_modules/.pnpm/next@15.3.0-canary.31_@babe_be67f368de2727c847f3a61f5e6cf4fa/node_modules/next/dist/server/request/utils.js","webpack://@hijraah/web/external commonjs2 \"net\"","webpack://@hijraah/web/external commonjs2 \"events\"","webpack://@hijraah/web/../../node_modules/.pnpm/require-in-the-middle@7.5.2/node_modules/require-in-the-middle/ sync","webpack://@hijraah/web/../../node_modules/.pnpm/@supabase+realtime-js@2.11.10_bufferutil@4.0.9/node_modules/@supabase/realtime-js/dist/main/ sync"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"ReflectAdapter\", {\n    enumerable: true,\n    get: function() {\n        return ReflectAdapter;\n    }\n});\nclass ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === 'function') {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n}\n\n//# sourceMappingURL=reflect.js.map","module.exports = require(\"next/dist/server/app-render/after-task-async-storage.external.js\");","module.exports = require(\"module\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 8963;\nmodule.exports = webpackEmptyContext;","module.exports = require(\"next/dist/compiled/next-server/app-page.runtime.prod.js\");","module.exports = require(\"punycode\");","module.exports = require(\"assert\");","module.exports = require(\"process\");","module.exports = require(\"os\");","import {\n  createBrowserClient as _createBrowserClient,\n  createServerClient as _createServerClient,\n} from \"@supabase/ssr\";\nimport {\n  createClient as createSupabaseClient,\n  SupabaseClient,\n  type SupabaseClient as CoreSupabaseClient,\n} from \"@supabase/supabase-js\";\nimport fetchPonyfill from \"fetch-ponyfill\";\nimport { useMemo } from \"react\";\n\nimport type { Database } from \"@/types/database.types\";\n\nimport type { ReadonlyRequestCookies } from \"next/dist/server/web/spec-extension/adapters/request-cookies\";\n\n// Get fetch from ponyfill to avoid undici issues like 'Failed to execute 'fetch' on 'Window': Invalid name'\n// See: https://github.com/vercel/next.js/issues/54827\nconst { fetch: ponyfetch } = fetchPonyfill();\n\n// Environment variables for Supabase\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\nconst serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n\n// Type alias for clarity\nexport type TypedSupabaseClient = SupabaseClient<Database>;\nexport type TypedSSRSupabaseClient = CoreSupabaseClient<Database>;\n\n// --------------------------------------\n// Shared header builders\n// --------------------------------------\n\n/**\n * Default headers that must accompany every request made via a browser or server client\n * which authenticates with the anonymous public key.  This prevents 401 responses from\n * PostgREST that indicate the `apikey` header is missing.\n */\nconst anonymousHeaders: Record<string, string> | undefined = supabaseAnonKey\n  ? { apikey: supabaseAnonKey }\n  : undefined;\n\n/**\n * Default headers for the service-role client.  These include the service key as both the\n * `apikey` header and (where relevant) the `Authorization` header is still injected by the\n * libraryʼs internal `fetchWithAuth` helper.\n */\nconst serviceHeaders: Record<string, string> | undefined = serviceRoleKey\n  ? { apikey: serviceRoleKey }\n  : undefined;\n\n// Helper function to check essential env vars\nfunction checkPublicEnvVars() {\n  if (process.env.NODE_ENV === \"development\") {\n    console.debug(\n      \"[Supabase Env] NEXT_PUBLIC_SUPABASE_URL present?\",\n      !!supabaseUrl\n    );\n    console.debug(\n      \"[Supabase Env] NEXT_PUBLIC_SUPABASE_ANON_KEY present?\",\n      !!supabaseAnonKey\n    );\n    console.debug(\n      \"[Supabase Env] SUPABASE_SERVICE_ROLE_KEY present?\",\n      !!serviceRoleKey\n    );\n  }\n  if (!supabaseUrl || !supabaseAnonKey) {\n    console.error(\n      \"Missing environment variables NEXT_PUBLIC_SUPABASE_URL or NEXT_PUBLIC_SUPABASE_ANON_KEY\"\n    );\n    throw new Error(\"Supabase URL or Anon Key is missing.\");\n  }\n}\n\n// --------------------------------------\n// Patch global `fetch` on the **server** to use `ponyfetch`.\n// This avoids the infamous Undici \"Socket closed unexpectedly\" bug on\n// Windows/Node 18-20 without relying on fragile Undici internals.\n// The patch is idempotent and NO-OPs in the browser.\n\nif (typeof window === \"undefined\") {\n  const g = globalThis as any;\n  if (!g.__USING_PONYFETCH__) {\n    g.fetch = ponyfetch as unknown as typeof fetch;\n    g.__USING_PONYFETCH__ = true;\n    console.info(\"[Supabase] Server fetch patched to use ponyfetch ✅\");\n  }\n}\n\n// --- Browser Client (Singleton with Hook) ---\nlet browserClientInstance: TypedSSRSupabaseClient | undefined;\n\nfunction getSupabaseBrowserClient(): TypedSSRSupabaseClient {\n  checkPublicEnvVars();\n  if (browserClientInstance) {\n    return browserClientInstance;\n  }\n\n  // In the browser we rely on the native `fetch` implementation to ensure that\n  // request headers (apikey/Authorization) are preserved. Injecting a ponyfill\n  // here has proven to strip custom headers in certain edge-cases, leading to\n  // 401 \"No API key found\" responses. Therefore we only attach the required\n  // headers and leave `fetch` undefined so @supabase/ssr uses the global one.\n\n  browserClientInstance = _createBrowserClient<Database>(\n    supabaseUrl!,\n    supabaseAnonKey!,\n    {\n      global: {\n        headers: anonymousHeaders,\n      },\n    }\n  );\n\n  if (typeof window !== \"undefined\") {\n    console.debug(\"[Supabase] anon key present?\", !!supabaseAnonKey);\n  }\n\n  return browserClientInstance;\n}\n\n/**\n * Hook to get a Supabase client instance suitable for Browser/Client Components.\n * Uses a singleton pattern to ensure only one client instance is created.\n * Leverages @supabase/ssr for proper session handling with Next.js App Router.\n * @returns Memoized Supabase client instance for browser usage.\n */\nexport function useSupabaseBrowser(): TypedSSRSupabaseClient {\n  return useMemo(getSupabaseBrowserClient, []);\n}\n\n// This is the primary export for creating a browser client directly\nexport function createClient(): TypedSSRSupabaseClient {\n  checkPublicEnvVars();\n  return _createBrowserClient<Database>(supabaseUrl!, supabaseAnonKey!, {\n    global: {\n      headers: anonymousHeaders,\n    },\n  });\n}\n\n// --- Server Client (For Server Components, Route Handlers, Server Actions) ---\n\n/**\n * Creates a Supabase client suitable for use in Server Components, Server Actions,\n * and Route Handlers that require access to cookies.\n * @param cookieStore A ReadonlyRequestCookies instance (e.g., from `next/headers`).\n * @returns Supabase client instance for server-side usage with cookie handling.\n */\nexport function createSupabaseServerClient(\n  cookieStore: ReadonlyRequestCookies\n): TypedSSRSupabaseClient {\n  checkPublicEnvVars();\n  return _createServerClient<Database>(supabaseUrl!, supabaseAnonKey!, {\n    cookies: {\n      get(name: string) {\n        return cookieStore.get(name)?.value;\n      },\n      set(name: string, value: string, options) {\n        try {\n          cookieStore.set(name, value, options);\n        } catch (error) {\n          console.warn(`Failed to set cookie '${name}':`, error);\n        }\n      },\n      remove(name: string, options) {\n        try {\n          cookieStore.set(name, \"\", options);\n        } catch (error) {\n          console.warn(`Failed to remove cookie '${name}':`, error);\n        }\n      },\n    },\n    global: {\n      fetch: ponyfetch,\n      headers: anonymousHeaders,\n    },\n  });\n}\n\n// --- Service Role Client (Admin Operations) ---\n\n/**\n * Creates a Supabase client with the service role key for admin operations.\n * WARNING: This client bypasses RLS. Use only in trusted server-side environments\n * with proper authorization checks. NEVER expose the service role key to the browser.\n * @returns Supabase client instance with service_role privileges.\n */\nexport function createSupabaseServiceClient(): TypedSupabaseClient {\n  if (!supabaseUrl || !serviceRoleKey) {\n    console.error(\"Supabase URL or Service Role Key is missing\");\n    throw new Error(\"Supabase service client configuration is incomplete.\");\n  }\n\n  return createSupabaseClient<Database>(supabaseUrl, serviceRoleKey, {\n    auth: {\n      autoRefreshToken: false,\n      persistSession: false,\n    },\n    global: {\n      fetch: ponyfetch,\n      headers: serviceHeaders,\n    },\n  });\n}\n\n// --- Client with Custom Auth Token ---\n\n/**\n * Creates a Supabase client authenticated with a custom JWT token.\n * Useful for scenarios like testing or specific server-to-server interactions.\n * @param authToken JWT token for authentication.\n * @returns Authenticated Supabase client instance.\n */\nexport function createClientWithAuth(authToken: string): TypedSupabaseClient {\n  checkPublicEnvVars();\n  return createSupabaseClient<Database>(supabaseUrl!, supabaseAnonKey!, {\n    auth: {\n      persistSession: false,\n      autoRefreshToken: false,\n      detectSessionInUrl: false,\n    },\n    global: {\n      fetch: ponyfetch,\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        ...(anonymousHeaders ?? {}),\n      },\n    },\n  });\n}\n\n// ======================================\n// EDGE RUNTIME CLIENT\n// ======================================\n\n/**\n * Creates a Supabase client suitable for Edge Runtime environments (e.g., Edge Functions, Middleware).\n * Reads cookies from the Request headers. Requires manual handling for setting/removing cookies\n * via Response headers in the calling Edge function.\n * @param request The Request object from the Edge Function context.\n */\nexport const createEdgeClient = (request: Request): TypedSSRSupabaseClient => {\n  checkPublicEnvVars();\n  const cookieHeader = request.headers.get(\"cookie\") ?? \"\";\n\n  return _createServerClient<Database>(supabaseUrl!, supabaseAnonKey!, {\n    cookies: {\n      get(name: string) {\n        const match = cookieHeader.match(new RegExp(`(^|;)\\s*${name}=([^;]+)`));\n        return match?.[2];\n      },\n      set(name: string, value: string, options) {\n        console.warn(\n          `Attempted to set cookie '${name}' in createEdgeClient. This must be handled by the caller via Response headers.`\n        );\n      },\n      remove(name: string, options) {\n        console.warn(\n          `Attempted to remove cookie '${name}' in createEdgeClient. This must be handled by the caller via Response headers.`\n        );\n      },\n    },\n    global: {\n      fetch: ponyfetch,\n      headers: anonymousHeaders,\n    },\n  });\n};\n\n// --- Remove Deprecated Compatibility Exports ---\n\n/**\n * @deprecated Use `useSupabaseBrowser` in Client Components or `createSupabaseServerClient` in Server Components/Actions/Routes.\n */\nexport const getSupabaseClient = getSupabaseBrowserClient;\n\n/**\n * @deprecated Use `createSupabaseServiceClient` for elevated privilege operations.\n */\nexport const createServiceClient = createSupabaseServiceClient;\n\n/**\n * @deprecated Prefer specific client creation (`useSupabaseBrowser`, `createSupabaseServerClient`, `createSupabaseServiceClient`). Avoid direct default export usage.\n */\nexport const supabase = getSupabaseBrowserClient();\n","module.exports = require(\"stream\");","module.exports = require(\"util\");","module.exports = require(\"fs\");","module.exports = require(\"next/dist/server/app-render/work-async-storage.external.js\");","module.exports = require(\"node:child_process\");","module.exports = require(\"path\");","module.exports = require(\"tls\");","module.exports = require(\"diagnostics_channel\");","module.exports = require(\"node:http\");","module.exports = require(\"node:zlib\");","module.exports = require(\"node:tls\");","module.exports = require(\"node:https\");","module.exports = require(\"next/dist/compiled/next-server/app-route.runtime.prod.js\");","import { NextRequest, NextResponse } from 'next/server';\r\nimport { z } from 'zod';\r\n\r\nimport { getSupabaseClient } from '@/lib/supabase/client';\r\n\r\n// For API optimization - using Node.js runtime\r\nexport const dynamic = 'force-dynamic';\r\nexport const maxDuration = 60; // Set max duration to 60 seconds\r\n\r\n// Schema for request validation\r\nconst extractSchema = z.object({\r\n  urls: z.array(z.string().url()),\r\n  prompt: z.string().min(1, \"Prompt cannot be empty\"),\r\n});\r\n\r\n// Define an interface for the extraction results\r\ninterface ExtractionResult {\r\n  success: boolean;\r\n  data: any;\r\n  error?: string;\r\n}\r\n\r\n/**\r\n * API route for extracting data from URLs using Firecrawl or other services\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Parse and validate the request body\r\n    const body = await request.json();\r\n    const { urls, prompt } = extractSchema.parse(body);\r\n\r\n    // If using Firecrawl, instantiate the client\r\n    if (process.env.FIRECRAWL_API_KEY) {\r\n      try {\r\n        // Using proper dynamic import\r\n        let extractionResult: ExtractionResult;\r\n        \r\n        try {\r\n          // Standard dynamic import\r\n          const firecrawlImport = await import('@mendable/firecrawl-js');\r\n          const FirecrawlApp = firecrawlImport.default;\r\n          \r\n          const firecrawl = new FirecrawlApp({\r\n            apiKey: process.env.FIRECRAWL_API_KEY\r\n          });\r\n\r\n          // Perform the extraction\r\n          extractionResult = await firecrawl.extract(urls, {\r\n            prompt,\r\n          });\r\n        } catch (importError) {\r\n          console.error('Firecrawl not available:', importError);\r\n          throw new Error('Extraction service not available');\r\n        }\r\n\r\n        if (!extractionResult.success) {\r\n          throw new Error(extractionResult.error || 'Extraction failed');\r\n        }\r\n\r\n        // Log the extraction for analytics\r\n        try {\r\n          const supabase = getSupabaseClient();\r\n          await supabase.from('extraction_queries').insert({\r\n            urls: urls.join(','),\r\n            prompt,\r\n            timestamp: new Date().toISOString(),\r\n          });\r\n        } catch (logError) {\r\n          // Just log the error but don't fail the request\r\n          console.error('Failed to log extraction:', logError);\r\n        }\r\n\r\n        return NextResponse.json({\r\n          success: true,\r\n          data: extractionResult.data,\r\n        });\r\n      } catch (error) {\r\n        console.error('Firecrawl extraction error:', error);\r\n        throw error;\r\n      }\r\n    } else {\r\n      // Fallback for when Firecrawl is not available\r\n      return NextResponse.json({\r\n        success: true,\r\n        data: {\r\n          extracted: `This is a fallback response because the extraction service is not configured. You wanted to extract information about \"${prompt}\" from ${urls.length} URLs.`,\r\n        },\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error('Extraction API error:', error);\r\n    return NextResponse.json({\r\n      success: false,\r\n      error: error instanceof Error ? error.message : 'An unknown error occurred',\r\n    }, { status: error instanceof z.ZodError ? 400 : 500 });\r\n  }\r\n} ","import * as origModule from 'next/dist/server/app-render/work-unit-async-storage.external.js';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport {} from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nimport * as Sentry from '@sentry/nextjs';\n\n// @ts-expect-error Because we cannot be sure if the RequestAsyncStorage module exists (it is not part of the Next.js public\n// API) we use a shim if it doesn't exist. The logic for this is in the wrapping loader.\n\nconst asyncStorageModule = { ...origModule } ;\n\nconst requestAsyncStorage =\n  'workUnitAsyncStorage' in asyncStorageModule\n    ? asyncStorageModule.workUnitAsyncStorage\n    : 'requestAsyncStorage' in asyncStorageModule\n      ? asyncStorageModule.requestAsyncStorage\n      : undefined;\n\nfunction wrapHandler(handler, method) {\n  // Running the instrumentation code during the build phase will mark any function as \"dynamic\" because we're accessing\n  // the Request object. We do not want to turn handlers dynamic so we skip instrumentation in the build phase.\n  if (process.env.NEXT_PHASE === 'phase-production-build') {\n    return handler;\n  }\n\n  if (typeof handler !== 'function') {\n    return handler;\n  }\n\n  return new Proxy(handler, {\n    apply: (originalFunction, thisArg, args) => {\n      let headers = undefined;\n\n      // We try-catch here just in case the API around `requestAsyncStorage` changes unexpectedly since it is not public API\n      try {\n        const requestAsyncStore = requestAsyncStorage?.getStore() ;\n        headers = requestAsyncStore?.headers;\n      } catch (e) {\n        /** empty */\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return Sentry.wrapRouteHandlerWithSentry(originalFunction , {\n        method,\n        parameterizedRoute: '/api/ai/extract',\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst GET = wrapHandler(serverComponentModule.GET , 'GET');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst POST = wrapHandler(serverComponentModule.POST , 'POST');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PUT = wrapHandler(serverComponentModule.PUT , 'PUT');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PATCH = wrapHandler(serverComponentModule.PATCH , 'PATCH');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst DELETE = wrapHandler(serverComponentModule.DELETE , 'DELETE');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst HEAD = wrapHandler(serverComponentModule.HEAD , 'HEAD');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst OPTIONS = wrapHandler(serverComponentModule.OPTIONS , 'OPTIONS');\n\nexport { DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT };\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\api\\\\ai\\\\extract\\\\route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/ai/extract/route\",\n        pathname: \"/api/ai/extract\",\n        filename: \"route\",\n        bundlePath: \"app/api/ai/extract/route\"\n    },\n    resolvedPagePath: \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\api\\\\ai\\\\extract\\\\route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","module.exports = require(\"node:os\");","module.exports = require(\"node:diagnostics_channel\");","module.exports = require(\"crypto\");","module.exports = require(\"https\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:util\");","/* (ignored) */","module.exports = require(\"next/dist/server/app-render/work-unit-async-storage.external.js\");","module.exports = require(\"node:fs\");","module.exports = require(\"worker_threads\");","module.exports = require(\"zlib\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"node:worker_threads\");","module.exports = require(\"node:path\");","module.exports = require(\"node:net\");","module.exports = require(\"buffer\");","module.exports = require(\"url\");","module.exports = require(\"child_process\");","module.exports = require(\"node:readline\");","module.exports = require(\"http\");","module.exports = require(\"tty\");","module.exports = require(\"async_hooks\");","module.exports = require(\"node:inspector\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    isRequestAPICallableInsideAfter: null,\n    throwForSearchParamsAccessInUseCache: null,\n    throwWithStaticGenerationBailoutError: null,\n    throwWithStaticGenerationBailoutErrorWithDynamicError: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    isRequestAPICallableInsideAfter: function() {\n        return isRequestAPICallableInsideAfter;\n    },\n    throwForSearchParamsAccessInUseCache: function() {\n        return throwForSearchParamsAccessInUseCache;\n    },\n    throwWithStaticGenerationBailoutError: function() {\n        return throwWithStaticGenerationBailoutError;\n    },\n    throwWithStaticGenerationBailoutErrorWithDynamicError: function() {\n        return throwWithStaticGenerationBailoutErrorWithDynamicError;\n    }\n});\nconst _staticgenerationbailout = require(\"../../client/components/static-generation-bailout\");\nconst _aftertaskasyncstorageexternal = require(\"../app-render/after-task-async-storage.external\");\nfunction throwWithStaticGenerationBailoutError(route, expression) {\n    throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route ${route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n        value: \"E576\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction throwWithStaticGenerationBailoutErrorWithDynamicError(route, expression) {\n    throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route ${route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n        value: \"E543\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction throwForSearchParamsAccessInUseCache(route) {\n    throw Object.defineProperty(new Error(`Route ${route} used \"searchParams\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"searchParams\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`), \"__NEXT_ERROR_CODE\", {\n        value: \"E634\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction isRequestAPICallableInsideAfter() {\n    const afterTaskStore = _aftertaskasyncstorageexternal.afterTaskAsyncStorage.getStore();\n    return (afterTaskStore == null ? void 0 : afterTaskStore.rootTaskSpawnPhase) === 'action';\n}\n\n//# sourceMappingURL=utils.js.map","module.exports = require(\"net\");","module.exports = require(\"events\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 96708;\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 97108;\nmodule.exports = webpackEmptyContext;"],"names":["browserClientInstance","fetch","ponyfetch","fetchPonyfill","supabaseUrl","process","supabaseAnonKey","serviceRoleKey","env","SUPABASE_SERVICE_ROLE_KEY","anonymousHeaders","apikey","undefined","serviceHeaders","checkPublicEnvVars","console","error","g","globalThis","__USING_PONYFETCH__","getSupabaseBrowserClient","_createBrowserClient","global","headers","createClient","createSupabaseServerClient","cookieStore","_createServerClient","cookies","get","name","value","set","options","warn","remove","createSupabaseServiceClient","createSupabaseClient","auth","autoRefreshToken","persistSession","createEdgeClient","cookieHeader","request","match","createServiceClient","supabase","dynamic","maxDuration","z","urls","url","prompt","min","POST","body","json","extractSchema","parse","FIRECRAWL_API_KEY","NextResponse","success","data","extracted","length","extractionResult","firecrawl","firecrawlImport","FirecrawlApp","default","apiKey","extract","importError","Error","getSupabaseClient","from","insert","join","timestamp","Date","toISOString","logError","message","status","serverComponentModule.GET","serverComponentModule.PUT","serverComponentModule.PATCH","serverComponentModule.DELETE","serverComponentModule.HEAD","serverComponentModule.OPTIONS"],"sourceRoot":""}