import { DataStream, ToolExecutionOptions } from "ai";
import { z } from "zod";

// Placeholder tool to generate a simple text artifact via data stream
export const createSimpleArtifactTool = {
  description: "Generates a simple text artifact with predefined content.",
  parameters: z.object({
    title: z.string().describe("The title for the artifact."),
  }),
  execute: async (
    { title }: { title: string },
    options: ToolExecutionOptions,
  ) => {
    // Access stream from options
    const stream = options.stream;
    if (!stream) {
      throw new Error(
        "Data stream is not available in tool execution options.",
      );
    }

    console.log(`Tool: createSimpleArtifact called with title: ${title}`);

    // 1. Send initial artifact metadata
    stream.appendData({
      type: "artifact_kind",
      value: "text",
    });
    stream.appendData({
      type: "artifact_title",
      value: title || "Generated Artifact",
    });

    // 2. Simulate streaming content
    const content = `This is the content for the artifact titled "${title}". It's generated by a placeholder tool.`;
    const words = content.split(" ");
    for (const word of words) {
      stream.appendData({
        type: "text-delta",
        value: word + " ",
      });
      // Simulate delay for streaming effect
      await new Promise((resolve) => setTimeout(resolve, 50));
    }

    // 3. Signal artifact completion
    stream.appendData({
      type: "artifact_finish",
    });

    // 4. Return a message to the chat (optional)
    return `Created artifact: ${title}`;
  },
};
