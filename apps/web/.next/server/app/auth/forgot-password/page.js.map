{"version":3,"file":"../app/auth/forgot-password/page.js","mappings":"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","sources":["webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/after-task-async-storage.external.js\"","webpack://@hijraah/web/./src/types/auth.ts","webpack://@hijraah/web/./src/lib/auth/hooks.tsx","webpack://@hijraah/web/external commonjs2 \"module\"","webpack://@hijraah/web/external commonjs \"next/dist/compiled/next-server/app-page.runtime.prod.js\"","webpack://@hijraah/web/external commonjs2 \"punycode\"","webpack://@hijraah/web/./src/components/ui/use-toast.tsx","webpack://@hijraah/web/../../node_modules/.pnpm/@supabase+realtime-js@2.11.10_bufferutil@4.0.9/node_modules/@supabase/realtime-js/dist/main/ sync?5147","webpack://@hijraah/web/./src/components/ui/label.tsx","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/action-async-storage.external.js\"","webpack://@hijraah/web/external commonjs2 \"process\"","webpack://@hijraah/web/./src/app/auth/forgot-password/page.tsx","webpack://@hijraah/web/external commonjs2 \"os\"","webpack://@hijraah/web/?a2e4","webpack://@hijraah/web/external commonjs2 \"stream\"","webpack://@hijraah/web/external commonjs2 \"util\"","webpack://@hijraah/web/external commonjs2 \"fs\"","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/work-async-storage.external.js\"","webpack://@hijraah/web/../src/label.tsx","webpack://@hijraah/web/external node-commonjs \"node:child_process\"","webpack://@hijraah/web/./src/lib/supabase/client.ts","webpack://@hijraah/web/external commonjs2 \"path\"","webpack://@hijraah/web/external commonjs2 \"tls\"","webpack://@hijraah/web/external commonjs2 \"diagnostics_channel\"","webpack://@hijraah/web/sentry-wrapper-module","webpack://@hijraah/web/external node-commonjs \"node:http\"","webpack://@hijraah/web/external node-commonjs \"node:zlib\"","webpack://@hijraah/web/?36b4","webpack://@hijraah/web/external node-commonjs \"node:tls\"","webpack://@hijraah/web/external node-commonjs \"node:https\"","webpack://@hijraah/web/external node-commonjs \"node:os\"","webpack://@hijraah/web/external node-commonjs \"node:diagnostics_channel\"","webpack://@hijraah/web/external commonjs2 \"crypto\"","webpack://@hijraah/web/external commonjs2 \"https\"","webpack://@hijraah/web/../../node_modules/.pnpm/@radix-ui+react-primitive@2_6162bfe80a00db392cb1b806315fba03/node_modules/@radix-ui/react-primitive/dist/index.mjs","webpack://@hijraah/web/external node-commonjs \"node:stream\"","webpack://@hijraah/web/external node-commonjs \"node:util\"","webpack://@hijraah/web/ignored|E:\\downloads\\Hijraah\\node_modules\\.pnpm\\ws@8.18.2_bufferutil@4.0.9\\node_modules\\ws\\lib|utf-8-validate","webpack://@hijraah/web/./src/lib/auth/errors.ts","webpack://@hijraah/web/./src/lib/auth/rbac.ts","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/work-unit-async-storage.external.js\"","webpack://@hijraah/web/external node-commonjs \"node:fs\"","webpack://@hijraah/web/external commonjs2 \"worker_threads\"","webpack://@hijraah/web/external commonjs2 \"zlib\"","webpack://@hijraah/web/external commonjs2 \"perf_hooks\"","webpack://@hijraah/web/external node-commonjs \"node:worker_threads\"","webpack://@hijraah/web/external node-commonjs \"node:path\"","webpack://@hijraah/web/external node-commonjs \"node:net\"","webpack://@hijraah/web/external node-commonjs \"node:crypto\"","webpack://@hijraah/web/./src/components/ui/input.tsx","webpack://@hijraah/web/external commonjs2 \"buffer\"","webpack://@hijraah/web/external commonjs2 \"url\"","webpack://@hijraah/web/external commonjs2 \"child_process\"","webpack://@hijraah/web/external node-commonjs \"node:readline\"","webpack://@hijraah/web/external commonjs2 \"http\"","webpack://@hijraah/web/external commonjs2 \"tty\"","webpack://@hijraah/web/?a839","webpack://@hijraah/web/external commonjs2 \"async_hooks\"","webpack://@hijraah/web/external module \"ai\"","webpack://@hijraah/web/external node-commonjs \"node:inspector\"","webpack://@hijraah/web/external commonjs2 \"net\"","webpack://@hijraah/web/external commonjs2 \"events\""],"sourcesContent":["module.exports = require(\"next/dist/server/app-render/after-task-async-storage.external.js\");","// This file is the single source of truth for Authentication and RBAC related types\r\n\r\nimport { Session, User, SupabaseClient } from \"@supabase/supabase-js\";\r\n\r\nimport { Database } from \"@/types/database.types\";\r\n\r\n// RBAC Types (from former rbac.ts)\r\nexport type Permission = string;\r\n\r\nexport interface Role {\r\n  name: string;\r\n  description?: string;\r\n  permissions: Permission[];\r\n  inherits?: string[];\r\n}\r\n\r\nexport interface RBACOptions {\r\n  roles?: Record<string, Role>;\r\n  superAdminRole?: string;\r\n  enableCache?: boolean;\r\n  extractRoles?: (user: ExtendedUser) => string[];\r\n}\r\n\r\n// Auth Types (from former src/lib/auth/types.ts)\r\nexport interface UserSettings {\r\n  theme: string;\r\n  language: string;\r\n  emailNotifications: boolean;\r\n  documentReminders: boolean;\r\n  applicationUpdates: boolean;\r\n  twoFactorAuth: boolean;\r\n}\r\n\r\nexport type ExtendedUser = User & {\r\n  fullName: string;\r\n  avatarUrl: string;\r\n  role: Database[\"public\"][\"Enums\"][\"user_role\"]; // Updated to use the enum from database\r\n  isAdmin?: boolean; // Consider deriving from a hasPermission('admin.access') or similar\r\n  settings?: UserSettings;\r\n  hasTwoFactorAuth?: () => boolean;\r\n  updateSettings?: (settings: Partial<UserSettings>) => ExtendedUser;\r\n  toObject?: () => Record<string, any>;\r\n};\r\n\r\nexport type AuthProvider = \"google\" | \"github\" | \"email\" | \"phone\" | \"azure\"; // Added azure from old types.ts\r\n\r\nexport interface AuthContextType {\r\n  user: ExtendedUser | null;\r\n  session: Session | null;\r\n  isLoading: boolean;\r\n  isAuthenticated: boolean;\r\n  error: any | null; // Consider a more specific error type\r\n  signIn: (provider: AuthProvider, options?: any) => Promise<void>;\r\n  signOut: () => Promise<void>;\r\n  refreshSession: () => Promise<void>;\r\n  signUp: (options: {\r\n    email: string;\r\n    password: string;\r\n    fullName?: string;\r\n    redirectTo?: string;\r\n  }) => Promise<any>; // Consider specific result type\r\n  resetPassword: (email: string, redirectTo?: string) => Promise<boolean>;\r\n  updatePassword: (password: string) => Promise<boolean>;\r\n  hasPermission?: (permission: Permission) => boolean; // Added from old types.ts\r\n}\r\n\r\nexport interface AuthMiddlewareContext {\r\n  user: ExtendedUser | null;\r\n  session: Session | null;\r\n  isAuthenticated: boolean;\r\n  supabase: SupabaseClient<Database>; // Use SupabaseClient<Database> here\r\n  hasPermission?: (permission: Permission) => boolean;\r\n}\r\n\r\n// Utility function (can live here or be moved to a helpers file if it grows)\r\nexport function createExtendedUser(user: User | null): ExtendedUser | null {\r\n  if (!user) return null;\r\n\r\n  const role = (user.user_metadata?.role ||\r\n    \"client\") as Database[\"public\"][\"Enums\"][\"user_role\"];\r\n  const isAdmin = role === \"admin\"; // This isAdmin flag should be used cautiously, prefer RBAC checks\r\n\r\n  const settings: UserSettings = {\r\n    theme: user.user_metadata?.settings_theme || \"system\",\r\n    language: user.user_metadata?.settings_language || \"en\",\r\n    emailNotifications:\r\n      user.user_metadata?.settings_emailNotifications || false,\r\n    documentReminders: user.user_metadata?.settings_documentReminders || false,\r\n    applicationUpdates:\r\n      user.user_metadata?.settings_applicationUpdates || false,\r\n    twoFactorAuth: user.user_metadata?.settings_twoFactorAuth || false,\r\n  };\r\n\r\n  const extendedUser: ExtendedUser = {\r\n    ...user,\r\n    fullName:\r\n      user.user_metadata?.full_name || user.email?.split(\"@\")[0] || \"User\",\r\n    avatarUrl: user.user_metadata?.avatar_url || \"\",\r\n    role,\r\n    isAdmin,\r\n    settings,\r\n    hasTwoFactorAuth: () => settings.twoFactorAuth,\r\n    updateSettings: (newSettings: Partial<UserSettings>) => {\r\n      const updatedSettings = { ...settings, ...newSettings };\r\n      return createExtendedUser({\r\n        ...user,\r\n        user_metadata: {\r\n          ...user.user_metadata,\r\n          settings_theme: updatedSettings.theme,\r\n          settings_language: updatedSettings.language,\r\n          settings_emailNotifications: updatedSettings.emailNotifications,\r\n          settings_documentReminders: updatedSettings.documentReminders,\r\n          settings_applicationUpdates: updatedSettings.applicationUpdates,\r\n          settings_twoFactorAuth: updatedSettings.twoFactorAuth,\r\n        },\r\n      }) as ExtendedUser;\r\n    },\r\n    toObject: () => ({\r\n      id: user.id,\r\n      email: user.email,\r\n      fullName:\r\n        user.user_metadata?.full_name || user.email?.split(\"@\")[0] || \"User\",\r\n      avatarUrl: user.user_metadata?.avatar_url || \"\",\r\n      role,\r\n      settings,\r\n    }),\r\n  };\r\n\r\n  return extendedUser;\r\n}\r\n\r\n// Types from the old src/types/types.ts that were not in src/lib/auth/types.ts\r\n// (Excluding duplicates like ExtendedUser, AuthProvider which are merged above)\r\n\r\nexport interface AuthResult {\r\n  session: Session | null;\r\n  user: User | null; // Should this be ExtendedUser?\r\n  error: Error | null;\r\n}\r\n\r\nexport interface AuthState {\r\n  user: ExtendedUser | null;\r\n  session: Session | null;\r\n  isLoading: boolean;\r\n  isAuthenticated: boolean;\r\n  error?: Error | null;\r\n}\r\n\r\nexport interface LoginCredentials {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface SignUpData {\r\n  email: string;\r\n  password: string;\r\n  fullName?: string;\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\nexport interface AuthOptions {\r\n  redirectTo?: string;\r\n  email?: string;\r\n  metadata?: Record<string, any>;\r\n  provider?: {\r\n    id: string;\r\n    scopes?: string;\r\n  };\r\n}\r\n\r\nexport type AuthChangeCallback = (\r\n  session: Session | null,\r\n  user: User | null // Should this be ExtendedUser?\r\n) => void | Promise<void>;\r\n\r\nexport interface InitOptions {\r\n  refreshSession?: boolean;\r\n  autoRecoverSession?: boolean;\r\n  refreshOptions?: {\r\n    enableAutoRefresh?: boolean;\r\n    refreshThreshold?: number;\r\n  };\r\n}\r\n","\"use client\";\r\n\r\nimport { Session, User } from \"@supabase/supabase-js\";\r\nimport {\r\n  useState,\r\n  useEffect,\r\n  createContext,\r\n  useContext,\r\n  useCallback,\r\n  ReactNode,\r\n} from \"react\";\r\n\r\nimport { createClient } from \"@/lib/supabase/client\";\r\n\r\nimport { hasPermission } from \"./rbac\";\r\nimport {\r\n  AuthContextType,\r\n  type AuthProvider,\r\n  ExtendedUser,\r\n  createExtendedUser,\r\n} from \"@/types/auth\";\r\n\r\n// Create Auth Context\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\n/**\r\n * Provider component to wrap your app and provide authentication state\r\n */\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const [user, setUser] = useState<ExtendedUser | null>(null);\r\n  const [session, setSession] = useState<Session | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const supabase = createClient();\r\n\r\n  // Refresh session\r\n  const refreshSession = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const {\r\n        data: { session },\r\n        error: sessionError,\r\n      } = await supabase.auth.getSession();\r\n\r\n      if (sessionError) throw sessionError;\r\n\r\n      if (session) {\r\n        const {\r\n          data: { user },\r\n          error: userError,\r\n        } = await supabase.auth.getUser();\r\n        if (userError) throw userError;\r\n\r\n        setSession(session);\r\n        setUser(createExtendedUser(user));\r\n      } else {\r\n        setSession(null);\r\n        setUser(null);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error refreshing session:\", error);\r\n      setSession(null);\r\n      setUser(null);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [supabase]);\r\n\r\n  // Sign in with provider\r\n  const signIn = useCallback(\r\n    async (provider: AuthProvider, options?: any) => {\r\n      setIsLoading(true);\r\n      try {\r\n        if (provider === \"email\") {\r\n          if (!options?.email || !options?.password) {\r\n            throw new Error(\"Email and password required for email sign in\");\r\n          }\r\n          const { data, error } = await supabase.auth.signInWithPassword({\r\n            email: options.email,\r\n            password: options.password,\r\n          });\r\n\r\n          if (error) throw error;\r\n\r\n          // Email sign-in provides session immediately\r\n          if (data?.session) {\r\n            setSession(data.session);\r\n            setUser(createExtendedUser(data.session.user));\r\n          }\r\n        } else {\r\n          // OAuth provider sign-in redirects to provider\r\n          const { error } = await supabase.auth.signInWithOAuth({\r\n            provider: provider as any,\r\n            options: options?.redirectTo\r\n              ? { redirectTo: options.redirectTo }\r\n              : undefined,\r\n          });\r\n\r\n          if (error) throw error;\r\n          // No session update here as user will be redirected\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error signing in:\", error);\r\n        throw error;\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    [supabase]\r\n  );\r\n\r\n  // Sign out\r\n  const signOut = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const { error } = await supabase.auth.signOut();\r\n      if (error) throw error;\r\n\r\n      setSession(null);\r\n      setUser(null);\r\n    } catch (error) {\r\n      console.error(\"Error signing out:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [supabase]);\r\n\r\n  // Sign up with email/password\r\n  const signUp = useCallback(\r\n    async (options: {\r\n      email: string;\r\n      password: string;\r\n      fullName?: string;\r\n      redirectTo?: string;\r\n    }) => {\r\n      setIsLoading(true);\r\n      try {\r\n        if (!options.email || !options.password) {\r\n          throw new Error(\"Email and password required for sign up\");\r\n        }\r\n\r\n        const { data, error } = await supabase.auth.signUp({\r\n          email: options.email,\r\n          password: options.password,\r\n          options: {\r\n            data: {\r\n              full_name: options.fullName || \"\",\r\n            },\r\n            emailRedirectTo:\r\n              options.redirectTo || `${window.location.origin}/auth/callback`,\r\n          },\r\n        });\r\n\r\n        if (error) throw error;\r\n        return data;\r\n      } catch (error) {\r\n        console.error(\"Error signing up:\", error);\r\n        throw error;\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    [supabase]\r\n  );\r\n\r\n  // Reset password\r\n  const resetPassword = useCallback(\r\n    async (email: string, redirectTo?: string) => {\r\n      setIsLoading(true);\r\n      try {\r\n        const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n          redirectTo:\r\n            redirectTo || `${window.location.origin}/auth/reset-password`,\r\n        });\r\n\r\n        if (error) throw error;\r\n        return true;\r\n      } catch (error) {\r\n        console.error(\"Error resetting password:\", error);\r\n        throw error;\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    [supabase]\r\n  );\r\n\r\n  // Update password\r\n  const updatePassword = useCallback(\r\n    async (password: string) => {\r\n      setIsLoading(true);\r\n      try {\r\n        const { error } = await supabase.auth.updateUser({\r\n          password,\r\n        });\r\n\r\n        if (error) throw error;\r\n        return true;\r\n      } catch (error) {\r\n        console.error(\"Error updating password:\", error);\r\n        throw error;\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    },\r\n    [supabase]\r\n  );\r\n\r\n  // Set up auth listener\r\n  useEffect(() => {\r\n    const {\r\n      data: { subscription },\r\n    } = supabase.auth.onAuthStateChange(async (_event, session) => {\r\n      setSession(session);\r\n\r\n      // When auth state changes, get authenticated user data\r\n      if (session) {\r\n        const { data: userData, error } = await supabase.auth.getUser();\r\n        if (!error && userData) {\r\n          setUser(createExtendedUser(userData.user));\r\n        } else {\r\n          setUser(null);\r\n        }\r\n      } else {\r\n        setUser(null);\r\n      }\r\n\r\n      setIsLoading(false);\r\n    });\r\n\r\n    // Get initial session\r\n    refreshSession();\r\n\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, [supabase, refreshSession]);\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    session,\r\n    isLoading,\r\n    isAuthenticated: !!session,\r\n    signIn,\r\n    signOut,\r\n    refreshSession,\r\n    // Add these new functions\r\n    signUp,\r\n    resetPassword,\r\n    updatePassword,\r\n    error: null, // For backwards compatibility\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\n/**\r\n * Hook to access authentication state and methods\r\n */\r\nexport function useAuth(): AuthContextType {\r\n  const context = useContext(AuthContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\n/**\r\n * Hook to get the current user\r\n */\r\nexport function useUser(): ExtendedUser | null {\r\n  const { user } = useAuth();\r\n  return user;\r\n}\r\n\r\n/**\r\n * Hook to check if the user is authenticated\r\n */\r\nexport function useIsAuthenticated(): boolean {\r\n  const { isAuthenticated } = useAuth();\r\n  return isAuthenticated;\r\n}\r\n\r\n/**\r\n * Hook to check if the user has a specific role\r\n */\r\nexport function useHasRole(role: string): boolean {\r\n  const user = useUser();\r\n  return user?.role === role;\r\n}\r\n\r\n/**\r\n * Hook to check if the user has a specific permission\r\n */\r\nexport function useHasPermission(permission: string): boolean {\r\n  const user = useUser();\r\n  return hasPermission(user, permission);\r\n}\r\n\r\n/**\r\n * Hook to access the current session - for compatibility with next-auth style\r\n */\r\nexport function useSession() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useSession must be used within an AuthProvider\");\r\n  }\r\n  // Simplified return for direct session access if preferred elsewhere,\r\n  // but useAuth provides more comprehensive state.\r\n  return {\r\n    session: context.session,\r\n    user: context.user,\r\n    isLoading: context.isLoading,\r\n    error: null, // Assuming errors are handled and reported differently, or add context.error\r\n    refreshSession: context.refreshSession, // Expose refreshSession\r\n  };\r\n}\r\n","module.exports = require(\"module\");","module.exports = require(\"next/dist/compiled/next-server/app-page.runtime.prod.js\");","module.exports = require(\"punycode\");","// Copied and adapted from shadcn/ui toast component\r\n// https://ui.shadcn.com/docs/components/toast\r\n\r\nimport * as React from \"react\"\r\n\r\nimport {\r\n    type ToastActionElement,\r\n    type ToastProps,\r\n} from \"./toast\"\r\n\r\nconst TOAST_LIMIT = 5\r\nconst TOAST_REMOVE_DELAY = 1000000\r\n\r\ntype ToasterToast = ToastProps & {\r\n    id: string\r\n    title?: React.ReactNode\r\n    description?: React.ReactNode\r\n    action?: ToastActionElement\r\n}\r\n\r\nconst actionTypes = {\r\n    ADD_TOAST: \"ADD_TOAST\",\r\n    UPDATE_TOAST: \"UPDATE_TOAST\",\r\n    DISMISS_TOAST: \"DISMISS_TOAST\",\r\n    REMOVE_TOAST: \"REMOVE_TOAST\",\r\n} as const\r\n\r\nlet count = 0\r\n\r\nfunction genId() {\r\n    count = (count + 1) % Number.MAX_VALUE\r\n    return count.toString()\r\n}\r\n\r\ntype ActionType = typeof actionTypes\r\n\r\ntype Action =\r\n    | {\r\n        type: ActionType[\"ADD_TOAST\"]\r\n        toast: ToasterToast\r\n    }\r\n    | {\r\n        type: ActionType[\"UPDATE_TOAST\"]\r\n        toast: Partial<ToasterToast>\r\n    }\r\n    | {\r\n        type: ActionType[\"DISMISS_TOAST\"]\r\n        toastId?: string\r\n    }\r\n    | {\r\n        type: ActionType[\"REMOVE_TOAST\"]\r\n        toastId?: string\r\n    }\r\n\r\ninterface State {\r\n    toasts: ToasterToast[]\r\n}\r\n\r\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\r\n\r\nconst reducer = (state: State, action: Action): State => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TOAST:\r\n            return {\r\n                ...state,\r\n                toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n            }\r\n\r\n        case actionTypes.UPDATE_TOAST:\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.map((t) =>\r\n                    t.id === action.toast.id ? { ...t, ...action.toast } : t\r\n                ),\r\n            }\r\n\r\n        case actionTypes.DISMISS_TOAST: {\r\n            const { toastId } = action\r\n\r\n            // ! Side effects ! - This could be extracted into a dismissToast() action,\r\n            // but I'll keep it here for simplicity\r\n            if (toastId) {\r\n                if (toastTimeouts.has(toastId)) {\r\n                    clearTimeout(toastTimeouts.get(toastId))\r\n                    toastTimeouts.delete(toastId)\r\n                }\r\n            } else {\r\n                for (const [id, timeout] of toastTimeouts.entries()) {\r\n                    clearTimeout(timeout)\r\n                    toastTimeouts.delete(id)\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.map((t) =>\r\n                    t.id === toastId || toastId === undefined\r\n                        ? {\r\n                            ...t,\r\n                            open: false,\r\n                        }\r\n                        : t\r\n                ),\r\n            }\r\n        }\r\n        case actionTypes.REMOVE_TOAST:\r\n            if (action.toastId === undefined) {\r\n                return {\r\n                    ...state,\r\n                    toasts: [],\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                toasts: state.toasts.filter((t) => t.id !== action.toastId),\r\n            }\r\n    }\r\n}\r\n\r\nconst listeners: Array<(state: State) => void> = []\r\n\r\nlet memoryState: State = { toasts: [] }\r\n\r\nfunction dispatch(action: Action) {\r\n    memoryState = reducer(memoryState, action)\r\n    listeners.forEach((listener) => {\r\n        listener(memoryState)\r\n    })\r\n}\r\n\r\ntype Toast = Omit<ToasterToast, \"id\">\r\n\r\nfunction toast({ ...props }: Toast) {\r\n    const id = genId()\r\n\r\n    const update = (props: ToasterToast) =>\r\n        dispatch({\r\n            type: actionTypes.UPDATE_TOAST,\r\n            toast: { ...props, id },\r\n        })\r\n    const dismiss = () => dispatch({ type: actionTypes.DISMISS_TOAST, toastId: id })\r\n\r\n    dispatch({\r\n        type: actionTypes.ADD_TOAST,\r\n        toast: {\r\n            ...props,\r\n            id,\r\n            open: true,\r\n            onOpenChange: (open) => {\r\n                if (!open) dismiss()\r\n            },\r\n        },\r\n    })\r\n\r\n    return {\r\n        id,\r\n        dismiss,\r\n        update,\r\n    }\r\n}\r\n\r\nfunction useToast() {\r\n    const [state, setState] = React.useState<State>(memoryState)\r\n\r\n    React.useEffect(() => {\r\n        listeners.push(setState)\r\n        return () => {\r\n            const index = listeners.indexOf(setState)\r\n            if (index > -1) {\r\n                listeners.splice(index, 1)\r\n            }\r\n        }\r\n    }, [state])\r\n\r\n    return {\r\n        ...state,\r\n        toast,\r\n        dismiss: (toastId?: string) => dispatch({ type: actionTypes.DISMISS_TOAST, toastId }),\r\n    }\r\n}\r\n\r\nexport { useToast, toast } ","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 15668;\nmodule.exports = webpackEmptyContext;","\"use client\"\r\n\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Label({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\r\n  return (\r\n    <LabelPrimitive.Root\r\n      data-slot=\"label\"\r\n      className={cn(\r\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Label }\r\n","module.exports = require(\"next/dist/server/app-render/action-async-storage.external.js\");","module.exports = require(\"process\");","'use client';\r\n\r\nimport Link from 'next/link';\r\nimport { useState } from 'react';\r\n\r\nimport { Label } from '@/components/ui/label';\r\nimport { useToast } from '@/components/ui/use-toast';\r\nimport { useAuth } from '@/lib/auth/hooks';\r\nimport { Button } from '@/ui/button';\r\nimport { Input } from '@/ui/input';\r\n\r\nexport default function ForgotPasswordPage() {\r\n  const [email, setEmail] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { resetPassword } = useAuth();\r\n  const { toast } = useToast();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await resetPassword(email);\r\n      toast({\r\n        title: 'Check your email',\r\n        description: 'We have sent you a password reset link',\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        variant: 'destructive',\r\n        title: 'Error',\r\n        description: 'Failed to send reset email',\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container flex h-screen w-screen flex-col items-center justify-center\">\r\n      <div className=\"mx-auto flex w-full flex-col justify-center space-y-6 sm:w-[350px]\">\r\n        <div className=\"flex flex-col space-y-2 text-center\">\r\n          <h1 className=\"text-2xl font-semibold tracking-tight\">\r\n            Reset your password\r\n          </h1>\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            Enter your email address and we will send you a reset link\r\n          </p>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label htmlFor=\"email\">Email</Label>\r\n            <Input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"m@example.com\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            className=\"w-full\"\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? 'Sending reset link...' : 'Send Reset Link'}\r\n          </Button>\r\n        </form>\r\n\r\n        <div className=\"text-center text-sm\">\r\n          <Link\r\n            href=\"/auth/login\"\r\n            className=\"text-muted-foreground hover:text-primary\"\r\n          >\r\n            Back to login\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} ","module.exports = require(\"os\");","import(/* webpackMode: \"eager\" */ \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\auth\\\\forgot-password\\\\page.tsx\");\n","module.exports = require(\"stream\");","module.exports = require(\"util\");","module.exports = require(\"fs\");","module.exports = require(\"next/dist/server/app-render/work-async-storage.external.js\");","import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Label\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Label';\n\ntype LabelElement = React.ComponentRef<typeof Primitive.label>;\ntype PrimitiveLabelProps = React.ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface LabelProps extends PrimitiveLabelProps {}\n\nconst Label = React.forwardRef<LabelElement, LabelProps>((props, forwardedRef) => {\n  return (\n    <Primitive.label\n      {...props}\n      ref={forwardedRef}\n      onMouseDown={(event) => {\n        // only prevent text selection if clicking inside the label itself\n        const target = event.target as HTMLElement;\n        if (target.closest('button, input, select, textarea')) return;\n\n        props.onMouseDown?.(event);\n        // prevent text selection when double clicking label\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }}\n    />\n  );\n});\n\nLabel.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Label;\n\nexport {\n  Label,\n  //\n  Root,\n};\nexport type { LabelProps };\n","module.exports = require(\"node:child_process\");","import {\n  createBrowserClient as _createBrowserClient,\n  createServerClient as _createServerClient,\n} from \"@supabase/ssr\";\nimport {\n  createClient as createSupabaseClient,\n  SupabaseClient,\n  type SupabaseClient as CoreSupabaseClient,\n} from \"@supabase/supabase-js\";\nimport fetchPonyfill from \"fetch-ponyfill\";\nimport { useMemo } from \"react\";\n\nimport type { Database } from \"@/types/database.types\";\n\nimport type { ReadonlyRequestCookies } from \"next/dist/server/web/spec-extension/adapters/request-cookies\";\n\n// Get fetch from ponyfill to avoid undici issues like 'Failed to execute 'fetch' on 'Window': Invalid name'\n// See: https://github.com/vercel/next.js/issues/54827\nconst { fetch: ponyfetch } = fetchPonyfill();\n\n// Environment variables for Supabase\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\nconst serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n\n// Type alias for clarity\nexport type TypedSupabaseClient = SupabaseClient<Database>;\nexport type TypedSSRSupabaseClient = CoreSupabaseClient<Database>;\n\n// --------------------------------------\n// Shared header builders\n// --------------------------------------\n\n/**\n * Default headers that must accompany every request made via a browser or server client\n * which authenticates with the anonymous public key.  This prevents 401 responses from\n * PostgREST that indicate the `apikey` header is missing.\n */\nconst anonymousHeaders: Record<string, string> | undefined = supabaseAnonKey\n  ? { apikey: supabaseAnonKey }\n  : undefined;\n\n/**\n * Default headers for the service-role client.  These include the service key as both the\n * `apikey` header and (where relevant) the `Authorization` header is still injected by the\n * libraryʼs internal `fetchWithAuth` helper.\n */\nconst serviceHeaders: Record<string, string> | undefined = serviceRoleKey\n  ? { apikey: serviceRoleKey }\n  : undefined;\n\n// Helper function to check essential env vars\nfunction checkPublicEnvVars() {\n  if (process.env.NODE_ENV === \"development\") {\n    console.debug(\n      \"[Supabase Env] NEXT_PUBLIC_SUPABASE_URL present?\",\n      !!supabaseUrl\n    );\n    console.debug(\n      \"[Supabase Env] NEXT_PUBLIC_SUPABASE_ANON_KEY present?\",\n      !!supabaseAnonKey\n    );\n    console.debug(\n      \"[Supabase Env] SUPABASE_SERVICE_ROLE_KEY present?\",\n      !!serviceRoleKey\n    );\n  }\n  if (!supabaseUrl || !supabaseAnonKey) {\n    console.error(\n      \"Missing environment variables NEXT_PUBLIC_SUPABASE_URL or NEXT_PUBLIC_SUPABASE_ANON_KEY\"\n    );\n    throw new Error(\"Supabase URL or Anon Key is missing.\");\n  }\n}\n\n// --------------------------------------\n// Patch global `fetch` on the **server** to use `ponyfetch`.\n// This avoids the infamous Undici \"Socket closed unexpectedly\" bug on\n// Windows/Node 18-20 without relying on fragile Undici internals.\n// The patch is idempotent and NO-OPs in the browser.\n\nif (typeof window === \"undefined\") {\n  const g = globalThis as any;\n  if (!g.__USING_PONYFETCH__) {\n    g.fetch = ponyfetch as unknown as typeof fetch;\n    g.__USING_PONYFETCH__ = true;\n    console.info(\"[Supabase] Server fetch patched to use ponyfetch ✅\");\n  }\n}\n\n// --- Browser Client (Singleton with Hook) ---\nlet browserClientInstance: TypedSSRSupabaseClient | undefined;\n\nfunction getSupabaseBrowserClient(): TypedSSRSupabaseClient {\n  checkPublicEnvVars();\n  if (browserClientInstance) {\n    return browserClientInstance;\n  }\n\n  // In the browser we rely on the native `fetch` implementation to ensure that\n  // request headers (apikey/Authorization) are preserved. Injecting a ponyfill\n  // here has proven to strip custom headers in certain edge-cases, leading to\n  // 401 \"No API key found\" responses. Therefore we only attach the required\n  // headers and leave `fetch` undefined so @supabase/ssr uses the global one.\n\n  browserClientInstance = _createBrowserClient<Database>(\n    supabaseUrl!,\n    supabaseAnonKey!,\n    {\n      global: {\n        headers: anonymousHeaders,\n      },\n    }\n  );\n\n  if (typeof window !== \"undefined\") {\n    console.debug(\"[Supabase] anon key present?\", !!supabaseAnonKey);\n  }\n\n  return browserClientInstance;\n}\n\n/**\n * Hook to get a Supabase client instance suitable for Browser/Client Components.\n * Uses a singleton pattern to ensure only one client instance is created.\n * Leverages @supabase/ssr for proper session handling with Next.js App Router.\n * @returns Memoized Supabase client instance for browser usage.\n */\nexport function useSupabaseBrowser(): TypedSSRSupabaseClient {\n  return useMemo(getSupabaseBrowserClient, []);\n}\n\n// This is the primary export for creating a browser client directly\nexport function createClient(): TypedSSRSupabaseClient {\n  checkPublicEnvVars();\n  return _createBrowserClient<Database>(supabaseUrl!, supabaseAnonKey!, {\n    global: {\n      headers: anonymousHeaders,\n    },\n  });\n}\n\n// --- Server Client (For Server Components, Route Handlers, Server Actions) ---\n\n/**\n * Creates a Supabase client suitable for use in Server Components, Server Actions,\n * and Route Handlers that require access to cookies.\n * @param cookieStore A ReadonlyRequestCookies instance (e.g., from `next/headers`).\n * @returns Supabase client instance for server-side usage with cookie handling.\n */\nexport function createSupabaseServerClient(\n  cookieStore: ReadonlyRequestCookies\n): TypedSSRSupabaseClient {\n  checkPublicEnvVars();\n  return _createServerClient<Database>(supabaseUrl!, supabaseAnonKey!, {\n    cookies: {\n      get(name: string) {\n        return cookieStore.get(name)?.value;\n      },\n      set(name: string, value: string, options) {\n        try {\n          cookieStore.set(name, value, options);\n        } catch (error) {\n          console.warn(`Failed to set cookie '${name}':`, error);\n        }\n      },\n      remove(name: string, options) {\n        try {\n          cookieStore.set(name, \"\", options);\n        } catch (error) {\n          console.warn(`Failed to remove cookie '${name}':`, error);\n        }\n      },\n    },\n    global: {\n      fetch: ponyfetch,\n      headers: anonymousHeaders,\n    },\n  });\n}\n\n// --- Service Role Client (Admin Operations) ---\n\n/**\n * Creates a Supabase client with the service role key for admin operations.\n * WARNING: This client bypasses RLS. Use only in trusted server-side environments\n * with proper authorization checks. NEVER expose the service role key to the browser.\n * @returns Supabase client instance with service_role privileges.\n */\nexport function createSupabaseServiceClient(): TypedSupabaseClient {\n  if (!supabaseUrl || !serviceRoleKey) {\n    console.error(\"Supabase URL or Service Role Key is missing\");\n    throw new Error(\"Supabase service client configuration is incomplete.\");\n  }\n\n  return createSupabaseClient<Database>(supabaseUrl, serviceRoleKey, {\n    auth: {\n      autoRefreshToken: false,\n      persistSession: false,\n    },\n    global: {\n      fetch: ponyfetch,\n      headers: serviceHeaders,\n    },\n  });\n}\n\n// --- Client with Custom Auth Token ---\n\n/**\n * Creates a Supabase client authenticated with a custom JWT token.\n * Useful for scenarios like testing or specific server-to-server interactions.\n * @param authToken JWT token for authentication.\n * @returns Authenticated Supabase client instance.\n */\nexport function createClientWithAuth(authToken: string): TypedSupabaseClient {\n  checkPublicEnvVars();\n  return createSupabaseClient<Database>(supabaseUrl!, supabaseAnonKey!, {\n    auth: {\n      persistSession: false,\n      autoRefreshToken: false,\n      detectSessionInUrl: false,\n    },\n    global: {\n      fetch: ponyfetch,\n      headers: {\n        Authorization: `Bearer ${authToken}`,\n        ...(anonymousHeaders ?? {}),\n      },\n    },\n  });\n}\n\n// ======================================\n// EDGE RUNTIME CLIENT\n// ======================================\n\n/**\n * Creates a Supabase client suitable for Edge Runtime environments (e.g., Edge Functions, Middleware).\n * Reads cookies from the Request headers. Requires manual handling for setting/removing cookies\n * via Response headers in the calling Edge function.\n * @param request The Request object from the Edge Function context.\n */\nexport const createEdgeClient = (request: Request): TypedSSRSupabaseClient => {\n  checkPublicEnvVars();\n  const cookieHeader = request.headers.get(\"cookie\") ?? \"\";\n\n  return _createServerClient<Database>(supabaseUrl!, supabaseAnonKey!, {\n    cookies: {\n      get(name: string) {\n        const match = cookieHeader.match(new RegExp(`(^|;)\\s*${name}=([^;]+)`));\n        return match?.[2];\n      },\n      set(name: string, value: string, options) {\n        console.warn(\n          `Attempted to set cookie '${name}' in createEdgeClient. This must be handled by the caller via Response headers.`\n        );\n      },\n      remove(name: string, options) {\n        console.warn(\n          `Attempted to remove cookie '${name}' in createEdgeClient. This must be handled by the caller via Response headers.`\n        );\n      },\n    },\n    global: {\n      fetch: ponyfetch,\n      headers: anonymousHeaders,\n    },\n  });\n};\n\n// --- Remove Deprecated Compatibility Exports ---\n\n/**\n * @deprecated Use `useSupabaseBrowser` in Client Components or `createSupabaseServerClient` in Server Components/Actions/Routes.\n */\nexport const getSupabaseClient = getSupabaseBrowserClient;\n\n/**\n * @deprecated Use `createSupabaseServiceClient` for elevated privilege operations.\n */\nexport const createServiceClient = createSupabaseServiceClient;\n\n/**\n * @deprecated Prefer specific client creation (`useSupabaseBrowser`, `createSupabaseServerClient`, `createSupabaseServiceClient`). Avoid direct default export usage.\n */\nexport const supabase = getSupabaseBrowserClient();\n","module.exports = require(\"path\");","module.exports = require(\"tls\");","module.exports = require(\"diagnostics_channel\");","import * as origModule from 'next/dist/server/app-render/work-unit-async-storage.external.js';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nimport * as Sentry from '@sentry/nextjs';\n\n// @ts-expect-error Because we cannot be sure if the RequestAsyncStorage module exists (it is not part of the Next.js public\n// API) we use a shim if it doesn't exist. The logic for this is in the wrapping loader.\n\nconst asyncStorageModule = { ...origModule } ;\n\nconst requestAsyncStorage =\n  'workUnitAsyncStorage' in asyncStorageModule\n    ? asyncStorageModule.workUnitAsyncStorage\n    : 'requestAsyncStorage' in asyncStorageModule\n      ? asyncStorageModule.requestAsyncStorage\n      : undefined;\n\nconst serverComponent = serverComponentModule.default;\n\nlet wrappedServerComponent;\nif (typeof serverComponent === 'function') {\n  // For some odd Next.js magic reason, `headers()` will not work if used inside `wrapServerComponentsWithSentry`.\n  // Current assumption is that Next.js applies some loader magic to userfiles, but not files in node_modules. This file\n  // is technically a userfile so it gets the loader magic applied.\n  wrappedServerComponent = new Proxy(serverComponent, {\n    apply: (originalFunction, thisArg, args) => {\n      let sentryTraceHeader = undefined;\n      let baggageHeader = undefined;\n      let headers = undefined;\n\n      // We try-catch here just in `requestAsyncStorage` is undefined since it may not be defined\n      try {\n        const requestAsyncStore = requestAsyncStorage?.getStore() ;\n        sentryTraceHeader = requestAsyncStore?.headers.get('sentry-trace') ?? undefined;\n        baggageHeader = requestAsyncStore?.headers.get('baggage') ?? undefined;\n        headers = requestAsyncStore?.headers;\n      } catch (e) {\n        /** empty */\n      }\n\n      return Sentry.wrapServerComponentWithSentry(originalFunction, {\n        componentRoute: '/auth/forgot-password',\n        componentType: 'Page',\n        sentryTraceHeader,\n        baggageHeader,\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n} else {\n  wrappedServerComponent = serverComponent;\n}\n\nconst generateMetadata = serverComponentModule.generateMetadata\n  ? Sentry.wrapGenerationFunctionWithSentry(serverComponentModule.generateMetadata, {\n      componentRoute: '/auth/forgot-password',\n      componentType: 'Page',\n      generationFunctionIdentifier: 'generateMetadata',\n      requestAsyncStorage,\n    })\n  : undefined;\n\nconst generateImageMetadata = serverComponentModule.generateImageMetadata\n  ? Sentry.wrapGenerationFunctionWithSentry(serverComponentModule.generateImageMetadata, {\n      componentRoute: '/auth/forgot-password',\n      componentType: 'Page',\n      generationFunctionIdentifier: 'generateImageMetadata',\n      requestAsyncStorage,\n    })\n  : undefined;\n\nconst generateViewport = serverComponentModule.generateViewport\n  ? Sentry.wrapGenerationFunctionWithSentry(serverComponentModule.generateViewport, {\n      componentRoute: '/auth/forgot-password',\n      componentType: 'Page',\n      generationFunctionIdentifier: 'generateViewport',\n      requestAsyncStorage,\n    })\n  : undefined;\n\nconst wrappedServerComponent$1 = wrappedServerComponent;\n\nexport { wrappedServerComponent$1 as default, generateImageMetadata, generateMetadata, generateViewport };\n","module.exports = require(\"node:http\");","module.exports = require(\"node:zlib\");","import(/* webpackMode: \"eager\" */ \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\auth\\\\forgot-password\\\\page.tsx\");\n","module.exports = require(\"node:tls\");","module.exports = require(\"node:https\");","module.exports = require(\"node:os\");","module.exports = require(\"node:diagnostics_channel\");","module.exports = require(\"crypto\");","module.exports = require(\"https\");","// src/primitive.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { createSlot } from \"@radix-ui/react-slot\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NODES = [\n  \"a\",\n  \"button\",\n  \"div\",\n  \"form\",\n  \"h2\",\n  \"h3\",\n  \"img\",\n  \"input\",\n  \"label\",\n  \"li\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"select\",\n  \"span\",\n  \"svg\",\n  \"ul\"\n];\nvar Primitive = NODES.reduce((primitive, node) => {\n  const Slot = createSlot(`Primitive.${node}`);\n  const Node = React.forwardRef((props, forwardedRef) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp = asChild ? Slot : node;\n    if (typeof window !== \"undefined\") {\n      window[Symbol.for(\"radix-ui\")] = true;\n    }\n    return /* @__PURE__ */ jsx(Comp, { ...primitiveProps, ref: forwardedRef });\n  });\n  Node.displayName = `Primitive.${node}`;\n  return { ...primitive, [node]: Node };\n}, {});\nfunction dispatchDiscreteCustomEvent(target, event) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\nvar Root = Primitive;\nexport {\n  Primitive,\n  Root,\n  dispatchDiscreteCustomEvent\n};\n//# sourceMappingURL=index.mjs.map\n","module.exports = require(\"node:stream\");","module.exports = require(\"node:util\");","/* (ignored) */","import { AuthError as SupabaseAuthError } from '@supabase/supabase-js';\r\n\r\n/**\r\n * Base class for all authentication errors\r\n */\r\nexport class AuthError extends Error {\r\n  public code: string;\r\n  public status?: number;\r\n  public originalError?: Error;\r\n\r\n  constructor(message: string, code: string, originalError?: Error, status?: number) {\r\n    super(message);\r\n    this.name = 'AuthError';\r\n    this.code = code;\r\n    this.status = status;\r\n    this.originalError = originalError;\r\n  }\r\n\r\n  /**\r\n   * Create a JSON representation of the error\r\n   */\r\n  toJSON() {\r\n    return {\r\n      name: this.name,\r\n      message: this.message,\r\n      code: this.code,\r\n      status: this.status\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create error response for API routes\r\n   */\r\n  toResponse() {\r\n    return new Response(\r\n      JSON.stringify({\r\n        error: {\r\n          message: this.message,\r\n          code: this.code\r\n        }\r\n      }),\r\n      {\r\n        status: this.status || 500,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Error thrown when user is not authenticated\r\n */\r\nexport class UnauthorizedError extends AuthError {\r\n  constructor(message = 'Authentication required', originalError?: Error) {\r\n    super(message, 'auth/unauthorized', originalError, 401);\r\n    this.name = 'UnauthorizedError';\r\n  }\r\n}\r\n\r\n/**\r\n * Error thrown when user doesn't have sufficient permissions\r\n */\r\nexport class ForbiddenError extends AuthError {\r\n  constructor(message = 'Insufficient permissions', originalError?: Error) {\r\n    super(message, 'auth/forbidden', originalError, 403);\r\n    this.name = 'ForbiddenError';\r\n  }\r\n}\r\n\r\n/**\r\n * Error thrown when there's an issue with session management\r\n */\r\nexport class SessionError extends AuthError {\r\n  constructor(message = 'Session error', originalError?: Error) {\r\n    super(message, 'auth/session-error', originalError, 400);\r\n    this.name = 'SessionError';\r\n  }\r\n}\r\n\r\n/**\r\n * Error thrown when credentials are invalid\r\n */\r\nexport class InvalidCredentialsError extends AuthError {\r\n  constructor(message = 'Invalid credentials', originalError?: Error) {\r\n    super(message, 'auth/invalid-credentials', originalError, 401);\r\n    this.name = 'InvalidCredentialsError';\r\n  }\r\n}\r\n\r\n/**\r\n * Error thrown for user-related operations failures\r\n */\r\nexport class UserOperationError extends AuthError {\r\n  constructor(message = 'User operation failed', originalError?: Error) {\r\n    super(message, 'auth/user-operation-failed', originalError, 400);\r\n    this.name = 'UserOperationError';\r\n  }\r\n}\r\n\r\n/**\r\n * Error thrown for configuration issues\r\n */\r\nexport class ConfigurationError extends AuthError {\r\n  constructor(message = 'Authentication configuration error', originalError?: Error) {\r\n    super(message, 'auth/configuration-error', originalError, 500);\r\n    this.name = 'ConfigurationError';\r\n  }\r\n}\r\n\r\n// Interface for any error with status code\r\ninterface ErrorWithStatus extends Error {\r\n  status?: number;\r\n  code?: string | number;\r\n}\r\n\r\n/**\r\n * Converts Supabase errors to our custom error types\r\n */\r\nexport function handleSupabaseError(error: Error | SupabaseAuthError | ErrorWithStatus | null | undefined): AuthError {\r\n  if (!error) {\r\n    return new AuthError('Unknown error', 'auth/unknown');\r\n  }\r\n\r\n  // Errors with status property\r\n  const errorWithStatus = error as ErrorWithStatus;\r\n  if (errorWithStatus.status) {\r\n    switch (errorWithStatus.status) {\r\n      case 401:\r\n        return new UnauthorizedError(error.message, error);\r\n      case 403:\r\n        return new ForbiddenError(error.message, error);\r\n      case 400:\r\n        if (error.message.includes('credentials')) {\r\n          return new InvalidCredentialsError(error.message, error);\r\n        }\r\n        if (error.message.includes('session')) {\r\n          return new SessionError(error.message, error);\r\n        }\r\n        return new UserOperationError(error.message, error);\r\n      default:\r\n        return new AuthError(\r\n          error.message, \r\n          `auth/error-${errorWithStatus.status || 'unknown'}`, \r\n          error, \r\n          errorWithStatus.status\r\n        );\r\n    }\r\n  }\r\n\r\n  // Generic errors\r\n  return new AuthError(error.message || 'Unknown error', 'auth/unknown-error', error);\r\n}\r\n\r\n/**\r\n * Helper to safely handle auth operations with consistent error handling\r\n */\r\nexport async function safeAuthOperation<T>(\r\n  operation: () => Promise<T>,\r\n  errorMessage = 'Authentication operation failed'\r\n): Promise<T> {\r\n  try {\r\n    return await operation();\r\n  } catch (error) {\r\n    throw handleSupabaseError(error as Error);\r\n  }\r\n}\r\n\r\n/**\r\n * Middleware for handling auth errors in API routes\r\n */\r\nexport function createAuthErrorHandler() {\r\n  return (error: unknown) => {\r\n    if (error instanceof AuthError) {\r\n      return error.toResponse();\r\n    }\r\n    \r\n    const authError = handleSupabaseError(error as Error);\r\n    return authError.toResponse();\r\n  };\r\n} ","import { ForbiddenError } from \"./errors\";\r\nimport { ExtendedUser } from \"./types\";\r\n\r\n/**\r\n * Permission string type\r\n */\r\nexport type Permission = string;\r\n\r\n/**\r\n * Role definition with permissions and optional inheritance\r\n */\r\nexport interface Role {\r\n  /**\r\n   * Name of the role\r\n   */\r\n  name: string;\r\n\r\n  /**\r\n   * Description of the role\r\n   */\r\n  description?: string;\r\n\r\n  /**\r\n   * Array of permissions assigned to this role\r\n   */\r\n  permissions: Permission[];\r\n\r\n  /**\r\n   * Optional array of parent role names this role inherits from\r\n   */\r\n  inherits?: string[];\r\n}\r\n\r\n/**\r\n * Configuration options for the RBAC manager\r\n */\r\nexport interface RBACOptions {\r\n  /**\r\n   * Default roles and their permissions\r\n   */\r\n  roles?: Record<string, Role>;\r\n\r\n  /**\r\n   * Name of super admin role that has all permissions\r\n   * @default 'admin'\r\n   */\r\n  superAdminRole?: string;\r\n\r\n  /**\r\n   * Enable permission caching for performance\r\n   * @default true\r\n   */\r\n  enableCache?: boolean;\r\n\r\n  /**\r\n   * Custom function to extract roles from a user\r\n   */\r\n  extractRoles?: (user: ExtendedUser) => string[];\r\n}\r\n\r\n/**\r\n * Default RBAC options\r\n */\r\nconst defaultRBACOptions: RBACOptions = {\r\n  roles: {},\r\n  superAdminRole: \"admin\",\r\n  enableCache: true,\r\n};\r\n\r\n/**\r\n * Role-Based Access Control Manager\r\n * TODO: The current superAdminRole check (userRoles.includes(this.superAdminRole))\r\n * relies on user.role from metadata (via extractRoles default). This may not align with the\r\n * authoritative admin status determined by verifyUserIsAdmin(userId) which checks the\r\n * 'admin_users' table. For true unification, this superAdmin check should eventually be\r\n * reconciled with the authoritative server-side verification. This might involve making RBAC\r\n * methods async, passing a verified admin status, or other architectural changes.\r\n * For now, critical admin checks should use the useIsAdmin() hook or verifyUserIsAdmin() action directly.\r\n */\r\nexport class RBACManager {\r\n  private roles: Record<string, Role>;\r\n  private superAdminRole: string;\r\n  private enableCache: boolean;\r\n  private extractRoles: (user: ExtendedUser) => string[];\r\n  private permissionCache: Map<string, Set<Permission>> = new Map();\r\n\r\n  constructor(options: RBACOptions = {}) {\r\n    const config = { ...defaultRBACOptions, ...options };\r\n    this.roles = config.roles || {};\r\n    this.superAdminRole = config.superAdminRole || \"admin\";\r\n    this.enableCache = config.enableCache ?? true;\r\n    this.extractRoles =\r\n      config.extractRoles ||\r\n      ((user: ExtendedUser) => {\r\n        return [user.role || \"user\"];\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Define a new role with permissions\r\n   */\r\n  defineRole(role: Role): void {\r\n    this.roles[role.name] = role;\r\n\r\n    // Clear cache if caching is enabled\r\n    if (this.enableCache) {\r\n      this.permissionCache.clear();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Define multiple roles at once\r\n   */\r\n  defineRoles(roles: Record<string, Role>): void {\r\n    this.roles = { ...this.roles, ...roles };\r\n\r\n    // Clear cache if caching is enabled\r\n    if (this.enableCache) {\r\n      this.permissionCache.clear();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all permissions for a given role\r\n   */\r\n  private getRolePermissions(\r\n    roleName: string,\r\n    visited: Set<string> = new Set()\r\n  ): Set<Permission> {\r\n    // Avoid circular dependencies\r\n    if (visited.has(roleName)) {\r\n      return new Set();\r\n    }\r\n\r\n    // Mark this role as visited\r\n    visited.add(roleName);\r\n\r\n    // Get the role definition\r\n    const role = this.roles[roleName];\r\n    if (!role) {\r\n      return new Set();\r\n    }\r\n\r\n    // Start with this role's permissions\r\n    const permissions = new Set(role.permissions);\r\n\r\n    // Add inherited permissions\r\n    if (role.inherits && role.inherits.length > 0) {\r\n      for (const parentRole of role.inherits) {\r\n        const parentPermissions = this.getRolePermissions(parentRole, visited);\r\n        parentPermissions.forEach((permission) => permissions.add(permission));\r\n      }\r\n    }\r\n\r\n    return permissions;\r\n  }\r\n\r\n  /**\r\n   * Get all permissions for a user based on their roles\r\n   */\r\n  getUserPermissions(user: ExtendedUser | null): Set<Permission> {\r\n    if (!user) {\r\n      return new Set();\r\n    }\r\n\r\n    // Extract roles from user\r\n    const userRoles = this.extractRoles(user);\r\n\r\n    // Check for super admin role\r\n    if (userRoles.includes(this.superAdminRole)) {\r\n      return new Set([\"*\"]); // Special wildcard permission for super admins\r\n    }\r\n\r\n    // Check the cache first if enabled\r\n    if (this.enableCache) {\r\n      const cacheKey = userRoles.sort().join(\",\");\r\n      const cachedPermissions = this.permissionCache.get(cacheKey);\r\n\r\n      if (cachedPermissions) {\r\n        return cachedPermissions;\r\n      }\r\n    }\r\n\r\n    // Collect all permissions from all roles\r\n    const allPermissions = new Set<Permission>();\r\n    for (const roleName of userRoles) {\r\n      const rolePermissions = this.getRolePermissions(roleName);\r\n      rolePermissions.forEach((permission) => allPermissions.add(permission));\r\n    }\r\n\r\n    // Save to cache if enabled\r\n    if (this.enableCache && userRoles.length > 0) {\r\n      const cacheKey = userRoles.sort().join(\",\");\r\n      this.permissionCache.set(cacheKey, allPermissions);\r\n    }\r\n\r\n    return allPermissions;\r\n  }\r\n\r\n  /**\r\n   * Check if the user has a specific role\r\n   */\r\n  hasRole(user: ExtendedUser | null, roleName: string): boolean {\r\n    if (!user) return false;\r\n\r\n    const userRoles = this.extractRoles(user);\r\n    return (\r\n      userRoles.includes(roleName) || userRoles.includes(this.superAdminRole)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Check if the user has a specific permission\r\n   */\r\n  hasPermission(user: ExtendedUser | null, permission: Permission): boolean {\r\n    if (!user) return false;\r\n\r\n    // Get all permissions for the user\r\n    const permissions = this.getUserPermissions(user);\r\n\r\n    // Super admin has all permissions\r\n    if (permissions.has(\"*\")) return true;\r\n\r\n    // Check exact permission\r\n    if (permissions.has(permission)) return true;\r\n\r\n    // Check wildcard permissions\r\n    const parts = permission.split(\":\");\r\n    for (let i = 1; i <= parts.length; i++) {\r\n      const wildcardPermission = [...parts.slice(0, i), \"*\"].join(\":\");\r\n      if (permissions.has(wildcardPermission)) return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Check if the user has any of the specified permissions\r\n   */\r\n  hasAnyPermission(\r\n    user: ExtendedUser | null,\r\n    permissions: Permission[]\r\n  ): boolean {\r\n    return permissions.some((permission) =>\r\n      this.hasPermission(user, permission)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Check if the user has all of the specified permissions\r\n   */\r\n  hasAllPermissions(\r\n    user: ExtendedUser | null,\r\n    permissions: Permission[]\r\n  ): boolean {\r\n    return permissions.every((permission) =>\r\n      this.hasPermission(user, permission)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Enforce a permission requirement, throwing an error if not authorized\r\n   */\r\n  enforcePermission(user: ExtendedUser | null, permission: Permission): void {\r\n    if (!this.hasPermission(user, permission)) {\r\n      throw new ForbiddenError(`Missing required permission: ${permission}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enforce that user has any of the specified permissions\r\n   */\r\n  enforceAnyPermission(\r\n    user: ExtendedUser | null,\r\n    permissions: Permission[]\r\n  ): void {\r\n    if (!this.hasAnyPermission(user, permissions)) {\r\n      throw new ForbiddenError(\r\n        `Missing at least one of the required permissions: ${permissions.join(\", \")}`\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enforce that user has all of the specified permissions\r\n   */\r\n  enforceAllPermissions(\r\n    user: ExtendedUser | null,\r\n    permissions: Permission[]\r\n  ): void {\r\n    if (!this.hasAllPermissions(user, permissions)) {\r\n      throw new ForbiddenError(\r\n        `Missing some of the required permissions: ${permissions.join(\", \")}`\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a permission string from resource and action\r\n   */\r\n  createPermission(resource: string, action: string): Permission {\r\n    return `${resource}:${action}`;\r\n  }\r\n}\r\n\r\n// Singleton RBAC manager instance\r\nlet rbacManager: RBACManager | null = null;\r\n\r\n/**\r\n * Get the RBAC manager instance, creating it if it doesn't exist\r\n */\r\nexport function getRBACManager(options?: RBACOptions): RBACManager {\r\n  if (!rbacManager) {\r\n    rbacManager = new RBACManager(options);\r\n  }\r\n  return rbacManager;\r\n}\r\n\r\n/**\r\n * Create a permission string from resource and action\r\n */\r\nexport function createPermission(resource: string, action: string): Permission {\r\n  return `${resource}:${action}`;\r\n}\r\n\r\n/**\r\n * Check if the user has a specific permission\r\n */\r\nexport function hasPermission(\r\n  user: ExtendedUser | null,\r\n  permission: Permission\r\n): boolean {\r\n  return getRBACManager().hasPermission(user, permission);\r\n}\r\n\r\n/**\r\n * Enforce a permission requirement, throwing an error if not authorized\r\n */\r\nexport function enforcePermission(\r\n  user: ExtendedUser | null,\r\n  permission: Permission\r\n): void {\r\n  return getRBACManager().enforcePermission(user, permission);\r\n}\r\n","module.exports = require(\"next/dist/server/app-render/work-unit-async-storage.external.js\");","module.exports = require(\"node:fs\");","module.exports = require(\"worker_threads\");","module.exports = require(\"zlib\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"node:worker_threads\");","module.exports = require(\"node:path\");","module.exports = require(\"node:net\");","module.exports = require(\"node:crypto\");","import * as React from \"react\"\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\r\n  return (\r\n    <input\r\n      type={type}\r\n      data-slot=\"input\"\r\n      className={cn(\r\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\r\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Input }\r\n","module.exports = require(\"buffer\");","module.exports = require(\"url\");","module.exports = require(\"child_process\");","module.exports = require(\"node:readline\");","module.exports = require(\"http\");","module.exports = require(\"tty\");","const module0 = () => import(/* webpackMode: \"eager\" */ \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\layout.tsx\");\nconst module1 = () => import(/* webpackMode: \"eager\" */ \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\error.tsx\");\nconst module2 = () => import(/* webpackMode: \"eager\" */ \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\global-error.tsx\");\nconst module3 = () => import(/* webpackMode: \"eager\" */ \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\not-found.tsx\");\nconst module4 = () => import(/* webpackMode: \"eager\" */ \"next/dist/client/components/forbidden-error\");\nconst module5 = () => import(/* webpackMode: \"eager\" */ \"next/dist/client/components/unauthorized-error\");\nconst page6 = () => import(/* webpackMode: \"eager\" */ \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\auth\\\\forgot-password\\\\page.tsx\");\nimport { AppPageRouteModule } from \"next/dist/server/route-modules/app-page/module.compiled\" with {\n    'turbopack-transition': 'next-ssr'\n};\nimport { RouteKind } from \"next/dist/server/route-kind\" with {\n    'turbopack-transition': 'next-server-utility'\n};\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: [\n        'auth',\n        {\n        children: [\n        'forgot-password',\n        {\n        children: ['__PAGE__', {}, {\n          page: [page6, \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\auth\\\\forgot-password\\\\page.tsx\"],\n          \n        }]\n      },\n        {\n        \n        \n      }\n      ]\n      },\n        {\n        \n        \n      }\n      ]\n      },\n        {\n        'layout': [module0, \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\layout.tsx\"],\n'error': [module1, \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\error.tsx\"],\n'global-error': [module2, \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\global-error.tsx\"],\n'not-found': [module3, \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\not-found.tsx\"],\n'forbidden': [module4, \"next/dist/client/components/forbidden-error\"],\n'unauthorized': [module5, \"next/dist/client/components/unauthorized-error\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [\"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\auth\\\\forgot-password\\\\page.tsx\"];\nexport { tree, pages };\nexport { default as GlobalError } from \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\global-error.tsx\" with {\n    'turbopack-transition': 'next-server-utility'\n};\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nexport const __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\nexport * from \"next/dist/server/app-render/entry-base\" with {\n    'turbopack-transition': 'next-server-utility'\n};\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n    definition: {\n        kind: RouteKind.APP_PAGE,\n        page: \"/auth/forgot-password/page\",\n        pathname: \"/auth/forgot-password\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: '',\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    }\n});\n\n//# sourceMappingURL=app-page.js.map","module.exports = require(\"async_hooks\");","module.exports = import(\"ai\");;","module.exports = require(\"node:inspector\");","module.exports = require(\"net\");","module.exports = require(\"events\");"],"names":["createExtendedUser","user","role","user_metadata","settings","theme","settings_theme","language","settings_language","emailNotifications","settings_emailNotifications","documentReminders","settings_documentReminders","applicationUpdates","settings_applicationUpdates","twoFactorAuth","settings_twoFactorAuth","fullName","full_name","email","split","avatarUrl","avatar_url","isAdmin","hasTwoFactorAuth","updateSettings","updatedSettings","newSettings","toObject","id","AuthContext","createContext","undefined","AuthProvider","children","setUser","useState","session","setSession","isLoading","setIsLoading","supabase","createClient","refreshSession","useCallback","data","error","sessionError","auth","getSession","userError","getUser","console","signIn","provider","options","password","signInWithPassword","signInWithOAuth","redirectTo","signOut","signUp","emailRedirectTo","window","location","origin","resetPassword","resetPasswordForEmail","updatePassword","updateUser","Provider","value","isAuthenticated","useAuth","context","useContext","useUser","useIsAuthenticated","useHasRole","useHasPermission","permission","hasPermission","useSession","actionTypes","ADD_TOAST","UPDATE_TOAST","DISMISS_TOAST","REMOVE_TOAST","count","toastTimeouts","Map","reducer","state","action","type","toasts","toast","slice","TOAST_LIMIT","map","t","toastId","has","clearTimeout","get","delete","timeout","entries","open","filter","listeners","memoryState","dispatch","forEach","listener","props","Number","MAX_VALUE","toString","dismiss","onOpenChange","update","useToast","setState","React","push","index","indexOf","splice","Label","className","LabelPrimitive","data-slot","cn","ForgotPasswordPage","setEmail","handleSubmit","e","preventDefault","title","description","variant","div","h1","p","form","onSubmit","htmlFor","Input","placeholder","onChange","target","required","Button","disabled","Link","href","browserClientInstance","fetch","ponyfetch","fetchPonyfill","supabaseUrl","process","supabaseAnonKey","serviceRoleKey","env","SUPABASE_SERVICE_ROLE_KEY","anonymousHeaders","apikey","checkPublicEnvVars","g","globalThis","__USING_PONYFETCH__","getSupabaseBrowserClient","_createBrowserClient","global","headers","useSupabaseBrowser","useMemo","getSupabaseClient","serverComponentModule.default","AuthError","Error","constructor","message","code","originalError","status","name","toJSON","toResponse","Response","JSON","stringify","UnauthorizedError","ForbiddenError","SessionError","InvalidCredentialsError","UserOperationError","defaultRBACOptions","roles","superAdminRole","enableCache","RBACManager","permissionCache","config","extractRoles","defineRole","clear","defineRoles","roleName","visited","Set","add","permissions","inherits","length","parentRole","getRolePermissions","getUserPermissions","userRoles","includes","cacheKey","sort","join","cachedPermissions","allPermissions","set","hasRole","parts","i","wildcardPermission","hasAnyPermission","some","hasAllPermissions","every","enforcePermission","enforceAnyPermission","enforceAllPermissions","createPermission","resource","rbacManager","getRBACManager","input"],"sourceRoot":""}