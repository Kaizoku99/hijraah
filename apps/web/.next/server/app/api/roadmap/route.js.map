{"version":3,"file":"../app/api/roadmap/route.js","mappings":"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","sources":["webpack://@hijraah/web/external commonjs2 \"module\"","webpack://@hijraah/web/../../node_modules/.pnpm/@opentelemetry+instrumentat_04f370d515cee0be955272f826166073/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ sync","webpack://@hijraah/web/external commonjs \"next/dist/compiled/next-server/app-page.runtime.prod.js\"","webpack://@hijraah/web/external commonjs2 \"punycode\"","webpack://@hijraah/web/external commonjs2 \"process\"","webpack://@hijraah/web/external commonjs2 \"os\"","webpack://@hijraah/web/external commonjs2 \"stream\"","webpack://@hijraah/web/external commonjs2 \"util\"","webpack://@hijraah/web/external commonjs2 \"fs\"","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/work-async-storage.external.js\"","webpack://@hijraah/web/external node-commonjs \"node:child_process\"","webpack://@hijraah/web/external commonjs2 \"path\"","webpack://@hijraah/web/external commonjs2 \"tls\"","webpack://@hijraah/web/external commonjs2 \"diagnostics_channel\"","webpack://@hijraah/web/external node-commonjs \"node:http\"","webpack://@hijraah/web/external node-commonjs \"node:zlib\"","webpack://@hijraah/web/external node-commonjs \"node:tls\"","webpack://@hijraah/web/external node-commonjs \"node:https\"","webpack://@hijraah/web/external commonjs \"next/dist/compiled/next-server/app-route.runtime.prod.js\"","webpack://@hijraah/web/external node-commonjs \"node:os\"","webpack://@hijraah/web/external node-commonjs \"node:diagnostics_channel\"","webpack://@hijraah/web/external commonjs2 \"crypto\"","webpack://@hijraah/web/external commonjs2 \"https\"","webpack://@hijraah/web/external node-commonjs \"node:stream\"","webpack://@hijraah/web/external node-commonjs \"node:util\"","webpack://@hijraah/web/ignored|E:\\downloads\\Hijraah\\node_modules\\.pnpm\\ws@8.18.2_bufferutil@4.0.9\\node_modules\\ws\\lib|utf-8-validate","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/work-unit-async-storage.external.js\"","webpack://@hijraah/web/./src/_core/immigration/entities/roadmap.ts","webpack://@hijraah/web/./src/_core/immigration/services/roadmap-service.ts","webpack://@hijraah/web/src/app/api/roadmap/route.ts","webpack://@hijraah/web/sentry-wrapper-module","webpack://@hijraah/web/?d04c","webpack://@hijraah/web/external node-commonjs \"node:fs\"","webpack://@hijraah/web/external commonjs2 \"worker_threads\"","webpack://@hijraah/web/external commonjs2 \"zlib\"","webpack://@hijraah/web/external commonjs2 \"perf_hooks\"","webpack://@hijraah/web/external node-commonjs \"node:worker_threads\"","webpack://@hijraah/web/external node-commonjs \"node:path\"","webpack://@hijraah/web/external node-commonjs \"node:net\"","webpack://@hijraah/web/external commonjs2 \"buffer\"","webpack://@hijraah/web/external commonjs2 \"url\"","webpack://@hijraah/web/external commonjs2 \"child_process\"","webpack://@hijraah/web/external node-commonjs \"node:readline\"","webpack://@hijraah/web/external commonjs2 \"http\"","webpack://@hijraah/web/external commonjs2 \"tty\"","webpack://@hijraah/web/external commonjs2 \"async_hooks\"","webpack://@hijraah/web/external node-commonjs \"node:inspector\"","webpack://@hijraah/web/external commonjs2 \"net\"","webpack://@hijraah/web/external commonjs2 \"events\"","webpack://@hijraah/web/../../node_modules/.pnpm/require-in-the-middle@7.5.2/node_modules/require-in-the-middle/ sync","webpack://@hijraah/web/../../node_modules/.pnpm/@supabase+realtime-js@2.11.10_bufferutil@4.0.9/node_modules/@supabase/realtime-js/dist/main/ sync"],"sourcesContent":["module.exports = require(\"module\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 8963;\nmodule.exports = webpackEmptyContext;","module.exports = require(\"next/dist/compiled/next-server/app-page.runtime.prod.js\");","module.exports = require(\"punycode\");","module.exports = require(\"process\");","module.exports = require(\"os\");","module.exports = require(\"stream\");","module.exports = require(\"util\");","module.exports = require(\"fs\");","module.exports = require(\"next/dist/server/app-render/work-async-storage.external.js\");","module.exports = require(\"node:child_process\");","module.exports = require(\"path\");","module.exports = require(\"tls\");","module.exports = require(\"diagnostics_channel\");","module.exports = require(\"node:http\");","module.exports = require(\"node:zlib\");","module.exports = require(\"node:tls\");","module.exports = require(\"node:https\");","module.exports = require(\"next/dist/compiled/next-server/app-route.runtime.prod.js\");","module.exports = require(\"node:os\");","module.exports = require(\"node:diagnostics_channel\");","module.exports = require(\"crypto\");","module.exports = require(\"https\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:util\");","/* (ignored) */","module.exports = require(\"next/dist/server/app-render/work-unit-async-storage.external.js\");","/**\r\n * Roadmap domain entity\r\n * \r\n * This entity represents a personalized immigration roadmap in the domain model.\r\n */\r\nimport { CaseType } from './case';\r\n\r\n/**\r\n * RoadmapMilestone interface\r\n */\r\nexport interface RoadmapMilestone {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  status: 'not_started' | 'in_progress' | 'completed' | 'blocked' | 'overdue';\r\n  completionPercentage: number;\r\n  requiredDocuments: string[];\r\n  dependsOn: string[];\r\n  isCritical: boolean;\r\n  notes?: string;\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\n/**\r\n * RoadmapPhase interface\r\n */\r\nexport interface RoadmapPhase {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  status: 'not_started' | 'in_progress' | 'completed' | 'blocked' | 'overdue';\r\n  completionPercentage: number;\r\n  milestones: RoadmapMilestone[];\r\n  metadata?: Record<string, any>;\r\n}\r\n\r\n/**\r\n * Roadmap entity\r\n */\r\nexport class Roadmap {\r\n  readonly id: string;\r\n  readonly title: string;\r\n  readonly description: string;\r\n  readonly caseId: string;\r\n  readonly caseType: CaseType;\r\n  readonly userId: string;\r\n  readonly phases: RoadmapPhase[];\r\n  readonly startDate: Date;\r\n  readonly targetEndDate: Date;\r\n  readonly estimatedEndDate: Date;\r\n  readonly completionPercentage: number;\r\n  readonly lastUpdated: Date;\r\n  readonly metadata: Record<string, any>;\r\n\r\n  constructor(props: {\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    caseId: string;\r\n    caseType: CaseType;\r\n    userId: string;\r\n    phases?: RoadmapPhase[];\r\n    startDate?: Date | string;\r\n    targetEndDate?: Date | string;\r\n    estimatedEndDate?: Date | string;\r\n    completionPercentage?: number;\r\n    lastUpdated?: Date | string;\r\n    metadata?: Record<string, any>;\r\n  }) {\r\n    this.id = props.id;\r\n    this.title = props.title;\r\n    this.description = props.description;\r\n    this.caseId = props.caseId;\r\n    this.caseType = props.caseType;\r\n    this.userId = props.userId;\r\n    this.phases = props.phases || [];\r\n    this.startDate = props.startDate ? new Date(props.startDate) : new Date();\r\n    this.targetEndDate = props.targetEndDate ? new Date(props.targetEndDate) : new Date();\r\n    this.estimatedEndDate = props.estimatedEndDate ? new Date(props.estimatedEndDate) : new Date();\r\n    this.completionPercentage = props.completionPercentage || 0;\r\n    this.lastUpdated = props.lastUpdated ? new Date(props.lastUpdated) : new Date();\r\n    this.metadata = props.metadata || {};\r\n  }\r\n\r\n  /**\r\n   * Calculate the overall completion percentage based on phase completion\r\n   */\r\n  calculateCompletionPercentage(): number {\r\n    if (this.phases.length === 0) return 0;\r\n    \r\n    const totalPercentage = this.phases.reduce(\r\n      (sum, phase) => sum + phase.completionPercentage,\r\n      0\r\n    );\r\n    \r\n    return Math.round(totalPercentage / this.phases.length);\r\n  }\r\n\r\n  /**\r\n   * Get the current active phase of the roadmap\r\n   */\r\n  getCurrentPhase(): RoadmapPhase | null {\r\n    const inProgressPhases = this.phases.filter(\r\n      phase => phase.status === 'in_progress'\r\n    );\r\n    \r\n    if (inProgressPhases.length > 0) {\r\n      return inProgressPhases[0];\r\n    }\r\n    \r\n    const notStartedPhases = this.phases.filter(\r\n      phase => phase.status === 'not_started'\r\n    ).sort((a, b) => a.startDate.getTime() - b.startDate.getTime());\r\n    \r\n    return notStartedPhases[0] || null;\r\n  }\r\n\r\n  /**\r\n   * Get the current active milestone\r\n   */\r\n  getCurrentMilestone(): RoadmapMilestone | null {\r\n    const currentPhase = this.getCurrentPhase();\r\n    if (!currentPhase) return null;\r\n    \r\n    const inProgressMilestones = currentPhase.milestones.filter(\r\n      milestone => milestone.status === 'in_progress'\r\n    );\r\n    \r\n    if (inProgressMilestones.length > 0) {\r\n      return inProgressMilestones[0];\r\n    }\r\n    \r\n    const notStartedMilestones = currentPhase.milestones.filter(\r\n      milestone => milestone.status === 'not_started'\r\n    ).sort((a, b) => a.startDate.getTime() - b.startDate.getTime());\r\n    \r\n    return notStartedMilestones[0] || null;\r\n  }\r\n\r\n  /**\r\n   * Check if the roadmap has any overdue milestones\r\n   */\r\n  hasOverdueMilestones(): boolean {\r\n    return this.phases.some(phase =>\r\n      phase.milestones.some(milestone => milestone.status === 'overdue')\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get all milestones across all phases\r\n   */\r\n  getAllMilestones(): RoadmapMilestone[] {\r\n    return this.phases.flatMap(phase => phase.milestones);\r\n  }\r\n\r\n  /**\r\n   * Update the completion status of a specific milestone\r\n   */\r\n  updateMilestoneStatus(\r\n    milestoneId: string,\r\n    status: 'not_started' | 'in_progress' | 'completed' | 'blocked' | 'overdue',\r\n    completionPercentage: number\r\n  ): Roadmap {\r\n    const updatedPhases = this.phases.map(phase => {\r\n      const milestoneIndex = phase.milestones.findIndex(m => m.id === milestoneId);\r\n      \r\n      if (milestoneIndex !== -1) {\r\n        // Update the specific milestone\r\n        const updatedMilestones = [...phase.milestones];\r\n        updatedMilestones[milestoneIndex] = {\r\n          ...updatedMilestones[milestoneIndex],\r\n          status,\r\n          completionPercentage\r\n        };\r\n        \r\n        // Recalculate phase completion percentage\r\n        const phaseCompletionPercentage = updatedMilestones.reduce(\r\n          (sum, milestone) => sum + milestone.completionPercentage,\r\n          0\r\n        ) / updatedMilestones.length;\r\n        \r\n        // Update the phase status based on milestones\r\n        let phaseStatus = phase.status;\r\n        const allCompleted = updatedMilestones.every(m => m.status === 'completed');\r\n        const anyInProgress = updatedMilestones.some(m => m.status === 'in_progress');\r\n        const anyBlocked = updatedMilestones.some(m => m.status === 'blocked');\r\n        const anyOverdue = updatedMilestones.some(m => m.status === 'overdue');\r\n        \r\n        if (allCompleted) {\r\n          phaseStatus = 'completed';\r\n        } else if (anyBlocked) {\r\n          phaseStatus = 'blocked';\r\n        } else if (anyOverdue) {\r\n          phaseStatus = 'overdue';\r\n        } else if (anyInProgress) {\r\n          phaseStatus = 'in_progress';\r\n        }\r\n        \r\n        return {\r\n          ...phase,\r\n          milestones: updatedMilestones,\r\n          completionPercentage: Math.round(phaseCompletionPercentage),\r\n          status: phaseStatus\r\n        };\r\n      }\r\n      \r\n      return phase;\r\n    });\r\n    \r\n    return new Roadmap({\r\n      ...this,\r\n      phases: updatedPhases,\r\n      lastUpdated: new Date(),\r\n      completionPercentage: this.calculateCompletionPercentage()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Convert the Roadmap entity to a plain object\r\n   */\r\n  toObject() {\r\n    return {\r\n      id: this.id,\r\n      title: this.title,\r\n      description: this.description,\r\n      caseId: this.caseId,\r\n      caseType: this.caseType,\r\n      userId: this.userId,\r\n      phases: this.phases.map(phase => ({\r\n        ...phase,\r\n        startDate: phase.startDate.toISOString(),\r\n        endDate: phase.endDate.toISOString(),\r\n        milestones: phase.milestones.map(milestone => ({\r\n          ...milestone,\r\n          startDate: milestone.startDate.toISOString(),\r\n          endDate: milestone.endDate.toISOString()\r\n        }))\r\n      })),\r\n      startDate: this.startDate.toISOString(),\r\n      targetEndDate: this.targetEndDate.toISOString(),\r\n      estimatedEndDate: this.estimatedEndDate.toISOString(),\r\n      completionPercentage: this.completionPercentage,\r\n      lastUpdated: this.lastUpdated.toISOString(),\r\n      metadata: this.metadata\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create a Roadmap entity from database data\r\n   */\r\n  static fromDatabase(data: any): Roadmap {\r\n    return new Roadmap({\r\n      id: data.id,\r\n      title: data.title,\r\n      description: data.description,\r\n      caseId: data.case_id,\r\n      caseType: data.case_type,\r\n      userId: data.user_id,\r\n      phases: Array.isArray(data.phases) ? data.phases.map((phase: any) => ({\r\n        ...phase,\r\n        startDate: new Date(phase.start_date),\r\n        endDate: new Date(phase.end_date),\r\n        milestones: Array.isArray(phase.milestones) ? phase.milestones.map((milestone: any) => ({\r\n          ...milestone,\r\n          startDate: new Date(milestone.start_date),\r\n          endDate: new Date(milestone.end_date)\r\n        })) : []\r\n      })) : [],\r\n      startDate: data.start_date,\r\n      targetEndDate: data.target_end_date,\r\n      estimatedEndDate: data.estimated_end_date,\r\n      completionPercentage: data.completion_percentage,\r\n      lastUpdated: data.last_updated,\r\n      metadata: data.metadata || {}\r\n    });\r\n  }\r\n} ","import { Case, CaseType } from '../entities/case';\r\nimport { Roadmap, RoadmapPhase, RoadmapMilestone } from '../entities/roadmap';\r\n\r\nimport { CaseService } from './case-service';\r\n\r\n/**\r\n * Roadmap Service domain service\r\n * \r\n * Handles roadmap-related business logic for generating and managing\r\n * personalized immigration roadmaps\r\n */\r\nexport class RoadmapService {\r\n  private caseService: CaseService;\r\n  \r\n  constructor(caseService: CaseService) {\r\n    this.caseService = caseService;\r\n  }\r\n  \r\n  /**\r\n   * Generate a personalized roadmap based on case type and user data\r\n   */\r\n  generateRoadmap(\r\n    caseInstance: Case,\r\n    userId: string,\r\n    customizationParams?: {\r\n      urgency?: 'normal' | 'expedited';\r\n      complexity?: 'simple' | 'standard' | 'complex';\r\n      priorityDocuments?: string[];\r\n    }\r\n  ): Roadmap {\r\n    // Set defaults for customization parameters\r\n    const params = {\r\n      urgency: customizationParams?.urgency || 'normal',\r\n      complexity: customizationParams?.complexity || 'standard',\r\n      priorityDocuments: customizationParams?.priorityDocuments || [],\r\n    };\r\n    \r\n    // Generate roadmap phases based on case type\r\n    const phases = this.generatePhases(caseInstance.caseType, params);\r\n    \r\n    // Calculate timeline\r\n    const { startDate, targetEndDate, estimatedEndDate } = this.calculateTimeline(\r\n      caseInstance.caseType,\r\n      phases,\r\n      params\r\n    );\r\n    \r\n    // Create roadmap instance\r\n    return new Roadmap({\r\n      id: crypto.randomUUID(),\r\n      title: `${this.getRoadmapTitle(caseInstance.caseType)} - ${caseInstance.caseNumber}`,\r\n      description: this.getRoadmapDescription(caseInstance.caseType),\r\n      caseId: caseInstance.id,\r\n      caseType: caseInstance.caseType,\r\n      userId,\r\n      phases,\r\n      startDate,\r\n      targetEndDate,\r\n      estimatedEndDate,\r\n      completionPercentage: 0,\r\n      lastUpdated: new Date(),\r\n      metadata: {\r\n        customizationParams: params,\r\n        generated: true\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Get roadmap title based on case type\r\n   */\r\n  private getRoadmapTitle(caseType: CaseType): string {\r\n    switch (caseType) {\r\n      case CaseType.ASYLUM:\r\n        return 'Asylum Application Roadmap';\r\n      case CaseType.VISA_APPLICATION:\r\n        return 'Visa Application Roadmap';\r\n      case CaseType.WORK_PERMIT:\r\n        return 'Work Permit Roadmap';\r\n      case CaseType.FAMILY_SPONSORSHIP:\r\n        return 'Family Sponsorship Roadmap';\r\n      case CaseType.CITIZENSHIP:\r\n        return 'Citizenship Application Roadmap';\r\n      case CaseType.RESIDENCY:\r\n        return 'Residency Application Roadmap';\r\n      case CaseType.REFUGEE:\r\n        return 'Refugee Application Roadmap';\r\n      case CaseType.OTHER:\r\n        return 'Immigration Process Roadmap';\r\n      default:\r\n        return 'Immigration Process Roadmap';\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get roadmap description based on case type\r\n   */\r\n  private getRoadmapDescription(caseType: CaseType): string {\r\n    switch (caseType) {\r\n      case CaseType.ASYLUM:\r\n        return 'Step-by-step timeline for your asylum application process. Follow this roadmap to navigate through application preparation, filing, interview, and decision phases.';\r\n      case CaseType.VISA_APPLICATION:\r\n        return 'Personalized timeline for your visa application. This roadmap outlines document preparation, submission, interview, and approval phases.';\r\n      case CaseType.WORK_PERMIT:\r\n        return 'Detailed roadmap for your work permit application. Follow these steps to prepare, file, and obtain your employment authorization.';\r\n      case CaseType.FAMILY_SPONSORSHIP:\r\n        return 'Comprehensive timeline for your family sponsorship process. This roadmap guides you through petition filing, documentation, interview, and approval phases.';\r\n      case CaseType.CITIZENSHIP:\r\n        return 'Step-by-step guide for your citizenship application. Follow this roadmap to navigate through application, biometrics, interview, test, and oath ceremony.';\r\n      case CaseType.RESIDENCY:\r\n        return 'Detailed timeline for your permanent residency application. This roadmap outlines the process from petition to green card approval.';\r\n      case CaseType.REFUGEE:\r\n        return 'Personalized roadmap for your refugee application process. Follow these steps from initial screening to final settlement.';\r\n      case CaseType.OTHER:\r\n        return 'Customized timeline for your immigration process. This roadmap provides a step-by-step guide to navigate through your specific case.';\r\n      default:\r\n        return 'Personalized timeline for your immigration process. Follow this roadmap to navigate through all phases efficiently.';\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Generate phases for the roadmap based on case type\r\n   */\r\n  private generatePhases(\r\n    caseType: CaseType,\r\n    params: {\r\n      urgency: 'normal' | 'expedited';\r\n      complexity: 'simple' | 'standard' | 'complex';\r\n      priorityDocuments: string[];\r\n    }\r\n  ): RoadmapPhase[] {\r\n    // Get phase configuration based on case type\r\n    const phaseConfig = this.getPhaseConfiguration(caseType);\r\n    \r\n    // Adjust phase timing based on urgency and complexity\r\n    const adjustedPhases = this.adjustPhaseTimings(phaseConfig, params);\r\n    \r\n    // Generate milestones for each phase\r\n    return adjustedPhases.map(phase => {\r\n      const milestones = this.generateMilestones(\r\n        phase.id,\r\n        phase.milestoneTypes,\r\n        phase.startDate,\r\n        phase.endDate,\r\n        caseType,\r\n        params\r\n      );\r\n      \r\n      return {\r\n        id: phase.id,\r\n        title: phase.title,\r\n        description: phase.description,\r\n        startDate: phase.startDate,\r\n        endDate: phase.endDate,\r\n        status: 'not_started',\r\n        completionPercentage: 0,\r\n        milestones,\r\n        metadata: phase.metadata || {}\r\n      };\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Get the standard phase configuration based on case type\r\n   */\r\n  private getPhaseConfiguration(caseType: CaseType): Array<{\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    milestoneTypes: string[];\r\n    startDate: Date;\r\n    endDate: Date;\r\n    metadata?: Record<string, any>;\r\n  }> {\r\n    const today = new Date();\r\n    const phases: Array<{\r\n      id: string;\r\n      title: string;\r\n      description: string;\r\n      milestoneTypes: string[];\r\n      startDate: Date;\r\n      endDate: Date;\r\n      metadata?: Record<string, any>;\r\n    }> = [];\r\n\r\n    // Common phase structure with case-specific customizations\r\n    switch (caseType) {\r\n      case CaseType.ASYLUM:\r\n        phases.push(\r\n          {\r\n            id: crypto.randomUUID(),\r\n            title: 'Preparation',\r\n            description: 'Gather all necessary documents and evidence for your asylum application.',\r\n            milestoneTypes: ['document_collection', 'document_translation', 'form_preparation'],\r\n            startDate: today,\r\n            endDate: this.addDays(today, 30),\r\n            metadata: { importance: 'critical' }\r\n          },\r\n          {\r\n            id: crypto.randomUUID(),\r\n            title: 'Application Filing',\r\n            description: 'Complete and submit your asylum application (Form I-589).',\r\n            milestoneTypes: ['application_review', 'application_submission', 'receipt_notice'],\r\n            startDate: this.addDays(today, 31),\r\n            endDate: this.addDays(today, 45),\r\n            metadata: { importance: 'critical' }\r\n          },\r\n          {\r\n            id: crypto.randomUUID(),\r\n            title: 'Biometrics and Interview',\r\n            description: 'Attend biometrics appointment and asylum interview.',\r\n            milestoneTypes: ['biometrics_appointment', 'interview_preparation', 'interview'],\r\n            startDate: this.addDays(today, 46),\r\n            endDate: this.addDays(today, 180),\r\n            metadata: { importance: 'critical' }\r\n          },\r\n          {\r\n            id: crypto.randomUUID(),\r\n            title: 'Decision and Next Steps',\r\n            description: 'Receive decision on your asylum application and take appropriate next steps.',\r\n            milestoneTypes: ['decision_waiting', 'decision_response', 'post_decision_steps'],\r\n            startDate: this.addDays(today, 181),\r\n            endDate: this.addDays(today, 365),\r\n            metadata: { importance: 'critical' }\r\n          }\r\n        );\r\n        break;\r\n      \r\n      case CaseType.VISA_APPLICATION:\r\n        phases.push(\r\n          {\r\n            id: crypto.randomUUID(),\r\n            title: 'Preparation',\r\n            description: 'Gather all necessary documents for your visa application.',\r\n            milestoneTypes: ['document_collection', 'document_verification', 'form_preparation'],\r\n            startDate: today,\r\n            endDate: this.addDays(today, 15),\r\n            metadata: { importance: 'critical' }\r\n          },\r\n          {\r\n            id: crypto.randomUUID(),\r\n            title: 'Application Submission',\r\n            description: 'Complete and submit your visa application.',\r\n            milestoneTypes: ['application_review', 'fee_payment', 'application_submission'],\r\n            startDate: this.addDays(today, 16),\r\n            endDate: this.addDays(today, 30),\r\n            metadata: { importance: 'critical' }\r\n          },\r\n          {\r\n            id: crypto.randomUUID(),\r\n            title: 'Interview and Processing',\r\n            description: 'Prepare for and attend visa interview.',\r\n            milestoneTypes: ['interview_preparation', 'interview', 'additional_processing'],\r\n            startDate: this.addDays(today, 31),\r\n            endDate: this.addDays(today, 90),\r\n            metadata: { importance: 'critical' }\r\n          },\r\n          {\r\n            id: crypto.randomUUID(),\r\n            title: 'Decision and Travel',\r\n            description: 'Receive visa decision and prepare for travel.',\r\n            milestoneTypes: ['decision_waiting', 'visa_issuance', 'travel_preparation'],\r\n            startDate: this.addDays(today, 91),\r\n            endDate: this.addDays(today, 120),\r\n            metadata: { importance: 'critical' }\r\n          }\r\n        );\r\n        break;\r\n      \r\n      case CaseType.CITIZENSHIP:\r\n        phases.push(\r\n          {\r\n            id: crypto.randomUUID(),\r\n            title: 'Preparation',\r\n            description: 'Gather all necessary documents for your citizenship application.',\r\n            milestoneTypes: ['eligibility_verification', 'document_collection', 'form_preparation'],\r\n            startDate: today,\r\n            endDate: this.addDays(today, 30),\r\n            metadata: { importance: 'critical' }\r\n          },\r\n          {\r\n            id: crypto.randomUUID(),\r\n            title: 'Application Filing',\r\n            description: 'Complete and submit your naturalization application (Form N-400).',\r\n            milestoneTypes: ['application_review', 'fee_payment', 'application_submission'],\r\n            startDate: this.addDays(today, 31),\r\n            endDate: this.addDays(today, 45),\r\n            metadata: { importance: 'critical' }\r\n          },\r\n          {\r\n            id: crypto.randomUUID(),\r\n            title: 'Biometrics and Processing',\r\n            description: 'Attend biometrics appointment and wait for application processing.',\r\n            milestoneTypes: ['biometrics_appointment', 'background_check', 'processing_updates'],\r\n            startDate: this.addDays(today, 46),\r\n            endDate: this.addDays(today, 180),\r\n            metadata: { importance: 'critical' }\r\n          },\r\n          {\r\n            id: crypto.randomUUID(),\r\n            title: 'Interview and Test',\r\n            description: 'Prepare for and attend citizenship interview and test.',\r\n            milestoneTypes: ['interview_preparation', 'interview', 'civics_test'],\r\n            startDate: this.addDays(today, 181),\r\n            endDate: this.addDays(today, 270),\r\n            metadata: { importance: 'critical' }\r\n          },\r\n          {\r\n            id: crypto.randomUUID(),\r\n            title: 'Oath Ceremony and Certificate',\r\n            description: 'Attend oath ceremony and receive certificate of naturalization.',\r\n            milestoneTypes: ['ceremony_scheduling', 'oath_ceremony', 'certificate_issuance'],\r\n            startDate: this.addDays(today, 271),\r\n            endDate: this.addDays(today, 300),\r\n            metadata: { importance: 'critical' }\r\n          }\r\n        );\r\n        break;\r\n      \r\n      // Add more case types with their specific phases...\r\n      \r\n      default:\r\n        // Default generic phases for any other case type\r\n        phases.push(\r\n          {\r\n            id: crypto.randomUUID(),\r\n            title: 'Preparation',\r\n            description: 'Gather all necessary documents for your application.',\r\n            milestoneTypes: ['document_collection', 'document_verification', 'form_preparation'],\r\n            startDate: today,\r\n            endDate: this.addDays(today, 30),\r\n            metadata: { importance: 'critical' }\r\n          },\r\n          {\r\n            id: crypto.randomUUID(),\r\n            title: 'Application Filing',\r\n            description: 'Complete and submit your application.',\r\n            milestoneTypes: ['application_review', 'fee_payment', 'application_submission'],\r\n            startDate: this.addDays(today, 31),\r\n            endDate: this.addDays(today, 60),\r\n            metadata: { importance: 'critical' }\r\n          },\r\n          {\r\n            id: crypto.randomUUID(),\r\n            title: 'Processing and Review',\r\n            description: 'Application processing and review by authorities.',\r\n            milestoneTypes: ['processing_updates', 'additional_documents', 'status_checks'],\r\n            startDate: this.addDays(today, 61),\r\n            endDate: this.addDays(today, 150),\r\n            metadata: { importance: 'critical' }\r\n          },\r\n          {\r\n            id: crypto.randomUUID(),\r\n            title: 'Decision and Next Steps',\r\n            description: 'Receive decision and take appropriate next steps.',\r\n            milestoneTypes: ['decision_waiting', 'decision_response', 'post_decision_steps'],\r\n            startDate: this.addDays(today, 151),\r\n            endDate: this.addDays(today, 180),\r\n            metadata: { importance: 'critical' }\r\n          }\r\n        );\r\n        break;\r\n    }\r\n    \r\n    return phases;\r\n  }\r\n  \r\n  /**\r\n   * Adjust phase timings based on urgency and complexity\r\n   */\r\n  private adjustPhaseTimings(\r\n    phases: Array<{\r\n      id: string;\r\n      title: string;\r\n      description: string;\r\n      milestoneTypes: string[];\r\n      startDate: Date;\r\n      endDate: Date;\r\n      metadata?: Record<string, any>;\r\n    }>,\r\n    params: {\r\n      urgency: 'normal' | 'expedited';\r\n      complexity: 'simple' | 'standard' | 'complex';\r\n    }\r\n  ): Array<{\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    milestoneTypes: string[];\r\n    startDate: Date;\r\n    endDate: Date;\r\n    metadata?: Record<string, any>;\r\n  }> {\r\n    // Apply timing adjustments based on urgency\r\n    const urgencyMultiplier = params.urgency === 'expedited' ? 0.7 : 1.0;\r\n    \r\n    // Apply timing adjustments based on complexity\r\n    const complexityMultiplier = \r\n      params.complexity === 'simple' ? 0.8 :\r\n      params.complexity === 'complex' ? 1.3 : 1.0;\r\n    \r\n    // Combined multiplier\r\n    const timeMultiplier = urgencyMultiplier * complexityMultiplier;\r\n    \r\n    // Adjust each phase's timing\r\n    let currentStartDate = new Date();\r\n    return phases.map((phase, index) => {\r\n      // Calculate the original duration in days\r\n      const originalDuration = this.daysBetween(phase.startDate, phase.endDate);\r\n      \r\n      // Apply the multiplier to get the adjusted duration\r\n      const adjustedDuration = Math.round(originalDuration * timeMultiplier);\r\n      \r\n      // For the first phase, start date is today\r\n      const startDate = index === 0 ? currentStartDate : currentStartDate;\r\n      \r\n      // Calculate the end date based on adjusted duration\r\n      const endDate = this.addDays(startDate, adjustedDuration);\r\n      \r\n      // Update the current start date for the next phase\r\n      currentStartDate = this.addDays(endDate, 1);\r\n      \r\n      // Return the phase with adjusted dates\r\n      return {\r\n        ...phase,\r\n        startDate,\r\n        endDate\r\n      };\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Generate milestones for a phase\r\n   */\r\n  private generateMilestones(\r\n    phaseId: string,\r\n    milestoneTypes: string[],\r\n    phaseStartDate: Date,\r\n    phaseEndDate: Date,\r\n    caseType: CaseType,\r\n    params: {\r\n      priorityDocuments: string[];\r\n    }\r\n  ): RoadmapMilestone[] {\r\n    // Get required documents for the case type\r\n    const requiredDocuments = this.caseService.getRequiredDocuments(caseType);\r\n    \r\n    // Calculate even distribution of milestone dates within the phase\r\n    const phaseDuration = this.daysBetween(phaseStartDate, phaseEndDate);\r\n    const milestoneCount = milestoneTypes.length;\r\n    const daysPerMilestone = Math.floor(phaseDuration / milestoneCount);\r\n    \r\n    return milestoneTypes.map((type, index) => {\r\n      // Calculate milestone start and end dates\r\n      const startDate = this.addDays(phaseStartDate, index * daysPerMilestone);\r\n      const endDate = index === milestoneCount - 1 \r\n        ? phaseEndDate \r\n        : this.addDays(phaseStartDate, (index + 1) * daysPerMilestone - 1);\r\n      \r\n      // Get milestone details based on type\r\n      const { title, description, isCritical } = this.getMilestoneDetails(type, caseType);\r\n      \r\n      // Determine which documents are required for this milestone\r\n      const milestoneDocuments = this.getDocumentsForMilestone(\r\n        type,\r\n        requiredDocuments,\r\n        params.priorityDocuments\r\n      );\r\n      \r\n      // Determine dependencies\r\n      const dependsOn = index > 0 ? [crypto.randomUUID()] : []; // Placeholder for actual dependencies\r\n      \r\n      return {\r\n        id: crypto.randomUUID(),\r\n        title,\r\n        description,\r\n        startDate,\r\n        endDate,\r\n        status: 'not_started',\r\n        completionPercentage: 0,\r\n        requiredDocuments: milestoneDocuments,\r\n        dependsOn,\r\n        isCritical,\r\n        metadata: {\r\n          type,\r\n          phaseId\r\n        }\r\n      };\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Get milestone details based on milestone type\r\n   */\r\n  private getMilestoneDetails(\r\n    milestoneType: string, \r\n    caseType: CaseType\r\n  ): {\r\n    title: string;\r\n    description: string;\r\n    isCritical: boolean;\r\n  } {\r\n    // Define milestone details based on type and case type\r\n    const milestoneDetails: Record<string, {\r\n      title: string;\r\n      description: string;\r\n      isCritical: boolean;\r\n    }> = {\r\n      // Document collection milestones\r\n      document_collection: {\r\n        title: 'Gather Required Documents',\r\n        description: 'Collect all required documents for your application.',\r\n        isCritical: true\r\n      },\r\n      document_translation: {\r\n        title: 'Translate Documents',\r\n        description: 'Translate any non-English documents with certified translations.',\r\n        isCritical: true\r\n      },\r\n      document_verification: {\r\n        title: 'Verify Document Authenticity',\r\n        description: 'Ensure all documents are authentic and properly certified.',\r\n        isCritical: true\r\n      },\r\n      \r\n      // Form preparation milestones\r\n      form_preparation: {\r\n        title: 'Complete Application Forms',\r\n        description: 'Fill out all required application forms accurately.',\r\n        isCritical: true\r\n      },\r\n      application_review: {\r\n        title: 'Review Application Package',\r\n        description: 'Review your complete application package before submission.',\r\n        isCritical: true\r\n      },\r\n      fee_payment: {\r\n        title: 'Pay Application Fees',\r\n        description: 'Pay all required application and processing fees.',\r\n        isCritical: true\r\n      },\r\n      \r\n      // Submission milestones\r\n      application_submission: {\r\n        title: 'Submit Application',\r\n        description: 'Submit your complete application package to the appropriate authority.',\r\n        isCritical: true\r\n      },\r\n      receipt_notice: {\r\n        title: 'Receive Receipt Notice',\r\n        description: 'Receive confirmation that your application has been received.',\r\n        isCritical: false\r\n      },\r\n      \r\n      // Biometrics and background check milestones\r\n      biometrics_appointment: {\r\n        title: 'Attend Biometrics Appointment',\r\n        description: 'Attend appointment for fingerprinting and photos.',\r\n        isCritical: true\r\n      },\r\n      background_check: {\r\n        title: 'Background Check Processing',\r\n        description: 'Your background check is being processed.',\r\n        isCritical: false\r\n      },\r\n      \r\n      // Interview milestones\r\n      interview_preparation: {\r\n        title: 'Prepare for Interview',\r\n        description: 'Prepare documents and practice for your upcoming interview.',\r\n        isCritical: true\r\n      },\r\n      interview: {\r\n        title: 'Attend Interview',\r\n        description: 'Attend your scheduled interview with all required documents.',\r\n        isCritical: true\r\n      },\r\n      civics_test: {\r\n        title: 'Complete Civics Test',\r\n        description: 'Complete the U.S. civics and English language tests.',\r\n        isCritical: true\r\n      },\r\n      \r\n      // Processing milestones\r\n      processing_updates: {\r\n        title: 'Check Application Status',\r\n        description: 'Regularly check for updates on your application status.',\r\n        isCritical: false\r\n      },\r\n      additional_documents: {\r\n        title: 'Submit Additional Documents',\r\n        description: 'Respond to any requests for additional evidence or documentation.',\r\n        isCritical: true\r\n      },\r\n      status_checks: {\r\n        title: 'Regular Status Checks',\r\n        description: 'Perform regular checks on your application status.',\r\n        isCritical: false\r\n      },\r\n      \r\n      // Decision milestones\r\n      decision_waiting: {\r\n        title: 'Wait for Decision',\r\n        description: 'Your application is under review for a final decision.',\r\n        isCritical: false\r\n      },\r\n      decision_response: {\r\n        title: 'Receive Decision',\r\n        description: 'Receive the decision on your application.',\r\n        isCritical: true\r\n      },\r\n      post_decision_steps: {\r\n        title: 'Complete Post-Decision Steps',\r\n        description: 'Complete any required steps after receiving your decision.',\r\n        isCritical: true\r\n      },\r\n      \r\n      // Oath and certificate milestones (for citizenship)\r\n      ceremony_scheduling: {\r\n        title: 'Oath Ceremony Scheduling',\r\n        description: 'Receive your oath ceremony scheduling notice.',\r\n        isCritical: false\r\n      },\r\n      oath_ceremony: {\r\n        title: 'Attend Oath Ceremony',\r\n        description: 'Attend your oath ceremony to complete the naturalization process.',\r\n        isCritical: true\r\n      },\r\n      certificate_issuance: {\r\n        title: 'Receive Certificate',\r\n        description: 'Receive your official certificate.',\r\n        isCritical: true\r\n      },\r\n      \r\n      // Travel milestones (for visa)\r\n      visa_issuance: {\r\n        title: 'Receive Visa',\r\n        description: 'Receive your approved visa in your passport.',\r\n        isCritical: true\r\n      },\r\n      travel_preparation: {\r\n        title: 'Prepare for Travel',\r\n        description: 'Make necessary travel arrangements and preparations.',\r\n        isCritical: true\r\n      }\r\n    };\r\n    \r\n    // Return the milestone details or a generic placeholder if not found\r\n    return milestoneDetails[milestoneType] || {\r\n      title: this.toTitleCase(milestoneType.replace(/_/g, ' ')),\r\n      description: `Complete the ${milestoneType.replace(/_/g, ' ')} step in your application process.`,\r\n      isCritical: false\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Determine which documents are required for a specific milestone\r\n   */\r\n  private getDocumentsForMilestone(\r\n    milestoneType: string,\r\n    allRequiredDocuments: string[],\r\n    priorityDocuments: string[]\r\n  ): string[] {\r\n    // Define which document types are associated with which milestone types\r\n    const milestoneDocumentMap: Record<string, string[]> = {\r\n      document_collection: allRequiredDocuments,\r\n      document_translation: allRequiredDocuments.filter(doc => \r\n        doc.includes('Birth') || \r\n        doc.includes('Marriage') || \r\n        doc.includes('Certificate') ||\r\n        doc.includes('Court') ||\r\n        doc.includes('Foreign')\r\n      ),\r\n      document_verification: allRequiredDocuments.filter(doc => \r\n        doc.includes('Identity') || \r\n        doc.includes('Passport') || \r\n        doc.includes('Certificate')\r\n      ),\r\n      form_preparation: [],\r\n      application_review: allRequiredDocuments,\r\n      application_submission: allRequiredDocuments,\r\n      interview: allRequiredDocuments,\r\n      additional_documents: priorityDocuments\r\n    };\r\n    \r\n    // Return the associated documents or empty array if none defined\r\n    return milestoneDocumentMap[milestoneType] || [];\r\n  }\r\n  \r\n  /**\r\n   * Calculate timeline dates based on case type, phases, and parameters\r\n   */\r\n  private calculateTimeline(\r\n    caseType: CaseType,\r\n    phases: RoadmapPhase[],\r\n    params: {\r\n      urgency: 'normal' | 'expedited';\r\n      complexity: 'simple' | 'standard' | 'complex';\r\n    }\r\n  ): {\r\n    startDate: Date;\r\n    targetEndDate: Date;\r\n    estimatedEndDate: Date;\r\n  } {\r\n    // Start date is today\r\n    const startDate = new Date();\r\n    \r\n    // Target end date is the end date of the last phase\r\n    const lastPhase = phases[phases.length - 1];\r\n    const targetEndDate = lastPhase.endDate;\r\n    \r\n    // Estimated end date might differ from target based on processing times\r\n    const processingTimeEstimate = this.caseService.estimateProcessingTime(caseType);\r\n    \r\n    // Apply urgency and complexity factors to the estimated processing time\r\n    const urgencyFactor = params.urgency === 'expedited' ? 0.8 : 1.0;\r\n    const complexityFactor = \r\n      params.complexity === 'simple' ? 0.9 :\r\n      params.complexity === 'complex' ? 1.2 : 1.0;\r\n    \r\n    // Calculate estimated processing time with factors applied\r\n    const adjustedProcessingDays = Math.round(\r\n      processingTimeEstimate.averageDays * urgencyFactor * complexityFactor\r\n    );\r\n    \r\n    // Calculate estimated end date\r\n    const estimatedEndDate = this.addDays(startDate, adjustedProcessingDays);\r\n    \r\n    return {\r\n      startDate,\r\n      targetEndDate,\r\n      estimatedEndDate\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Add days to a date\r\n   */\r\n  private addDays(date: Date, days: number): Date {\r\n    const result = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n  \r\n  /**\r\n   * Calculate days between two dates\r\n   */\r\n  private daysBetween(startDate: Date, endDate: Date): number {\r\n    const oneDay = 24 * 60 * 60 * 1000; // milliseconds in a day\r\n    return Math.round((endDate.getTime() - startDate.getTime()) / oneDay);\r\n  }\r\n  \r\n  /**\r\n   * Convert a string to title case\r\n   */\r\n  private toTitleCase(str: string): string {\r\n    return str.replace(\r\n      /\\w\\S*/g,\r\n      txt => txt.charAt(0).toUpperCase() + txt.substring(1).toLowerCase()\r\n    );\r\n  }\r\n} ","import { zValidator } from '@hono/zod-validator';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { Hono } from 'hono';\r\nimport { NextResponse } from 'next/server';\r\nimport { z } from 'zod';\r\n\r\nimport { Case } from '@/immigration/entities/case';\r\nimport { Roadmap, RoadmapPhase, RoadmapMilestone } from '@/immigration/entities/roadmap';\r\nimport { CaseService } from '@/immigration/services/case-service';\r\nimport { RoadmapService } from '@/immigration/services/roadmap-service';\r\n\r\n\r\n// Initialize services\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || '';\r\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || '';\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\nconst caseService = new CaseService();\r\nconst roadmapService = new RoadmapService(caseService);\r\n\r\nconst app = new Hono()\r\n  .basePath('/api/roadmap');\r\n\r\n// Middleware for authentication\r\nconst authMiddleware = async (c: any, next: () => Promise<void>) => {\r\n  const authHeader = c.req.header('Authorization');\r\n  if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n    return c.json({ error: 'Unauthorized' }, 401);\r\n  }\r\n\r\n  const token = authHeader.split(' ')[1];\r\n  const { data: { user }, error } = await supabase.auth.getUser(token);\r\n\r\n  if (error || !user) {\r\n    return c.json({ error: 'Unauthorized' }, 401);\r\n  }\r\n\r\n  c.set('user', user);\r\n  await next();\r\n};\r\n\r\n// Schema for creating a roadmap\r\nconst createRoadmapSchema = z.object({\r\n  caseId: z.string().uuid(),\r\n  customizationParams: z.object({\r\n    urgency: z.enum(['normal', 'expedited']).optional(),\r\n    complexity: z.enum(['simple', 'standard', 'complex']).optional(),\r\n    priorityDocuments: z.array(z.string()).optional(),\r\n  }).optional(),\r\n});\r\n\r\n// Schema for updating milestone status\r\nconst updateMilestoneSchema = z.object({\r\n  roadmapId: z.string().uuid(),\r\n  milestoneId: z.string().uuid(),\r\n  status: z.enum(['not_started', 'in_progress', 'completed', 'blocked', 'overdue']),\r\n  completionPercentage: z.number().min(0).max(100),\r\n});\r\n\r\n// Schema for updating roadmap\r\nconst updateRoadmapSchema = z.object({\r\n  roadmapId: z.string().uuid(),\r\n  title: z.string().optional(),\r\n  description: z.string().optional(),\r\n  metadata: z.record(z.any()).optional(),\r\n});\r\n\r\n// Create a roadmap\r\napp.post(\r\n  '/',\r\n  authMiddleware,\r\n  zValidator('json', createRoadmapSchema),\r\n  async (c) => {\r\n    try {\r\n      const user = c.get('user');\r\n      if (!user) {\r\n        return c.json({ error: 'Unauthorized - User not found in context' }, 401);\r\n      }\r\n      const { caseId, customizationParams } = c.req.valid('json');\r\n\r\n      // Get the case\r\n      const { data: caseData, error: caseError } = await supabase\r\n        .from('cases')\r\n        .select('*')\r\n        .eq('id', caseId)\r\n        .single();\r\n\r\n      if (caseError || !caseData) {\r\n        return c.json({ error: 'Case not found' }, 404);\r\n      }\r\n\r\n      // Check if user has access to this case\r\n      const isAssigned = caseData.assignments.some(\r\n        (assignment: any) => assignment.userId === user.id\r\n      );\r\n\r\n      if (!isAssigned && caseData.client_id !== user.id) {\r\n        return c.json({ error: 'Access denied to this case' }, 403);\r\n      }\r\n\r\n      // Create case entity using fromDatabase\r\n      const caseEntity = Case.fromDatabase(caseData);\r\n\r\n      // Generate roadmap\r\n      const roadmap = roadmapService.generateRoadmap(caseEntity, user.id, customizationParams);\r\n\r\n      // Save to database\r\n      const { data: roadmapData, error: roadmapError } = await supabase\r\n        .from('roadmaps')\r\n        .insert({\r\n          id: roadmap.id,\r\n          title: roadmap.title,\r\n          description: roadmap.description,\r\n          case_id: roadmap.caseId,\r\n          case_type: roadmap.caseType,\r\n          user_id: roadmap.userId,\r\n          phases: roadmap.phases,\r\n          start_date: roadmap.startDate.toISOString(),\r\n          target_end_date: roadmap.targetEndDate.toISOString(),\r\n          estimated_end_date: roadmap.estimatedEndDate.toISOString(),\r\n          completion_percentage: roadmap.completionPercentage,\r\n          last_updated: roadmap.lastUpdated.toISOString(),\r\n          metadata: roadmap.metadata\r\n        })\r\n        .select()\r\n        .single();\r\n\r\n      if (roadmapError) {\r\n        return c.json({ error: `Failed to create roadmap: ${roadmapError.message}` }, 500);\r\n      }\r\n\r\n      return c.json(roadmapData);\r\n    } catch (error: any) {\r\n      return c.json({ error: `Server error: ${error.message}` }, 500);\r\n    }\r\n  }\r\n);\r\n\r\n// Get a specific roadmap\r\napp.get(\r\n  '/:id',\r\n  authMiddleware,\r\n  async (c) => {\r\n    try {\r\n      const user = c.get('user');\r\n      if (!user) {\r\n        return c.json({ error: 'Unauthorized - User not found in context' }, 401);\r\n      }\r\n      const id = c.req.param('id');\r\n\r\n      // Get the roadmap\r\n      const { data: roadmapData, error: roadmapError } = await supabase\r\n        .from('roadmaps')\r\n        .select('*, cases:case_id(*)')\r\n        .eq('id', id)\r\n        .single();\r\n\r\n      if (roadmapError || !roadmapData) {\r\n        return c.json({ error: 'Roadmap not found' }, 404);\r\n      }\r\n\r\n      // Check if user has access to this roadmap\r\n      if (\r\n        roadmapData.user_id !== user.id &&\r\n        !roadmapData.cases.assignments.some(\r\n          (assignment: any) => assignment.userId === user.id\r\n        )\r\n      ) {\r\n        return c.json({ error: 'Access denied to this roadmap' }, 403);\r\n      }\r\n\r\n      return c.json(roadmapData);\r\n    } catch (error: any) {\r\n      return c.json({ error: `Server error: ${error.message}` }, 500);\r\n    }\r\n  }\r\n);\r\n\r\n// Get roadmaps for a case\r\napp.get(\r\n  '/case/:caseId',\r\n  authMiddleware,\r\n  async (c) => {\r\n    try {\r\n      const user = c.get('user');\r\n      if (!user) {\r\n        return c.json({ error: 'Unauthorized - User not found in context' }, 401);\r\n      }\r\n      const caseId = c.req.param('caseId');\r\n\r\n      // Check if user has access to this case\r\n      const { data: caseData, error: caseError } = await supabase\r\n        .from('cases')\r\n        .select('*')\r\n        .eq('id', caseId)\r\n        .single();\r\n\r\n      if (caseError || !caseData) {\r\n        return c.json({ error: 'Case not found' }, 404);\r\n      }\r\n\r\n      const isCaseAssigned = caseData.assignments.some(\r\n        (assignment: any) => assignment.userId === user.id\r\n      );\r\n      if (!isCaseAssigned && caseData.client_id !== user.id) {\r\n        return c.json({ error: 'Access denied to this case' }, 403);\r\n      }\r\n\r\n      // Get roadmaps for this case\r\n      const { data: roadmapsData, error: roadmapsError } = await supabase\r\n        .from('roadmaps')\r\n        .select('*')\r\n        .eq('case_id', caseId)\r\n        .order('created_at', { ascending: false });\r\n\r\n      if (roadmapsError) {\r\n        return c.json({ error: `Failed to fetch roadmaps: ${roadmapsError.message}` }, 500);\r\n      }\r\n\r\n      return c.json(roadmapsData);\r\n    } catch (error: any) {\r\n      return c.json({ error: `Server error: ${error.message}` }, 500);\r\n    }\r\n  }\r\n);\r\n\r\n// Get user's roadmaps\r\napp.get(\r\n  '/',\r\n  authMiddleware,\r\n  async (c) => {\r\n    try {\r\n      const user = c.get('user');\r\n\r\n      // Get roadmaps for this user (either as owner or assigned to their cases)\r\n      const { data: roadmapsData, error: roadmapsError } = await supabase\r\n        .from('roadmaps')\r\n        .select('*')\r\n        .eq('user_id', user.id)\r\n        .order('last_updated', { ascending: false });\r\n\r\n      if (roadmapsError) {\r\n        return c.json({ error: `Failed to fetch roadmaps: ${roadmapsError.message}` }, 500);\r\n      }\r\n\r\n      return c.json(roadmapsData);\r\n    } catch (error: any) {\r\n      return c.json({ error: `Server error: ${error.message}` }, 500);\r\n    }\r\n  }\r\n);\r\n\r\n// Update milestone status\r\napp.patch(\r\n  '/milestone',\r\n  authMiddleware,\r\n  zValidator('json', updateMilestoneSchema),\r\n  async (c) => {\r\n    try {\r\n      const user = c.get('user');\r\n      if (!user) {\r\n        return c.json({ error: 'Unauthorized - User not found in context' }, 401);\r\n      }\r\n      const { roadmapId, milestoneId, status, completionPercentage } = c.req.valid('json');\r\n\r\n      // Get the roadmap\r\n      const { data: roadmapData, error: roadmapError } = await supabase\r\n        .from('roadmaps')\r\n        .select('*')\r\n        .eq('id', roadmapId)\r\n        .single();\r\n\r\n      if (roadmapError || !roadmapData) {\r\n        return c.json({ error: 'Roadmap not found' }, 404);\r\n      }\r\n\r\n      // Check if user has access to this roadmap\r\n      if (roadmapData.user_id !== user.id) {\r\n        // Check if user is assigned to the case\r\n        const { data: caseData, error: caseError } = await supabase\r\n          .from('cases')\r\n          .select('assignments')\r\n          .eq('id', roadmapData.case_id)\r\n          .single();\r\n\r\n        if (caseError || !caseData) {\r\n          return c.json({ error: 'Access denied to this roadmap' }, 403);\r\n        }\r\n\r\n        const isAssigned = caseData.assignments.some(\r\n          (assignment: any) => assignment.userId === user.id\r\n        );\r\n\r\n        if (!isAssigned) {\r\n          return c.json({ error: 'Access denied to this roadmap' }, 403);\r\n        }\r\n      }\r\n\r\n      // Create Roadmap entity\r\n      const roadmap = Roadmap.fromDatabase(roadmapData);\r\n\r\n      // Update milestone status\r\n      const updatedRoadmap = roadmap.updateMilestoneStatus(\r\n        milestoneId,\r\n        status,\r\n        completionPercentage\r\n      );\r\n\r\n      // Save the updated roadmap\r\n      const { data: updatedData, error: updateError } = await supabase\r\n        .from('roadmaps')\r\n        .update({\r\n          phases: updatedRoadmap.phases,\r\n          completion_percentage: updatedRoadmap.completionPercentage,\r\n          last_updated: updatedRoadmap.lastUpdated.toISOString()\r\n        })\r\n        .eq('id', roadmapId)\r\n        .select()\r\n        .single();\r\n\r\n      if (updateError) {\r\n        return c.json({ error: `Failed to update milestone: ${updateError.message}` }, 500);\r\n      }\r\n\r\n      return c.json(updatedData);\r\n    } catch (error: any) {\r\n      return c.json({ error: `Server error: ${error.message}` }, 500);\r\n    }\r\n  }\r\n);\r\n\r\n// Update roadmap\r\napp.patch(\r\n  '/:id',\r\n  authMiddleware,\r\n  zValidator('json', updateRoadmapSchema),\r\n  async (c) => {\r\n    try {\r\n      const user = c.get('user');\r\n      if (!user) {\r\n        return c.json({ error: 'Unauthorized - User not found in context' }, 401);\r\n      }\r\n      const id = c.req.param('id');\r\n      const { title, description, metadata } = c.req.valid('json');\r\n\r\n      // Get the roadmap\r\n      const { data: roadmapData, error: roadmapError } = await supabase\r\n        .from('roadmaps')\r\n        .select('*')\r\n        .eq('id', id)\r\n        .single();\r\n\r\n      if (roadmapError || !roadmapData) {\r\n        return c.json({ error: 'Roadmap not found' }, 404);\r\n      }\r\n\r\n      // Check if user has access to this roadmap\r\n      if (roadmapData.user_id !== user.id) {\r\n        return c.json({ error: 'Access denied to this roadmap' }, 403);\r\n      }\r\n\r\n      // Prepare update data\r\n      const updateData: Record<string, any> = {\r\n        last_updated: new Date().toISOString()\r\n      };\r\n\r\n      if (title) updateData.title = title;\r\n      if (description) updateData.description = description;\r\n      if (metadata) updateData.metadata = {\r\n        ...roadmapData.metadata,\r\n        ...metadata\r\n      };\r\n\r\n      // Update the roadmap\r\n      const { data: updatedData, error: updateError } = await supabase\r\n        .from('roadmaps')\r\n        .update(updateData)\r\n        .eq('id', id)\r\n        .select()\r\n        .single();\r\n\r\n      if (updateError) {\r\n        return c.json({ error: `Failed to update roadmap: ${updateError.message}` }, 500);\r\n      }\r\n\r\n      return c.json(updatedData);\r\n    } catch (error: any) {\r\n      return c.json({ error: `Server error: ${error.message}` }, 500);\r\n    }\r\n  }\r\n);\r\n\r\n// Delete a roadmap\r\napp.delete(\r\n  '/:id',\r\n  authMiddleware,\r\n  async (c) => {\r\n    try {\r\n      const user = c.get('user');\r\n      const id = c.req.param('id');\r\n\r\n      // Get the roadmap\r\n      const { data: roadmapData, error: roadmapError } = await supabase\r\n        .from('roadmaps')\r\n        .select('*')\r\n        .eq('id', id)\r\n        .single();\r\n\r\n      if (roadmapError || !roadmapData) {\r\n        return c.json({ error: 'Roadmap not found' }, 404);\r\n      }\r\n\r\n      // Check if user has access to this roadmap\r\n      if (roadmapData.user_id !== user.id) {\r\n        return c.json({ error: 'Access denied to this roadmap' }, 403);\r\n      }\r\n\r\n      // Delete the roadmap\r\n      const { error: deleteError } = await supabase\r\n        .from('roadmaps')\r\n        .delete()\r\n        .eq('id', id);\r\n\r\n      if (deleteError) {\r\n        return c.json({ error: `Failed to delete roadmap: ${deleteError.message}` }, 500);\r\n      }\r\n\r\n      return c.json({ success: true });\r\n    } catch (error: any) {\r\n      return c.json({ error: `Server error: ${error.message}` }, 500);\r\n    }\r\n  }\r\n);\r\n\r\n// Export for Next.js API route\r\nexport const GET = async (req: Request) => {\r\n  return app.fetch(req);\r\n};\r\n\r\nexport const POST = async (req: Request) => {\r\n  return app.fetch(req);\r\n};\r\n\r\nexport const PATCH = async (req: Request) => {\r\n  return app.fetch(req);\r\n};\r\n\r\nexport const DELETE = async (req: Request) => {\r\n  return app.fetch(req);\r\n}; ","import * as origModule from 'next/dist/server/app-render/work-unit-async-storage.external.js';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport {} from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nimport * as Sentry from '@sentry/nextjs';\n\n// @ts-expect-error Because we cannot be sure if the RequestAsyncStorage module exists (it is not part of the Next.js public\n// API) we use a shim if it doesn't exist. The logic for this is in the wrapping loader.\n\nconst asyncStorageModule = { ...origModule } ;\n\nconst requestAsyncStorage =\n  'workUnitAsyncStorage' in asyncStorageModule\n    ? asyncStorageModule.workUnitAsyncStorage\n    : 'requestAsyncStorage' in asyncStorageModule\n      ? asyncStorageModule.requestAsyncStorage\n      : undefined;\n\nfunction wrapHandler(handler, method) {\n  // Running the instrumentation code during the build phase will mark any function as \"dynamic\" because we're accessing\n  // the Request object. We do not want to turn handlers dynamic so we skip instrumentation in the build phase.\n  if (process.env.NEXT_PHASE === 'phase-production-build') {\n    return handler;\n  }\n\n  if (typeof handler !== 'function') {\n    return handler;\n  }\n\n  return new Proxy(handler, {\n    apply: (originalFunction, thisArg, args) => {\n      let headers = undefined;\n\n      // We try-catch here just in case the API around `requestAsyncStorage` changes unexpectedly since it is not public API\n      try {\n        const requestAsyncStore = requestAsyncStorage?.getStore() ;\n        headers = requestAsyncStore?.headers;\n      } catch (e) {\n        /** empty */\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return Sentry.wrapRouteHandlerWithSentry(originalFunction , {\n        method,\n        parameterizedRoute: '/api/roadmap',\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst GET = wrapHandler(serverComponentModule.GET , 'GET');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst POST = wrapHandler(serverComponentModule.POST , 'POST');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PUT = wrapHandler(serverComponentModule.PUT , 'PUT');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PATCH = wrapHandler(serverComponentModule.PATCH , 'PATCH');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst DELETE = wrapHandler(serverComponentModule.DELETE , 'DELETE');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst HEAD = wrapHandler(serverComponentModule.HEAD , 'HEAD');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst OPTIONS = wrapHandler(serverComponentModule.OPTIONS , 'OPTIONS');\n\nexport { DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT };\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\api\\\\roadmap\\\\route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/roadmap/route\",\n        pathname: \"/api/roadmap\",\n        filename: \"route\",\n        bundlePath: \"app/api/roadmap/route\"\n    },\n    resolvedPagePath: \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\api\\\\roadmap\\\\route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","module.exports = require(\"node:fs\");","module.exports = require(\"worker_threads\");","module.exports = require(\"zlib\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"node:worker_threads\");","module.exports = require(\"node:path\");","module.exports = require(\"node:net\");","module.exports = require(\"buffer\");","module.exports = require(\"url\");","module.exports = require(\"child_process\");","module.exports = require(\"node:readline\");","module.exports = require(\"http\");","module.exports = require(\"tty\");","module.exports = require(\"async_hooks\");","module.exports = require(\"node:inspector\");","module.exports = require(\"net\");","module.exports = require(\"events\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 96708;\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 97108;\nmodule.exports = webpackEmptyContext;"],"names":["Roadmap","constructor","props","id","title","description","caseId","caseType","userId","phases","startDate","Date","targetEndDate","estimatedEndDate","completionPercentage","lastUpdated","metadata","calculateCompletionPercentage","length","Math","round","totalPercentage","reduce","sum","phase","getCurrentPhase","inProgressPhases","filter","status","notStartedPhases","sort","a","b","getTime","getCurrentMilestone","currentPhase","inProgressMilestones","milestones","milestone","notStartedMilestones","hasOverdueMilestones","some","getAllMilestones","flatMap","updateMilestoneStatus","milestoneId","updatedPhases","map","milestoneIndex","findIndex","m","updatedMilestones","phaseCompletionPercentage","phaseStatus","allCompleted","every","anyInProgress","anyBlocked","anyOverdue","toObject","toISOString","endDate","fromDatabase","data","case_id","case_type","user_id","Array","isArray","start_date","end_date","target_end_date","estimated_end_date","completion_percentage","last_updated","RoadmapService","caseService","generateRoadmap","caseInstance","customizationParams","params","urgency","complexity","priorityDocuments","generatePhases","calculateTimeline","crypto","randomUUID","getRoadmapTitle","caseNumber","getRoadmapDescription","generated","CaseType","ASYLUM","VISA_APPLICATION","WORK_PERMIT","FAMILY_SPONSORSHIP","CITIZENSHIP","RESIDENCY","REFUGEE","OTHER","phaseConfig","getPhaseConfiguration","adjustPhaseTimings","generateMilestones","milestoneTypes","today","push","addDays","importance","timeMultiplier","urgencyMultiplier","complexityMultiplier","currentStartDate","index","adjustedDuration","daysBetween","phaseId","phaseStartDate","phaseEndDate","requiredDocuments","getRequiredDocuments","phaseDuration","milestoneCount","daysPerMilestone","floor","type","isCritical","getMilestoneDetails","milestoneDocuments","getDocumentsForMilestone","dependsOn","milestoneType","milestoneDetails","document_collection","document_translation","document_verification","form_preparation","application_review","fee_payment","application_submission","receipt_notice","biometrics_appointment","background_check","interview_preparation","interview","civics_test","processing_updates","additional_documents","status_checks","decision_waiting","decision_response","post_decision_steps","ceremony_scheduling","oath_ceremony","certificate_issuance","visa_issuance","travel_preparation","toTitleCase","replace","allRequiredDocuments","milestoneDocumentMap","doc","includes","lastPhase","processingTimeEstimate","estimateProcessingTime","urgencyFactor","complexityFactor","adjustedProcessingDays","averageDays","date","days","result","setDate","getDate","oneDay","str","txt","charAt","toUpperCase","substring","toLowerCase","supabase","createClient","process","supabaseKey","roadmapService","CaseService","Hono","basePath","authMiddleware","c","next","authHeader","req","header","startsWith","json","error","token","split","user","auth","getUser","set","createRoadmapSchema","z","uuid","optional","updateMilestoneSchema","roadmapId","min","max","updateRoadmapSchema","app","post","zValidator","get","valid","caseData","caseError","from","select","eq","single","assignments","assignment","client_id","caseEntity","Case","roadmap","roadmapData","roadmapError","insert","message","param","cases","roadmapsData","roadmapsError","order","ascending","patch","isAssigned","updatedRoadmap","updatedData","updateError","update","updateData","delete","deleteError","success","GET","fetch","POST","serverComponentModule.GET","serverComponentModule.PUT","serverComponentModule.PATCH","serverComponentModule.DELETE","serverComponentModule.HEAD","serverComponentModule.OPTIONS"],"sourceRoot":""}