{"version":3,"file":"../app/api/web-indexes/route.js","mappings":"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","sources":["webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/after-task-async-storage.external.js\"","webpack://@hijraah/web/external commonjs2 \"module\"","webpack://@hijraah/web/external commonjs \"next/dist/compiled/next-server/app-page.runtime.prod.js\"","webpack://@hijraah/web/external commonjs2 \"punycode\"","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/action-async-storage.external.js\"","webpack://@hijraah/web/external commonjs2 \"process\"","webpack://@hijraah/web/external commonjs2 \"os\"","webpack://@hijraah/web/external commonjs2 \"stream\"","webpack://@hijraah/web/external commonjs2 \"util\"","webpack://@hijraah/web/external commonjs2 \"fs\"","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/work-async-storage.external.js\"","webpack://@hijraah/web/external node-commonjs \"node:child_process\"","webpack://@hijraah/web/external commonjs2 \"path\"","webpack://@hijraah/web/external commonjs2 \"tls\"","webpack://@hijraah/web/external commonjs2 \"diagnostics_channel\"","webpack://@hijraah/web/external node-commonjs \"node:http\"","webpack://@hijraah/web/external node-commonjs \"node:zlib\"","webpack://@hijraah/web/external node-commonjs \"node:tls\"","webpack://@hijraah/web/external node-commonjs \"node:https\"","webpack://@hijraah/web/external commonjs \"next/dist/compiled/next-server/app-route.runtime.prod.js\"","webpack://@hijraah/web/src/app/api/web-indexes/route.ts","webpack://@hijraah/web/sentry-wrapper-module","webpack://@hijraah/web/?7d8b","webpack://@hijraah/web/external node-commonjs \"node:os\"","webpack://@hijraah/web/external node-commonjs \"node:diagnostics_channel\"","webpack://@hijraah/web/external commonjs2 \"crypto\"","webpack://@hijraah/web/external commonjs2 \"https\"","webpack://@hijraah/web/external node-commonjs \"node:stream\"","webpack://@hijraah/web/external node-commonjs \"node:util\"","webpack://@hijraah/web/../../packages/database/src/client.ts","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/work-unit-async-storage.external.js\"","webpack://@hijraah/web/external node-commonjs \"node:fs\"","webpack://@hijraah/web/external commonjs2 \"worker_threads\"","webpack://@hijraah/web/external commonjs2 \"zlib\"","webpack://@hijraah/web/external commonjs2 \"perf_hooks\"","webpack://@hijraah/web/external node-commonjs \"node:worker_threads\"","webpack://@hijraah/web/external node-commonjs \"node:path\"","webpack://@hijraah/web/external node-commonjs \"node:net\"","webpack://@hijraah/web/external commonjs2 \"buffer\"","webpack://@hijraah/web/external commonjs2 \"url\"","webpack://@hijraah/web/external commonjs2 \"child_process\"","webpack://@hijraah/web/external node-commonjs \"node:readline\"","webpack://@hijraah/web/external commonjs2 \"http\"","webpack://@hijraah/web/external commonjs2 \"tty\"","webpack://@hijraah/web/external commonjs2 \"async_hooks\"","webpack://@hijraah/web/external node-commonjs \"node:inspector\"","webpack://@hijraah/web/external commonjs2 \"net\"","webpack://@hijraah/web/external commonjs2 \"events\""],"sourcesContent":["module.exports = require(\"next/dist/server/app-render/after-task-async-storage.external.js\");","module.exports = require(\"module\");","module.exports = require(\"next/dist/compiled/next-server/app-page.runtime.prod.js\");","module.exports = require(\"punycode\");","module.exports = require(\"next/dist/server/app-render/action-async-storage.external.js\");","module.exports = require(\"process\");","module.exports = require(\"os\");","module.exports = require(\"stream\");","module.exports = require(\"util\");","module.exports = require(\"fs\");","module.exports = require(\"next/dist/server/app-render/work-async-storage.external.js\");","module.exports = require(\"node:child_process\");","module.exports = require(\"path\");","module.exports = require(\"tls\");","module.exports = require(\"diagnostics_channel\");","module.exports = require(\"node:http\");","module.exports = require(\"node:zlib\");","module.exports = require(\"node:tls\");","module.exports = require(\"node:https\");","module.exports = require(\"next/dist/compiled/next-server/app-route.runtime.prod.js\");","import { NextRequest, NextResponse } from \"next/server\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport { auth } from \"@/lib/auth\";\r\nimport { webIndexes, crawlJobs } from \"@hijraah/database/schema\";\r\nimport { db } from \"@hijraah/database/client\";\r\nimport { eq, and } from \"drizzle-orm\";\r\nimport { z } from \"zod\";\r\n\r\n// Validation schemas\r\nconst createWebIndexSchema = z.object({\r\n  url: z.string().url(\"Invalid URL format\"),\r\n  namespace: z.string().min(1, \"Namespace is required\").max(255),\r\n  title: z.string().optional(),\r\n  description: z.string().optional(),\r\n  isPublic: z.boolean().default(false),\r\n  crawlConfig: z\r\n    .object({\r\n      maxPages: z.number().min(1).max(1000).default(100),\r\n      includePatterns: z.array(z.string()).default([]),\r\n      excludePatterns: z.array(z.string()).default([]),\r\n      respectRobotsTxt: z.boolean().default(true),\r\n      delay: z.number().min(0).max(10000).default(1000),\r\n    })\r\n    .optional(),\r\n});\r\n\r\nconst updateWebIndexSchema = createWebIndexSchema.partial();\r\n\r\n// GET /api/web-indexes - List user's web indexes\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n    }\r\n\r\n    const { searchParams } = new URL(request.url);\r\n    const includePublic = searchParams.get(\"includePublic\") === \"true\";\r\n\r\n    let query = db\r\n      .select({\r\n        id: webIndexes.id,\r\n        url: webIndexes.url,\r\n        namespace: webIndexes.namespace,\r\n        title: webIndexes.title,\r\n        description: webIndexes.description,\r\n        pagesCrawled: webIndexes.pagesCrawled,\r\n        totalPages: webIndexes.totalPages,\r\n        isActive: webIndexes.isActive,\r\n        isPublic: webIndexes.isPublic,\r\n        createdAt: webIndexes.createdAt,\r\n        updatedAt: webIndexes.updatedAt,\r\n        lastCrawledAt: webIndexes.lastCrawledAt,\r\n        lastCrawlDuration: webIndexes.lastCrawlDuration,\r\n      })\r\n      .from(webIndexes);\r\n\r\n    if (includePublic) {\r\n      query = query.where(eq(webIndexes.userId, session.user.id));\r\n    } else {\r\n      query = query.where(\r\n        and(\r\n          eq(webIndexes.userId, session.user.id),\r\n          eq(webIndexes.isActive, true)\r\n        )\r\n      );\r\n    }\r\n\r\n    const indexes = await query.orderBy(webIndexes.createdAt);\r\n\r\n    return NextResponse.json({ indexes });\r\n  } catch (error) {\r\n    console.error(\"Error fetching web indexes:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Failed to fetch web indexes\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// POST /api/web-indexes - Create new web index\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n    }\r\n\r\n    const body = await request.json();\r\n    const validatedData = createWebIndexSchema.parse(body);\r\n\r\n    // Check if namespace already exists for this user\r\n    const existingIndex = await db\r\n      .select({ id: webIndexes.id })\r\n      .from(webIndexes)\r\n      .where(\r\n        and(\r\n          eq(webIndexes.userId, session.user.id),\r\n          eq(webIndexes.namespace, validatedData.namespace)\r\n        )\r\n      )\r\n      .limit(1);\r\n\r\n    if (existingIndex.length > 0) {\r\n      return NextResponse.json(\r\n        { error: \"Namespace already exists\" },\r\n        { status: 409 }\r\n      );\r\n    }\r\n\r\n    // Create new web index\r\n    const [newIndex] = await db\r\n      .insert(webIndexes)\r\n      .values({\r\n        userId: session.user.id,\r\n        url: validatedData.url,\r\n        namespace: validatedData.namespace,\r\n        title: validatedData.title,\r\n        description: validatedData.description,\r\n        isPublic: validatedData.isPublic,\r\n        crawlConfig: validatedData.crawlConfig || {},\r\n      })\r\n      .returning();\r\n\r\n    // Create initial crawl job\r\n    await db.insert(crawlJobs).values({\r\n      webIndexId: newIndex.id,\r\n      status: \"pending\",\r\n      metadata: {\r\n        initialCrawl: true,\r\n        maxPages: validatedData.crawlConfig?.maxPages || 100,\r\n      },\r\n    });\r\n\r\n    return NextResponse.json({ index: newIndex }, { status: 201 });\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return NextResponse.json(\r\n        { error: \"Validation failed\", details: error.errors },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    console.error(\"Error creating web index:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Failed to create web index\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// PUT /api/web-indexes/:id - Update web index\r\nexport async function PUT(request: NextRequest) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n    }\r\n\r\n    const { searchParams } = new URL(request.url);\r\n    const indexId = searchParams.get(\"id\");\r\n\r\n    if (!indexId) {\r\n      return NextResponse.json(\r\n        { error: \"Index ID is required\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const body = await request.json();\r\n    const validatedData = updateWebIndexSchema.parse(body);\r\n\r\n    // Check if index exists and belongs to user\r\n    const existingIndex = await db\r\n      .select({ id: webIndexes.id })\r\n      .from(webIndexes)\r\n      .where(\r\n        and(eq(webIndexes.id, indexId), eq(webIndexes.userId, session.user.id))\r\n      )\r\n      .limit(1);\r\n\r\n    if (existingIndex.length === 0) {\r\n      return NextResponse.json(\r\n        { error: \"Web index not found\" },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Update web index\r\n    const [updatedIndex] = await db\r\n      .update(webIndexes)\r\n      .set({\r\n        ...validatedData,\r\n        updatedAt: new Date(),\r\n      })\r\n      .where(eq(webIndexes.id, indexId))\r\n      .returning();\r\n\r\n    return NextResponse.json({ index: updatedIndex });\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return NextResponse.json(\r\n        { error: \"Validation failed\", details: error.errors },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    console.error(\"Error updating web index:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Failed to update web index\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// DELETE /api/web-indexes/:id - Delete web index\r\nexport async function DELETE(request: NextRequest) {\r\n  try {\r\n    const session = await auth();\r\n    if (!session?.user?.id) {\r\n      return NextResponse.json({ error: \"Unauthorized\" }, { status: 401 });\r\n    }\r\n\r\n    const { searchParams } = new URL(request.url);\r\n    const indexId = searchParams.get(\"id\");\r\n\r\n    if (!indexId) {\r\n      return NextResponse.json(\r\n        { error: \"Index ID is required\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Check if index exists and belongs to user\r\n    const existingIndex = await db\r\n      .select({ id: webIndexes.id })\r\n      .from(webIndexes)\r\n      .where(\r\n        and(eq(webIndexes.id, indexId), eq(webIndexes.userId, session.user.id))\r\n      )\r\n      .limit(1);\r\n\r\n    if (existingIndex.length === 0) {\r\n      return NextResponse.json(\r\n        { error: \"Web index not found\" },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Soft delete by setting isActive to false\r\n    await db\r\n      .update(webIndexes)\r\n      .set({\r\n        isActive: false,\r\n        updatedAt: new Date(),\r\n      })\r\n      .where(eq(webIndexes.id, indexId));\r\n\r\n    return NextResponse.json({ success: true });\r\n  } catch (error) {\r\n    console.error(\"Error deleting web index:\", error);\r\n    return NextResponse.json(\r\n      { error: \"Failed to delete web index\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n","import * as origModule from 'next/dist/server/app-render/work-unit-async-storage.external.js';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport {} from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nimport * as Sentry from '@sentry/nextjs';\n\n// @ts-expect-error Because we cannot be sure if the RequestAsyncStorage module exists (it is not part of the Next.js public\n// API) we use a shim if it doesn't exist. The logic for this is in the wrapping loader.\n\nconst asyncStorageModule = { ...origModule } ;\n\nconst requestAsyncStorage =\n  'workUnitAsyncStorage' in asyncStorageModule\n    ? asyncStorageModule.workUnitAsyncStorage\n    : 'requestAsyncStorage' in asyncStorageModule\n      ? asyncStorageModule.requestAsyncStorage\n      : undefined;\n\nfunction wrapHandler(handler, method) {\n  // Running the instrumentation code during the build phase will mark any function as \"dynamic\" because we're accessing\n  // the Request object. We do not want to turn handlers dynamic so we skip instrumentation in the build phase.\n  if (process.env.NEXT_PHASE === 'phase-production-build') {\n    return handler;\n  }\n\n  if (typeof handler !== 'function') {\n    return handler;\n  }\n\n  return new Proxy(handler, {\n    apply: (originalFunction, thisArg, args) => {\n      let headers = undefined;\n\n      // We try-catch here just in case the API around `requestAsyncStorage` changes unexpectedly since it is not public API\n      try {\n        const requestAsyncStore = requestAsyncStorage?.getStore() ;\n        headers = requestAsyncStore?.headers;\n      } catch (e) {\n        /** empty */\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return Sentry.wrapRouteHandlerWithSentry(originalFunction , {\n        method,\n        parameterizedRoute: '/api/web-indexes',\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst GET = wrapHandler(serverComponentModule.GET , 'GET');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst POST = wrapHandler(serverComponentModule.POST , 'POST');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PUT = wrapHandler(serverComponentModule.PUT , 'PUT');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PATCH = wrapHandler(serverComponentModule.PATCH , 'PATCH');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst DELETE = wrapHandler(serverComponentModule.DELETE , 'DELETE');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst HEAD = wrapHandler(serverComponentModule.HEAD , 'HEAD');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst OPTIONS = wrapHandler(serverComponentModule.OPTIONS , 'OPTIONS');\n\nexport { DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT };\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\api\\\\web-indexes\\\\route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/web-indexes/route\",\n        pathname: \"/api/web-indexes\",\n        filename: \"route\",\n        bundlePath: \"app/api/web-indexes/route\"\n    },\n    resolvedPagePath: \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\api\\\\web-indexes\\\\route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","module.exports = require(\"node:os\");","module.exports = require(\"node:diagnostics_channel\");","module.exports = require(\"crypto\");","module.exports = require(\"https\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:util\");","import { drizzle } from \"drizzle-orm/postgres-js\";\r\nimport postgres from \"postgres\";\r\nimport * as schema from \"./schema\";\r\n\r\n// Environment variable setup\r\nconst connectionString = process.env.DATABASE_URL;\r\n\r\nif (!connectionString) {\r\n  throw new Error(\"DATABASE_URL environment variable is required\");\r\n}\r\n\r\n// Create the connection\r\nconst client = postgres(connectionString, {\r\n  max: 10,\r\n  idle_timeout: 20,\r\n  connect_timeout: 10,\r\n});\r\n\r\n// Create the Drizzle database instance\r\nexport const db = drizzle(client, {\r\n  schema,\r\n  logger: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// Export types for use in applications\r\nexport type Database = typeof db;\r\n\r\n// Export the client for manual queries if needed\r\nexport { client as pgClient };\r\n\r\n// Export all schemas\r\nexport * from \"./schema\";\r\n","module.exports = require(\"next/dist/server/app-render/work-unit-async-storage.external.js\");","module.exports = require(\"node:fs\");","module.exports = require(\"worker_threads\");","module.exports = require(\"zlib\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"node:worker_threads\");","module.exports = require(\"node:path\");","module.exports = require(\"node:net\");","module.exports = require(\"buffer\");","module.exports = require(\"url\");","module.exports = require(\"child_process\");","module.exports = require(\"node:readline\");","module.exports = require(\"http\");","module.exports = require(\"tty\");","module.exports = require(\"async_hooks\");","module.exports = require(\"node:inspector\");","module.exports = require(\"net\");","module.exports = require(\"events\");"],"names":["createWebIndexSchema","z","url","namespace","min","max","title","optional","description","isPublic","default","crawlConfig","maxPages","includePatterns","excludePatterns","respectRobotsTxt","delay","updateWebIndexSchema","partial","GET","request","session","auth","user","id","NextResponse","json","error","status","searchParams","URL","includePublic","query","db","select","webIndexes","pagesCrawled","totalPages","isActive","createdAt","updatedAt","lastCrawledAt","lastCrawlDuration","from","where","eq","userId","and","indexes","orderBy","console","POST","body","validatedData","parse","existingIndex","limit","length","newIndex","insert","values","returning","crawlJobs","webIndexId","metadata","initialCrawl","index","details","errors","PUT","indexId","get","updatedIndex","update","set","Date","DELETE","success","serverComponentModule.GET","serverComponentModule.PUT","serverComponentModule.PATCH","serverComponentModule.DELETE","serverComponentModule.HEAD","serverComponentModule.OPTIONS","connectionString","process","env","DATABASE_URL","Error","client","postgres","idle_timeout","connect_timeout","drizzle","schema","logger"],"sourceRoot":""}