{"version":3,"file":"../app/api/auth/guest/route.js","mappings":"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","sources":["webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/after-task-async-storage.external.js\"","webpack://@hijraah/web/external commonjs2 \"module\"","webpack://@hijraah/web/../../node_modules/.pnpm/@opentelemetry+instrumentat_04f370d515cee0be955272f826166073/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ sync","webpack://@hijraah/web/external commonjs \"next/dist/compiled/next-server/app-page.runtime.prod.js\"","webpack://@hijraah/web/external commonjs2 \"punycode\"","webpack://@hijraah/web/external commonjs2 \"process\"","webpack://@hijraah/web/external commonjs2 \"os\"","webpack://@hijraah/web/external commonjs2 \"stream\"","webpack://@hijraah/web/external commonjs2 \"util\"","webpack://@hijraah/web/external commonjs2 \"fs\"","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/work-async-storage.external.js\"","webpack://@hijraah/web/external node-commonjs \"node:child_process\"","webpack://@hijraah/web/external commonjs2 \"path\"","webpack://@hijraah/web/external commonjs2 \"tls\"","webpack://@hijraah/web/external commonjs2 \"diagnostics_channel\"","webpack://@hijraah/web/external node-commonjs \"node:http\"","webpack://@hijraah/web/external node-commonjs \"node:zlib\"","webpack://@hijraah/web/external node-commonjs \"node:tls\"","webpack://@hijraah/web/external node-commonjs \"node:https\"","webpack://@hijraah/web/external commonjs \"next/dist/compiled/next-server/app-route.runtime.prod.js\"","webpack://@hijraah/web/external node-commonjs \"node:os\"","webpack://@hijraah/web/external node-commonjs \"node:diagnostics_channel\"","webpack://@hijraah/web/external commonjs2 \"crypto\"","webpack://@hijraah/web/external commonjs2 \"https\"","webpack://@hijraah/web/src/app/api/auth/guest/route.ts","webpack://@hijraah/web/sentry-wrapper-module","webpack://@hijraah/web/?1812","webpack://@hijraah/web/external node-commonjs \"node:stream\"","webpack://@hijraah/web/external node-commonjs \"node:util\"","webpack://@hijraah/web/ignored|E:\\downloads\\Hijraah\\node_modules\\.pnpm\\ws@8.18.2_bufferutil@4.0.9\\node_modules\\ws\\lib|utf-8-validate","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/work-unit-async-storage.external.js\"","webpack://@hijraah/web/external node-commonjs \"node:fs\"","webpack://@hijraah/web/external commonjs2 \"worker_threads\"","webpack://@hijraah/web/external commonjs2 \"zlib\"","webpack://@hijraah/web/external commonjs2 \"perf_hooks\"","webpack://@hijraah/web/external node-commonjs \"node:worker_threads\"","webpack://@hijraah/web/external node-commonjs \"node:path\"","webpack://@hijraah/web/external node-commonjs \"node:net\"","webpack://@hijraah/web/external commonjs2 \"buffer\"","webpack://@hijraah/web/external commonjs2 \"url\"","webpack://@hijraah/web/external commonjs2 \"child_process\"","webpack://@hijraah/web/external node-commonjs \"node:readline\"","webpack://@hijraah/web/external commonjs2 \"http\"","webpack://@hijraah/web/external commonjs2 \"tty\"","webpack://@hijraah/web/external commonjs2 \"async_hooks\"","webpack://@hijraah/web/external node-commonjs \"node:inspector\"","webpack://@hijraah/web/external commonjs2 \"net\"","webpack://@hijraah/web/external commonjs2 \"events\"","webpack://@hijraah/web/../../node_modules/.pnpm/require-in-the-middle@7.5.2/node_modules/require-in-the-middle/ sync","webpack://@hijraah/web/../../node_modules/.pnpm/@supabase+realtime-js@2.11.10_bufferutil@4.0.9/node_modules/@supabase/realtime-js/dist/main/ sync"],"sourcesContent":["module.exports = require(\"next/dist/server/app-render/after-task-async-storage.external.js\");","module.exports = require(\"module\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 8963;\nmodule.exports = webpackEmptyContext;","module.exports = require(\"next/dist/compiled/next-server/app-page.runtime.prod.js\");","module.exports = require(\"punycode\");","module.exports = require(\"process\");","module.exports = require(\"os\");","module.exports = require(\"stream\");","module.exports = require(\"util\");","module.exports = require(\"fs\");","module.exports = require(\"next/dist/server/app-render/work-async-storage.external.js\");","module.exports = require(\"node:child_process\");","module.exports = require(\"path\");","module.exports = require(\"tls\");","module.exports = require(\"diagnostics_channel\");","module.exports = require(\"node:http\");","module.exports = require(\"node:zlib\");","module.exports = require(\"node:tls\");","module.exports = require(\"node:https\");","module.exports = require(\"next/dist/compiled/next-server/app-route.runtime.prod.js\");","module.exports = require(\"node:os\");","module.exports = require(\"node:diagnostics_channel\");","module.exports = require(\"crypto\");","module.exports = require(\"https\");","import { NextRequest, NextResponse } from \"next/server\";\r\nimport { createSupabaseServerClient, authConfig } from \"@/lib/auth-config\";\r\nimport {\r\n  createGuestSession,\r\n  setGuestSessionCookies,\r\n  clearGuestSessionCookies,\r\n  convertGuestToRegular,\r\n  UserWithGuest,\r\n} from \"@/lib/auth/guest\";\r\n// Context7 - Observability: Request tracking\r\ninterface GuestAuthRequest {\r\n  action: \"create\" | \"convert\" | \"clear\";\r\n  email?: string;\r\n  password?: string;\r\n  fullName?: string;\r\n  guestUserId?: string;\r\n}\r\n\r\n// Context7 - Data validation\r\nfunction validateGuestAuthRequest(data: any): GuestAuthRequest {\r\n  const { action, email, password, fullName, guestUserId } = data;\r\n\r\n  if (!action || ![\"create\", \"convert\", \"clear\"].includes(action)) {\r\n    throw new Error(\"Invalid action. Must be 'create', 'convert', or 'clear'\");\r\n  }\r\n\r\n  if (action === \"convert\") {\r\n    if (!email || !password || !guestUserId) {\r\n      throw new Error(\r\n        \"Email, password, and guestUserId required for conversion\"\r\n      );\r\n    }\r\n\r\n    // Basic email validation\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      throw new Error(\"Invalid email format\");\r\n    }\r\n\r\n    // Basic password validation\r\n    if (password.length < 6) {\r\n      throw new Error(\"Password must be at least 6 characters\");\r\n    }\r\n  }\r\n\r\n  return { action, email, password, fullName, guestUserId };\r\n}\r\n\r\n/**\r\n * POST /api/auth/guest\r\n * Create guest session\r\n * Context7 - Provider Isolation: Dedicated guest auth endpoint\r\n */\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    // Context7 - Observability: Request metadata\r\n    const userAgent = request.headers.get(\"user-agent\") || \"\";\r\n    const forwardedFor = request.headers.get(\"x-forwarded-for\") || \"\";\r\n    const realIp = request.headers.get(\"x-real-ip\") || \"\";\r\n    const ipAddress = forwardedFor.split(\",\")[0] || realIp || \"unknown\";\r\n\r\n    // Check if guest authentication is enabled\r\n    if (!authConfig.guestSessionEnabled) {\r\n      return NextResponse.json(\r\n        { error: \"Guest authentication is disabled\" },\r\n        { status: 403 }\r\n      );\r\n    }\r\n\r\n    const body = await request.json();\r\n    const validatedRequest = validateGuestAuthRequest(body);\r\n\r\n    // Context7 - Observability: Log request\r\n    console.log(\"Guest auth request:\", {\r\n      action: validatedRequest.action,\r\n      ip: ipAddress,\r\n      userAgent: userAgent.substring(0, 100), // Truncate for logs\r\n    });\r\n\r\n    switch (validatedRequest.action) {\r\n      case \"create\": {\r\n        // Create new guest session\r\n        const guestUser = await createGuestSession({\r\n          userAgent,\r\n          ipAddress,\r\n        });\r\n\r\n        // Set session cookies\r\n        const response = NextResponse.json({\r\n          success: true,\r\n          user: {\r\n            id: guestUser.id,\r\n            email: guestUser.email,\r\n            fullName: guestUser.fullName,\r\n            isGuest: true,\r\n            sessionId: guestUser.guestSessionId,\r\n          },\r\n        });\r\n\r\n        // Set cookies on the response\r\n        const cookieStore = {\r\n          set: (name: string, value: string, options: any) => {\r\n            response.cookies.set(name, value, options);\r\n          },\r\n        };\r\n\r\n        setGuestSessionCookies(guestUser, cookieStore);\r\n\r\n        return response;\r\n      }\r\n\r\n      case \"convert\": {\r\n        if (\r\n          !validatedRequest.email ||\r\n          !validatedRequest.password ||\r\n          !validatedRequest.guestUserId\r\n        ) {\r\n          return NextResponse.json(\r\n            { error: \"Missing required fields for conversion\" },\r\n            { status: 400 }\r\n          );\r\n        }\r\n\r\n        // Convert guest to regular user\r\n        const regularUser = await convertGuestToRegular(\r\n          validatedRequest.guestUserId,\r\n          validatedRequest.email,\r\n          validatedRequest.password,\r\n          validatedRequest.fullName\r\n        );\r\n\r\n        // Clear guest session cookies\r\n        const response = NextResponse.json({\r\n          success: true,\r\n          user: {\r\n            id: regularUser.id,\r\n            email: regularUser.email,\r\n            fullName: regularUser.fullName,\r\n            isGuest: false,\r\n          },\r\n          message: \"Successfully converted to regular account\",\r\n        });\r\n\r\n        const cookieStore = {\r\n          set: (name: string, value: string, options: any) => {\r\n            response.cookies.set(name, value, options);\r\n          },\r\n        };\r\n\r\n        clearGuestSessionCookies(cookieStore);\r\n\r\n        return response;\r\n      }\r\n\r\n      case \"clear\": {\r\n        // Clear guest session\r\n        const response = NextResponse.json({\r\n          success: true,\r\n          message: \"Guest session cleared\",\r\n        });\r\n\r\n        const cookieStore = {\r\n          set: (name: string, value: string, options: any) => {\r\n            response.cookies.set(name, value, options);\r\n          },\r\n        };\r\n\r\n        clearGuestSessionCookies(cookieStore);\r\n\r\n        return response;\r\n      }\r\n\r\n      default:\r\n        return NextResponse.json({ error: \"Invalid action\" }, { status: 400 });\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Guest auth error:\", error);\r\n\r\n    return NextResponse.json(\r\n      {\r\n        error:\r\n          error instanceof Error\r\n            ? error.message\r\n            : \"Guest authentication failed\",\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * GET /api/auth/guest\r\n * Check guest session status\r\n * Context7 - Observability: Session status endpoint\r\n */\r\nexport async function GET(request: NextRequest) {\r\n  try {\r\n    // Check if guest authentication is enabled\r\n    if (!authConfig.guestSessionEnabled) {\r\n      return NextResponse.json(\r\n        { isGuest: false, isAuthenticated: false },\r\n        { status: 200 }\r\n      );\r\n    }\r\n\r\n    // Create a simple cookie store interface\r\n    const cookieStore = {\r\n      get: (name: string) => request.cookies.get(name),\r\n    };\r\n\r\n    // Check for guest session\r\n    const isGuest = cookieStore.get(\"is_guest_user\")?.value === \"true\";\r\n    const guestData = cookieStore.get(\"guest_data\")?.value;\r\n\r\n    if (isGuest && guestData) {\r\n      try {\r\n        const parsedGuestData = JSON.parse(guestData);\r\n        return NextResponse.json({\r\n          isGuest: true,\r\n          isAuthenticated: true,\r\n          user: {\r\n            id: parsedGuestData.id,\r\n            email: parsedGuestData.email,\r\n            fullName: parsedGuestData.fullName,\r\n            sessionId: parsedGuestData.sessionId,\r\n          },\r\n        });\r\n      } catch (parseError) {\r\n        console.error(\"Failed to parse guest data:\", parseError);\r\n      }\r\n    }\r\n\r\n    // Check regular Supabase authentication\r\n    const supabase = createSupabaseServerClient(cookieStore);\r\n    const {\r\n      data: { user },\r\n      error,\r\n    } = await supabase.auth.getUser();\r\n\r\n    if (!error && user) {\r\n      return NextResponse.json({\r\n        isGuest: false,\r\n        isAuthenticated: true,\r\n        user: {\r\n          id: user.id,\r\n          email: user.email,\r\n          fullName: user.user_metadata?.full_name || \"User\",\r\n        },\r\n      });\r\n    }\r\n\r\n    // No authentication found\r\n    return NextResponse.json({\r\n      isGuest: false,\r\n      isAuthenticated: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Guest auth status check error:\", error);\r\n\r\n    return NextResponse.json(\r\n      {\r\n        error: \"Failed to check authentication status\",\r\n        isGuest: false,\r\n        isAuthenticated: false,\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * OPTIONS /api/auth/guest\r\n * CORS preflight\r\n * Context7 - Provider Isolation: CORS handling\r\n */\r\nexport async function OPTIONS() {\r\n  return new NextResponse(null, {\r\n    status: 200,\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS\",\r\n      \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\r\n    },\r\n  });\r\n}\r\n","import * as origModule from 'next/dist/server/app-render/work-unit-async-storage.external.js';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport {} from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nimport * as Sentry from '@sentry/nextjs';\n\n// @ts-expect-error Because we cannot be sure if the RequestAsyncStorage module exists (it is not part of the Next.js public\n// API) we use a shim if it doesn't exist. The logic for this is in the wrapping loader.\n\nconst asyncStorageModule = { ...origModule } ;\n\nconst requestAsyncStorage =\n  'workUnitAsyncStorage' in asyncStorageModule\n    ? asyncStorageModule.workUnitAsyncStorage\n    : 'requestAsyncStorage' in asyncStorageModule\n      ? asyncStorageModule.requestAsyncStorage\n      : undefined;\n\nfunction wrapHandler(handler, method) {\n  // Running the instrumentation code during the build phase will mark any function as \"dynamic\" because we're accessing\n  // the Request object. We do not want to turn handlers dynamic so we skip instrumentation in the build phase.\n  if (process.env.NEXT_PHASE === 'phase-production-build') {\n    return handler;\n  }\n\n  if (typeof handler !== 'function') {\n    return handler;\n  }\n\n  return new Proxy(handler, {\n    apply: (originalFunction, thisArg, args) => {\n      let headers = undefined;\n\n      // We try-catch here just in case the API around `requestAsyncStorage` changes unexpectedly since it is not public API\n      try {\n        const requestAsyncStore = requestAsyncStorage?.getStore() ;\n        headers = requestAsyncStore?.headers;\n      } catch (e) {\n        /** empty */\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return Sentry.wrapRouteHandlerWithSentry(originalFunction , {\n        method,\n        parameterizedRoute: '/api/auth/guest',\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst GET = wrapHandler(serverComponentModule.GET , 'GET');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst POST = wrapHandler(serverComponentModule.POST , 'POST');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PUT = wrapHandler(serverComponentModule.PUT , 'PUT');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PATCH = wrapHandler(serverComponentModule.PATCH , 'PATCH');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst DELETE = wrapHandler(serverComponentModule.DELETE , 'DELETE');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst HEAD = wrapHandler(serverComponentModule.HEAD , 'HEAD');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst OPTIONS = wrapHandler(serverComponentModule.OPTIONS , 'OPTIONS');\n\nexport { DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT };\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\api\\\\auth\\\\guest\\\\route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/auth/guest/route\",\n        pathname: \"/api/auth/guest\",\n        filename: \"route\",\n        bundlePath: \"app/api/auth/guest/route\"\n    },\n    resolvedPagePath: \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\api\\\\auth\\\\guest\\\\route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","module.exports = require(\"node:stream\");","module.exports = require(\"node:util\");","/* (ignored) */","module.exports = require(\"next/dist/server/app-render/work-unit-async-storage.external.js\");","module.exports = require(\"node:fs\");","module.exports = require(\"worker_threads\");","module.exports = require(\"zlib\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"node:worker_threads\");","module.exports = require(\"node:path\");","module.exports = require(\"node:net\");","module.exports = require(\"buffer\");","module.exports = require(\"url\");","module.exports = require(\"child_process\");","module.exports = require(\"node:readline\");","module.exports = require(\"http\");","module.exports = require(\"tty\");","module.exports = require(\"async_hooks\");","module.exports = require(\"node:inspector\");","module.exports = require(\"net\");","module.exports = require(\"events\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 96708;\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 97108;\nmodule.exports = webpackEmptyContext;"],"names":["POST","request","userAgent","headers","get","forwardedFor","realIp","ipAddress","split","authConfig","guestSessionEnabled","NextResponse","json","error","status","body","validatedRequest","validateGuestAuthRequest","action","email","password","fullName","guestUserId","data","includes","Error","emailRegex","test","length","guestUser","createGuestSession","response","success","user","id","isGuest","sessionId","guestSessionId","setGuestSessionCookies","set","name","cookieStore","value","options","cookies","regularUser","convertGuestToRegular","message","clearGuestSessionCookies","console","GET","isAuthenticated","guestData","parsedGuestData","JSON","parse","parseError","supabase","createSupabaseServerClient","auth","getUser","user_metadata","full_name","OPTIONS","serverComponentModule.GET","serverComponentModule.PUT","serverComponentModule.PATCH","serverComponentModule.DELETE","serverComponentModule.HEAD","serverComponentModule.OPTIONS"],"sourceRoot":""}