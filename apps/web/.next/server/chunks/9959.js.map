{"version":3,"file":"9959.js","mappings":"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","sources":["webpack://@hijraah/web/../../packages/database/src/schema.ts"],"sourcesContent":["import {\r\n  pgTable,\r\n  pgSchema,\r\n  uuid,\r\n  text,\r\n  timestamp,\r\n  jsonb,\r\n  boolean,\r\n  integer,\r\n  serial,\r\n  varchar,\r\n  unique,\r\n  index,\r\n  primaryKey,\r\n  pgEnum,\r\n  numeric,\r\n  AnyPgColumn,\r\n  foreignKey,\r\n} from \"drizzle-orm/pg-core\";\r\nimport { relations, sql } from \"drizzle-orm\";\r\nimport { createInsertSchema, createSelectSchema } from \"drizzle-zod\";\r\nimport { z } from \"zod\";\r\n\r\n// ===== SCHEMA ORGANIZATION (Context7 Best Practice) =====\r\nexport const publicSchema = pgSchema(\"public\");\r\nexport const authSchema = pgSchema(\"auth\");\r\nexport const apiSchema = pgSchema(\"api\");\r\n\r\n// ===== ENUMS =====\r\nexport const visibilityEnum = pgEnum(\"visibility\", [\r\n  \"private\",\r\n  \"public\",\r\n  \"shared\",\r\n]);\r\nexport const roleEnum = pgEnum(\"role\", [\"system\", \"user\", \"assistant\", \"tool\"]);\r\nexport const voteTypeEnum = pgEnum(\"vote_type\", [\"up\", \"down\"]);\r\nexport const statusEnum = pgEnum(\"status\", [\r\n  \"pending\",\r\n  \"processing\",\r\n  \"completed\",\r\n  \"failed\",\r\n  \"cancelled\",\r\n]);\r\n\r\nexport const artifactTypeEnum = pgEnum(\"artifact_type\", [\r\n  \"code\",\r\n  \"text\",\r\n  \"image\",\r\n  \"sheet\",\r\n  \"chart\",\r\n  \"diagram\",\r\n]);\r\n\r\nexport const dataTypeEnum = pgEnum(\"data_type\", [\r\n  \"chat_messages\",\r\n  \"documents\",\r\n  \"embeddings\",\r\n  \"artifacts\",\r\n  \"user_data\",\r\n  \"search_history\",\r\n]);\r\n\r\n// ===== AI-CHATBOT COMPATIBILITY TABLES =====\r\n\r\n// User table for ai-chatbot compatibility\r\nexport const aiChatbotUser = pgTable(\"User\", {\r\n  id: uuid(\"id\").primaryKey().defaultRandom(),\r\n  email: varchar(\"email\", { length: 64 }).notNull().unique(),\r\n  password: varchar(\"password\", { length: 64 }), // For guest users\r\n});\r\n\r\nexport type AIChatbotUser = typeof aiChatbotUser.$inferSelect;\r\n\r\n// Chat table for ai-chatbot compatibility\r\nexport const aiChatbotChat = pgTable(\r\n  \"Chat\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    createdAt: timestamp(\"createdAt\").notNull().defaultNow(),\r\n    title: text(\"title\").notNull(),\r\n    userId: uuid(\"userId\")\r\n      .notNull()\r\n      .references(() => aiChatbotUser.id, { onDelete: \"cascade\" }),\r\n    visibility: varchar(\"visibility\", {\r\n      enum: [\"public\", \"private\"],\r\n    })\r\n      .notNull()\r\n      .default(\"private\"),\r\n  },\r\n  (table) => ({\r\n    userIdIndex: index(\"idx_chat_user_id\").on(table.userId),\r\n    visibilityIndex: index(\"idx_chat_visibility\").on(table.visibility),\r\n  })\r\n);\r\n\r\nexport type AIChatbotChat = typeof aiChatbotChat.$inferSelect;\r\n\r\n// Legacy Message table (deprecated in ai-chatbot)\r\nexport const aiChatbotMessage = pgTable(\r\n  \"Message\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    chatId: uuid(\"chatId\")\r\n      .notNull()\r\n      .references(() => aiChatbotChat.id, { onDelete: \"cascade\" }),\r\n    role: varchar(\"role\").notNull(),\r\n    content: jsonb(\"content\").notNull(),\r\n    createdAt: timestamp(\"createdAt\").notNull().defaultNow(),\r\n  },\r\n  (table) => ({\r\n    chatIdIndex: index(\"idx_message_chat_id\").on(table.chatId),\r\n    roleIndex: index(\"idx_message_role\").on(table.role),\r\n  })\r\n);\r\n\r\nexport type AIChatbotMessage = typeof aiChatbotMessage.$inferSelect;\r\n\r\n// Modern Message_v2 table\r\nexport const aiChatbotMessageV2 = pgTable(\r\n  \"Message_v2\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    chatId: uuid(\"chatId\")\r\n      .notNull()\r\n      .references(() => aiChatbotChat.id, { onDelete: \"cascade\" }),\r\n    role: varchar(\"role\").notNull(),\r\n    parts: jsonb(\"parts\").notNull().default([]),\r\n    attachments: jsonb(\"attachments\").notNull().default([]),\r\n    createdAt: timestamp(\"createdAt\").notNull().defaultNow(),\r\n  },\r\n  (table) => ({\r\n    chatIdIndex: index(\"idx_message_v2_chat_id\").on(table.chatId),\r\n    roleIndex: index(\"idx_message_v2_role\").on(table.role),\r\n  })\r\n);\r\n\r\nexport type AIChatbotMessageV2 = typeof aiChatbotMessageV2.$inferSelect;\r\n\r\n// Legacy Vote table\r\nexport const aiChatbotVote = pgTable(\r\n  \"Vote\",\r\n  {\r\n    chatId: uuid(\"chatId\")\r\n      .notNull()\r\n      .references(() => aiChatbotChat.id, { onDelete: \"cascade\" }),\r\n    messageId: uuid(\"messageId\")\r\n      .notNull()\r\n      .references(() => aiChatbotMessage.id, { onDelete: \"cascade\" }),\r\n    isUpvoted: boolean(\"isUpvoted\").notNull(),\r\n  },\r\n  (table) => ({\r\n    pk: primaryKey({ columns: [table.chatId, table.messageId] }),\r\n    chatIdIndex: index(\"idx_vote_chat_id\").on(table.chatId),\r\n    messageIdIndex: index(\"idx_vote_message_id\").on(table.messageId),\r\n  })\r\n);\r\n\r\nexport type AIChatbotVote = typeof aiChatbotVote.$inferSelect;\r\n\r\n// Modern Vote_v2 table\r\nexport const aiChatbotVoteV2 = pgTable(\r\n  \"Vote_v2\",\r\n  {\r\n    chatId: uuid(\"chatId\")\r\n      .notNull()\r\n      .references(() => aiChatbotChat.id, { onDelete: \"cascade\" }),\r\n    messageId: uuid(\"messageId\")\r\n      .notNull()\r\n      .references(() => aiChatbotMessageV2.id, { onDelete: \"cascade\" }),\r\n    isUpvoted: boolean(\"isUpvoted\").notNull(),\r\n  },\r\n  (table) => ({\r\n    pk: primaryKey({ columns: [table.chatId, table.messageId] }),\r\n    chatIdIndex: index(\"idx_vote_v2_chat_id\").on(table.chatId),\r\n    messageIdIndex: index(\"idx_vote_v2_message_id\").on(table.messageId),\r\n  })\r\n);\r\n\r\nexport type AIChatbotVoteV2 = typeof aiChatbotVoteV2.$inferSelect;\r\n\r\n// Document table for artifacts (with compound primary key)\r\nexport const aiChatbotDocument = pgTable(\r\n  \"Document\",\r\n  {\r\n    id: uuid(\"id\").notNull().defaultRandom(),\r\n    createdAt: timestamp(\"createdAt\").notNull().defaultNow(),\r\n    title: text(\"title\").notNull(),\r\n    content: text(\"content\"),\r\n    kind: varchar(\"kind\", {\r\n      enum: [\"text\", \"code\", \"image\", \"sheet\"],\r\n    })\r\n      .notNull()\r\n      .default(\"text\"),\r\n    userId: uuid(\"userId\")\r\n      .notNull()\r\n      .references(() => aiChatbotUser.id, { onDelete: \"cascade\" }),\r\n  },\r\n  (table) => ({\r\n    pk: primaryKey({ columns: [table.id, table.createdAt] }),\r\n    userIdIndex: index(\"idx_document_user_id\").on(table.userId),\r\n    kindIndex: index(\"idx_document_kind\").on(table.kind),\r\n  })\r\n);\r\n\r\nexport type AIChatbotDocument = typeof aiChatbotDocument.$inferSelect;\r\n\r\n// Suggestion table for document collaboration\r\nexport const aiChatbotSuggestion = pgTable(\r\n  \"Suggestion\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    documentId: uuid(\"documentId\").notNull(),\r\n    documentCreatedAt: timestamp(\"documentCreatedAt\").notNull(),\r\n    originalText: text(\"originalText\").notNull(),\r\n    suggestedText: text(\"suggestedText\").notNull(),\r\n    description: text(\"description\"),\r\n    isResolved: boolean(\"isResolved\").notNull().default(false),\r\n    userId: uuid(\"userId\")\r\n      .notNull()\r\n      .references(() => aiChatbotUser.id, { onDelete: \"cascade\" }),\r\n    createdAt: timestamp(\"createdAt\").notNull().defaultNow(),\r\n  },\r\n  (table) => ({\r\n    documentRef: foreignKey({\r\n      columns: [table.documentId, table.documentCreatedAt],\r\n      foreignColumns: [aiChatbotDocument.id, aiChatbotDocument.createdAt],\r\n    }),\r\n    userIdIndex: index(\"idx_suggestion_user_id\").on(table.userId),\r\n    documentIndex: index(\"idx_suggestion_document\").on(\r\n      table.documentId,\r\n      table.documentCreatedAt\r\n    ),\r\n  })\r\n);\r\n\r\nexport type AIChatbotSuggestion = typeof aiChatbotSuggestion.$inferSelect;\r\n\r\n// Stream table for resumable streams\r\nexport const aiChatbotStream = pgTable(\r\n  \"Stream\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    chatId: uuid(\"chatId\").notNull(),\r\n    createdAt: timestamp(\"createdAt\").notNull().defaultNow(),\r\n  },\r\n  (table) => ({\r\n    chatRef: foreignKey({\r\n      columns: [table.chatId],\r\n      foreignColumns: [aiChatbotChat.id],\r\n    }),\r\n    chatIdIndex: index(\"idx_stream_chat_id\").on(table.chatId),\r\n  })\r\n);\r\n\r\nexport type AIChatbotStream = typeof aiChatbotStream.$inferSelect;\r\n\r\n// ===== USERS & AUTH TABLES =====\r\n// Note: auth.users table is managed by Supabase Auth, we reference it via UUID\r\n\r\nexport const profiles = pgTable(\r\n  \"profiles\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    userId: uuid(\"user_id\").notNull().unique(),\r\n    email: text(\"email\").unique(),\r\n    fullName: text(\"full_name\"),\r\n    avatarUrl: text(\"avatar_url\"),\r\n    locale: varchar(\"locale\", { length: 10 }).default(\"en\"),\r\n    timezone: varchar(\"timezone\", { length: 50 }).default(\"UTC\"),\r\n    preferences: jsonb(\"preferences\")\r\n      .$type<{\r\n        theme?: \"light\" | \"dark\" | \"system\";\r\n        notifications?: boolean;\r\n        aiModel?: string;\r\n        language?: string;\r\n      }>()\r\n      .default({}),\r\n    metadata: jsonb(\"metadata\").default({}),\r\n    createdAt: timestamp(\"created_at\").defaultNow().notNull(),\r\n    updatedAt: timestamp(\"updated_at\")\r\n      .defaultNow()\r\n      .notNull()\r\n      .$onUpdate(() => new Date()),\r\n  },\r\n  (table) => ({\r\n    userIdIndex: index(\"profiles_user_id_idx\").on(table.userId),\r\n    emailIndex: index(\"profiles_email_idx\").on(table.email),\r\n  })\r\n);\r\n\r\n// ===== WEB INDEXES (FIRESTARTER) =====\r\nexport const webIndexes = pgTable(\r\n  \"web_indexes\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    userId: uuid(\"user_id\").notNull(),\r\n    url: text(\"url\").notNull(),\r\n    namespace: varchar(\"namespace\", { length: 255 }).notNull(),\r\n    title: text(\"title\"),\r\n    description: text(\"description\"),\r\n    pagesCrawled: integer(\"pages_crawled\").default(0),\r\n    totalPages: integer(\"total_pages\"),\r\n    lastCrawlDuration: integer(\"last_crawl_duration\"), // in seconds\r\n    estimatedCost: numeric(\"estimated_cost\", {\r\n      precision: 10,\r\n      scale: 4,\r\n    }).default(\"0\"),\r\n    metadata: jsonb(\"metadata\")\r\n      .$type<{\r\n        crawlDepth?: number;\r\n        includePatterns?: string[];\r\n        excludePatterns?: string[];\r\n        headers?: Record<string, string>;\r\n      }>()\r\n      .default({}),\r\n    crawlConfig: jsonb(\"crawl_config\")\r\n      .$type<{\r\n        maxPages?: number;\r\n        respectRobotsTxt?: boolean;\r\n        delay?: number;\r\n        concurrent?: number;\r\n      }>()\r\n      .default({}),\r\n    isActive: boolean(\"is_active\").default(true),\r\n    isPublic: boolean(\"is_public\").default(false),\r\n    createdAt: timestamp(\"created_at\").defaultNow().notNull(),\r\n    updatedAt: timestamp(\"updated_at\")\r\n      .defaultNow()\r\n      .notNull()\r\n      .$onUpdate(() => new Date()),\r\n    lastCrawledAt: timestamp(\"last_crawled_at\"),\r\n  },\r\n  (table) => ({\r\n    userNamespaceUnique: unique().on(table.userId, table.namespace),\r\n    urlIndex: index(\"web_indexes_url_idx\").on(table.url),\r\n    userIdIndex: index(\"web_indexes_user_id_idx\").on(table.userId),\r\n    isActiveIndex: index(\"web_indexes_is_active_idx\").on(table.isActive),\r\n    namespaceTrgmIndex: index(\"web_indexes_namespace_trgm_idx\").using(\r\n      \"gin\",\r\n      sql`namespace gin_trgm_ops`\r\n    ),\r\n  })\r\n);\r\n\r\nexport const crawlJobs = pgTable(\r\n  \"crawl_jobs\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    webIndexId: uuid(\"web_index_id\")\r\n      .notNull()\r\n      .references(() => webIndexes.id, { onDelete: \"cascade\" }),\r\n    status: statusEnum(\"status\").default(\"pending\").notNull(),\r\n    firecrawlJobId: text(\"firecrawl_job_id\"),\r\n    startedAt: timestamp(\"started_at\"),\r\n    completedAt: timestamp(\"completed_at\"),\r\n    errorMessage: text(\"error_message\"),\r\n    pagesProcessed: integer(\"pages_processed\").default(0),\r\n    metadata: jsonb(\"metadata\").default({}),\r\n    createdAt: timestamp(\"created_at\").defaultNow().notNull(),\r\n  },\r\n  (table) => ({\r\n    webIndexIdIndex: index(\"crawl_jobs_web_index_id_idx\").on(table.webIndexId),\r\n    statusIndex: index(\"crawl_jobs_status_idx\").on(table.status),\r\n  })\r\n);\r\n\r\n// ===== CHAT SYSTEM (UNIFIED AI-CHATBOT + EXISTING) =====\r\nexport const chatSessions = pgTable(\r\n  \"chat_sessions\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    userId: uuid(\"user_id\").notNull(),\r\n    title: text(\"title\"),\r\n    visibility: visibilityEnum(\"visibility\").default(\"private\").notNull(),\r\n    model: varchar(\"model\", { length: 50 }).default(\"gpt-4o\"),\r\n    systemPrompt: text(\"system_prompt\"),\r\n    webIndexId: uuid(\"web_index_id\").references(() => webIndexes.id, {\r\n      onDelete: \"set null\",\r\n    }),\r\n    metadata: jsonb(\"metadata\").default({}),\r\n    createdAt: timestamp(\"created_at\").defaultNow().notNull(),\r\n    updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\r\n  },\r\n  (table) => ({\r\n    userIdIndex: index(\"chat_sessions_user_id_idx\").on(table.userId),\r\n    webIndexIdIndex: index(\"chat_sessions_web_index_id_idx\").on(\r\n      table.webIndexId\r\n    ),\r\n  })\r\n);\r\n\r\nexport const chatMessages = pgTable(\r\n  \"chat_messages\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    chatId: uuid(\"chat_id\")\r\n      .notNull()\r\n      .references(() => chatSessions.id, { onDelete: \"cascade\" }),\r\n    role: roleEnum(\"role\").notNull(),\r\n    content: text(\"content\").notNull(),\r\n    toolCalls: jsonb(\"tool_calls\").default([]),\r\n    attachments: jsonb(\"attachments\").default([]),\r\n    artifacts: jsonb(\"artifacts\").default([]),\r\n    metadata: jsonb(\"metadata\").default({}),\r\n    createdAt: timestamp(\"created_at\").defaultNow().notNull(),\r\n  },\r\n  (table) => ({\r\n    chatIdIndex: index(\"chat_messages_chat_id_idx\").on(table.chatId),\r\n    roleIndex: index(\"chat_messages_role_idx\").on(table.role),\r\n  })\r\n);\r\n\r\nexport const chatMessageVotes = pgTable(\r\n  \"chat_message_votes\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    messageId: uuid(\"message_id\")\r\n      .notNull()\r\n      .references(() => chatMessages.id, { onDelete: \"cascade\" }),\r\n    userId: uuid(\"user_id\").notNull(),\r\n    voteType: voteTypeEnum(\"vote_type\").notNull(),\r\n    feedback: text(\"feedback\"),\r\n    createdAt: timestamp(\"created_at\").defaultNow().notNull(),\r\n  },\r\n  (table) => ({\r\n    messageUserUnique: unique().on(table.messageId, table.userId),\r\n    messageIdIndex: index(\"chat_message_votes_message_id_idx\").on(\r\n      table.messageId\r\n    ),\r\n  })\r\n);\r\n\r\n// ===== ARTIFACTS (EXTENDED FOR AI-CHATBOT) =====\r\nexport const artifacts = pgTable(\r\n  \"artifacts\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    messageId: uuid(\"message_id\").references(() => chatMessages.id, {\r\n      onDelete: \"cascade\",\r\n    }),\r\n    userId: uuid(\"user_id\").notNull(),\r\n    title: text(\"title\").notNull(),\r\n    type: varchar(\"type\", { length: 50 }).notNull(), // 'code', 'text', 'image', 'sheet'\r\n    language: varchar(\"language\", { length: 50 }), // for code artifacts\r\n    content: text(\"content\").notNull(),\r\n    metadata: jsonb(\"metadata\").default({}),\r\n    isPublic: boolean(\"is_public\").default(false),\r\n    version: integer(\"version\").default(1),\r\n    createdAt: timestamp(\"created_at\").defaultNow().notNull(),\r\n    updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\r\n  },\r\n  (table) => ({\r\n    userIdIndex: index(\"artifacts_user_id_idx\").on(table.userId),\r\n    typeIndex: index(\"artifacts_type_idx\").on(table.type),\r\n    messageIdIndex: index(\"artifacts_message_id_idx\").on(table.messageId),\r\n  })\r\n);\r\n\r\n// ===== SUGGESTIONS =====\r\nexport const suggestions = pgTable(\r\n  \"suggestions\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    chatId: uuid(\"chat_id\").references(() => chatSessions.id, {\r\n      onDelete: \"cascade\",\r\n    }),\r\n    messageId: uuid(\"message_id\").references(() => chatMessages.id, {\r\n      onDelete: \"cascade\",\r\n    }),\r\n    content: text(\"content\").notNull(),\r\n    isUsed: boolean(\"is_used\").default(false),\r\n    metadata: jsonb(\"metadata\").default({}),\r\n    createdAt: timestamp(\"created_at\").defaultNow().notNull(),\r\n  },\r\n  (table) => ({\r\n    chatIdIndex: index(\"suggestions_chat_id_idx\").on(table.chatId),\r\n    messageIdIndex: index(\"suggestions_message_id_idx\").on(table.messageId),\r\n  })\r\n);\r\n\r\n// ===== STREAMS =====\r\nexport const streams = pgTable(\r\n  \"streams\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    chatId: uuid(\"chat_id\")\r\n      .notNull()\r\n      .references(() => chatSessions.id, { onDelete: \"cascade\" }),\r\n    content: text(\"content\"),\r\n    isFinished: boolean(\"is_finished\").default(false),\r\n    metadata: jsonb(\"metadata\").default({}),\r\n    createdAt: timestamp(\"created_at\").defaultNow().notNull(),\r\n    updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\r\n  },\r\n  (table) => ({\r\n    chatIdIndex: index(\"streams_chat_id_idx\").on(table.chatId),\r\n  })\r\n);\r\n\r\n// ===== UPSTASH CACHE METADATA =====\r\nexport const upstashCacheMeta = pgTable(\r\n  \"upstash_cache_meta\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    cacheKey: text(\"cache_key\").notNull().unique(),\r\n    namespace: varchar(\"namespace\", { length: 100 }).notNull(),\r\n    size: integer(\"size\"),\r\n    ttl: integer(\"ttl\"), // time to live in seconds\r\n    hitCount: integer(\"hit_count\").default(0),\r\n    lastAccessed: timestamp(\"last_accessed\").defaultNow(),\r\n    metadata: jsonb(\"metadata\").default({}),\r\n    createdAt: timestamp(\"created_at\").defaultNow().notNull(),\r\n  },\r\n  (table) => ({\r\n    cacheKeyIndex: index(\"upstash_cache_meta_cache_key_idx\").on(table.cacheKey),\r\n    namespaceIndex: index(\"upstash_cache_meta_namespace_idx\").on(\r\n      table.namespace\r\n    ),\r\n  })\r\n);\r\n\r\n// ===== DOCUMENT STORAGE =====\r\nexport const documents = pgTable(\r\n  \"documents\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    userId: uuid(\"user_id\").notNull(),\r\n    webIndexId: uuid(\"web_index_id\").references(() => webIndexes.id, {\r\n      onDelete: \"cascade\",\r\n    }),\r\n    title: text(\"title\").notNull(),\r\n    content: text(\"content\").notNull(),\r\n    contentType: varchar(\"content_type\", { length: 100 }).default(\"text/plain\"),\r\n    fileSize: integer(\"file_size\"),\r\n    checksum: varchar(\"checksum\", { length: 64 }),\r\n    source: text(\"source\"), // URL or file path\r\n    metadata: jsonb(\"metadata\").default({}),\r\n    isProcessed: boolean(\"is_processed\").default(false),\r\n    vectorId: text(\"vector_id\"), // Reference to vector database\r\n    createdAt: timestamp(\"created_at\").defaultNow().notNull(),\r\n    updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\r\n  },\r\n  (table) => ({\r\n    userIdIndex: index(\"documents_user_id_idx\").on(table.userId),\r\n    webIndexIdIndex: index(\"documents_web_index_id_idx\").on(table.webIndexId),\r\n    sourceIndex: index(\"documents_source_idx\").on(table.source),\r\n    checksumIndex: index(\"documents_checksum_idx\").on(table.checksum),\r\n  })\r\n);\r\n\r\n// ===== EMBEDDINGS =====\r\nexport const embeddings = pgTable(\r\n  \"embeddings\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    documentId: uuid(\"document_id\").references(() => documents.id, {\r\n      onDelete: \"cascade\",\r\n    }),\r\n    content: text(\"content\").notNull(),\r\n    embedding: text(\"embedding\"), // JSON string of vector\r\n    chunkIndex: integer(\"chunk_index\").default(0),\r\n    tokenCount: integer(\"token_count\"),\r\n    model: varchar(\"model\", { length: 50 }).default(\"text-embedding-3-small\"),\r\n    metadata: jsonb(\"metadata\").default({}),\r\n    createdAt: timestamp(\"created_at\").defaultNow().notNull(),\r\n  },\r\n  (table) => ({\r\n    documentIdIndex: index(\"embeddings_document_id_idx\").on(table.documentId),\r\n    modelIndex: index(\"embeddings_model_idx\").on(table.model),\r\n  })\r\n);\r\n\r\n// ===== KNOWLEDGE GRAPH =====\r\nexport const entities = pgTable(\r\n  \"entities\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    name: text(\"name\").notNull(),\r\n    type: varchar(\"type\", { length: 50 }).notNull(),\r\n    description: text(\"description\"),\r\n    properties: jsonb(\"properties\").default({}),\r\n    documentIds: jsonb(\"document_ids\").default([]), // Array of document IDs\r\n    confidence: integer(\"confidence\").default(0), // 0-100\r\n    createdAt: timestamp(\"created_at\").defaultNow().notNull(),\r\n    updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\r\n  },\r\n  (table) => ({\r\n    nameIndex: index(\"entities_name_idx\").on(table.name),\r\n    typeIndex: index(\"entities_type_idx\").on(table.type),\r\n  })\r\n);\r\n\r\nexport const relationships = pgTable(\r\n  \"relationships\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    sourceId: uuid(\"source_id\")\r\n      .notNull()\r\n      .references(() => entities.id, { onDelete: \"cascade\" }),\r\n    targetId: uuid(\"target_id\")\r\n      .notNull()\r\n      .references(() => entities.id, { onDelete: \"cascade\" }),\r\n    type: varchar(\"type\", { length: 50 }).notNull(),\r\n    properties: jsonb(\"properties\").default({}),\r\n    strength: integer(\"strength\").default(0), // 0-100\r\n    createdAt: timestamp(\"created_at\").defaultNow().notNull(),\r\n  },\r\n  (table) => ({\r\n    sourceIdIndex: index(\"relationships_source_id_idx\").on(table.sourceId),\r\n    targetIdIndex: index(\"relationships_target_id_idx\").on(table.targetId),\r\n    typeIndex: index(\"relationships_type_idx\").on(table.type),\r\n  })\r\n);\r\n\r\n// ===== PRIVACY & GDPR COMPLIANCE =====\r\nexport const dataRetentionPolicies = pgTable(\r\n  \"data_retention_policies\",\r\n  {\r\n    id: uuid(\"id\").primaryKey().defaultRandom(),\r\n    userId: uuid(\"user_id\").notNull(),\r\n    dataType: varchar(\"data_type\", { length: 50 }).notNull(),\r\n    retentionDays: integer(\"retention_days\").default(90),\r\n    autoDelete: boolean(\"auto_delete\").default(true),\r\n    lastCleanup: timestamp(\"last_cleanup\"),\r\n    createdAt: timestamp(\"created_at\").defaultNow().notNull(),\r\n    updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\r\n  },\r\n  (table) => ({\r\n    userIdIndex: index(\"data_retention_policies_user_id_idx\").on(table.userId),\r\n    dataTypeIndex: index(\"data_retention_policies_data_type_idx\").on(\r\n      table.dataType\r\n    ),\r\n  })\r\n);\r\n\r\n// ===== AI-CHATBOT RELATIONS =====\r\nexport const aiChatbotUserRelations = relations(aiChatbotUser, ({ many }) => ({\r\n  chats: many(aiChatbotChat),\r\n  documents: many(aiChatbotDocument),\r\n  suggestions: many(aiChatbotSuggestion),\r\n}));\r\n\r\nexport const aiChatbotChatRelations = relations(\r\n  aiChatbotChat,\r\n  ({ one, many }) => ({\r\n    user: one(aiChatbotUser, {\r\n      fields: [aiChatbotChat.userId],\r\n      references: [aiChatbotUser.id],\r\n    }),\r\n    messages: many(aiChatbotMessage),\r\n    messagesV2: many(aiChatbotMessageV2),\r\n    votes: many(aiChatbotVote),\r\n    votesV2: many(aiChatbotVoteV2),\r\n    streams: many(aiChatbotStream),\r\n  })\r\n);\r\n\r\nexport const aiChatbotMessageRelations = relations(\r\n  aiChatbotMessage,\r\n  ({ one, many }) => ({\r\n    chat: one(aiChatbotChat, {\r\n      fields: [aiChatbotMessage.chatId],\r\n      references: [aiChatbotChat.id],\r\n    }),\r\n    votes: many(aiChatbotVote),\r\n  })\r\n);\r\n\r\nexport const aiChatbotMessageV2Relations = relations(\r\n  aiChatbotMessageV2,\r\n  ({ one, many }) => ({\r\n    chat: one(aiChatbotChat, {\r\n      fields: [aiChatbotMessageV2.chatId],\r\n      references: [aiChatbotChat.id],\r\n    }),\r\n    votes: many(aiChatbotVoteV2),\r\n  })\r\n);\r\n\r\nexport const aiChatbotDocumentRelations = relations(\r\n  aiChatbotDocument,\r\n  ({ one, many }) => ({\r\n    user: one(aiChatbotUser, {\r\n      fields: [aiChatbotDocument.userId],\r\n      references: [aiChatbotUser.id],\r\n    }),\r\n    suggestions: many(aiChatbotSuggestion),\r\n  })\r\n);\r\n\r\nexport const aiChatbotSuggestionRelations = relations(\r\n  aiChatbotSuggestion,\r\n  ({ one }) => ({\r\n    user: one(aiChatbotUser, {\r\n      fields: [aiChatbotSuggestion.userId],\r\n      references: [aiChatbotUser.id],\r\n    }),\r\n    document: one(aiChatbotDocument, {\r\n      fields: [\r\n        aiChatbotSuggestion.documentId,\r\n        aiChatbotSuggestion.documentCreatedAt,\r\n      ],\r\n      references: [aiChatbotDocument.id, aiChatbotDocument.createdAt],\r\n    }),\r\n  })\r\n);\r\n\r\nexport const aiChatbotStreamRelations = relations(\r\n  aiChatbotStream,\r\n  ({ one }) => ({\r\n    chat: one(aiChatbotChat, {\r\n      fields: [aiChatbotStream.chatId],\r\n      references: [aiChatbotChat.id],\r\n    }),\r\n  })\r\n);\r\n\r\n// ===== EXISTING RELATIONS =====\r\nexport const webIndexesRelations = relations(webIndexes, ({ many, one }) => ({\r\n  crawlJobs: many(crawlJobs),\r\n  chatSessions: many(chatSessions),\r\n  documents: many(documents),\r\n}));\r\n\r\nexport const crawlJobsRelations = relations(crawlJobs, ({ one }) => ({\r\n  webIndex: one(webIndexes, {\r\n    fields: [crawlJobs.webIndexId],\r\n    references: [webIndexes.id],\r\n  }),\r\n}));\r\n\r\nexport const chatSessionsRelations = relations(\r\n  chatSessions,\r\n  ({ many, one }) => ({\r\n    messages: many(chatMessages),\r\n    suggestions: many(suggestions),\r\n    streams: many(streams),\r\n    webIndex: one(webIndexes, {\r\n      fields: [chatSessions.webIndexId],\r\n      references: [webIndexes.id],\r\n    }),\r\n  })\r\n);\r\n\r\nexport const chatMessagesRelations = relations(\r\n  chatMessages,\r\n  ({ one, many }) => ({\r\n    chatSession: one(chatSessions, {\r\n      fields: [chatMessages.chatId],\r\n      references: [chatSessions.id],\r\n    }),\r\n    votes: many(chatMessageVotes),\r\n    artifacts: many(artifacts),\r\n    suggestions: many(suggestions),\r\n  })\r\n);\r\n\r\nexport const artifactsRelations = relations(artifacts, ({ one }) => ({\r\n  message: one(chatMessages, {\r\n    fields: [artifacts.messageId],\r\n    references: [chatMessages.id],\r\n  }),\r\n}));\r\n\r\nexport const documentsRelations = relations(documents, ({ one, many }) => ({\r\n  webIndex: one(webIndexes, {\r\n    fields: [documents.webIndexId],\r\n    references: [webIndexes.id],\r\n  }),\r\n  embeddings: many(embeddings),\r\n}));\r\n\r\nexport const embeddingsRelations = relations(embeddings, ({ one }) => ({\r\n  document: one(documents, {\r\n    fields: [embeddings.documentId],\r\n    references: [documents.id],\r\n  }),\r\n}));\r\n\r\nexport const entitiesRelations = relations(entities, ({ many }) => ({\r\n  sourceRelationships: many(relationships, { relationName: \"source\" }),\r\n  targetRelationships: many(relationships, { relationName: \"target\" }),\r\n}));\r\n\r\nexport const relationshipsRelations = relations(relationships, ({ one }) => ({\r\n  source: one(entities, {\r\n    fields: [relationships.sourceId],\r\n    references: [entities.id],\r\n    relationName: \"source\",\r\n  }),\r\n  target: one(entities, {\r\n    fields: [relationships.targetId],\r\n    references: [entities.id],\r\n    relationName: \"target\",\r\n  }),\r\n}));\r\n\r\n// ===== EXPORT TYPES FOR CONTEXT7 COMPATIBILITY =====\r\n\r\n// Main Hijraah types\r\nexport type Profile = typeof profiles.$inferSelect;\r\nexport type WebIndex = typeof webIndexes.$inferSelect;\r\nexport type CrawlJob = typeof crawlJobs.$inferSelect;\r\nexport type ChatSession = typeof chatSessions.$inferSelect;\r\nexport type ChatMessage = typeof chatMessages.$inferSelect;\r\nexport type ChatMessageVote = typeof chatMessageVotes.$inferSelect;\r\nexport type Artifact = typeof artifacts.$inferSelect;\r\nexport type Suggestion = typeof suggestions.$inferSelect;\r\nexport type Stream = typeof streams.$inferSelect;\r\nexport type Document = typeof documents.$inferSelect;\r\nexport type Embedding = typeof embeddings.$inferSelect;\r\nexport type Entity = typeof entities.$inferSelect;\r\nexport type Relationship = typeof relationships.$inferSelect;\r\nexport type UpstashCacheMeta = typeof upstashCacheMeta.$inferSelect;\r\nexport type DataRetentionPolicy = typeof dataRetentionPolicies.$inferSelect;\r\n\r\n// Zod schemas for validation (Context7 best practice)\r\nexport const profileSchema = createSelectSchema(profiles);\r\nexport const webIndexSchema = createSelectSchema(webIndexes);\r\nexport const chatSessionSchema = createSelectSchema(chatSessions);\r\nexport const chatMessageSchema = createSelectSchema(chatMessages);\r\nexport const artifactSchema = createSelectSchema(artifacts);\r\nexport const documentSchema = createSelectSchema(documents);\r\n\r\nexport const insertProfileSchema = createInsertSchema(profiles);\r\nexport const insertWebIndexSchema = createInsertSchema(webIndexes);\r\nexport const insertChatSessionSchema = createInsertSchema(chatSessions);\r\nexport const insertChatMessageSchema = createInsertSchema(chatMessages);\r\nexport const insertArtifactSchema = createInsertSchema(artifacts);\r\nexport const insertDocumentSchema = createInsertSchema(documents);\r\n\r\n// AI-Chatbot Zod schemas\r\nexport const aiChatbotUserSchema = createSelectSchema(aiChatbotUser);\r\nexport const aiChatbotChatSchema = createSelectSchema(aiChatbotChat);\r\nexport const aiChatbotMessageV2Schema = createSelectSchema(aiChatbotMessageV2);\r\nexport const aiChatbotDocumentSchema = createSelectSchema(aiChatbotDocument);\r\nexport const aiChatbotSuggestionSchema =\r\n  createSelectSchema(aiChatbotSuggestion);\r\n\r\nexport const insertAIChatbotUserSchema = createInsertSchema(aiChatbotUser);\r\nexport const insertAIChatbotChatSchema = createInsertSchema(aiChatbotChat);\r\nexport const insertAIChatbotMessageV2Schema =\r\n  createInsertSchema(aiChatbotMessageV2);\r\nexport const insertAIChatbotDocumentSchema =\r\n  createInsertSchema(aiChatbotDocument);\r\nexport const insertAIChatbotSuggestionSchema =\r\n  createInsertSchema(aiChatbotSuggestion);\r\n"],"names":["publicSchema","pgSchema","pgEnum","voteTypeEnum","pgTable","id","uuid","primaryKey","defaultRandom","email","varchar","length","notNull","unique","password","aiChatbotChat","createdAt","timestamp","defaultNow","title","text","userId","references","aiChatbotUser","onDelete","visibility","enum","default","userIdIndex","index","on","table","visibilityIndex","aiChatbotMessage","chatId","role","content","jsonb","chatIdIndex","roleIndex","aiChatbotMessageV2","parts","attachments","aiChatbotVote","messageId","isUpvoted","boolean","pk","columns","messageIdIndex","aiChatbotDocument","kind","kindIndex","aiChatbotSuggestion","documentId","documentCreatedAt","originalText","suggestedText","description","isResolved","documentRef","foreignKey","foreignColumns","documentIndex","aiChatbotStream","chatRef","fullName","avatarUrl","locale","timezone","preferences","$type","metadata","updatedAt","$onUpdate","Date","emailIndex","webIndexes","url","namespace","pagesCrawled","integer","totalPages","lastCrawlDuration","estimatedCost","numeric","precision","scale","crawlConfig","isActive","isPublic","lastCrawledAt","userNamespaceUnique","urlIndex","isActiveIndex","namespaceTrgmIndex","using","sql","crawlJobs","webIndexId","status","statusEnum","firecrawlJobId","startedAt","completedAt","errorMessage","pagesProcessed","webIndexIdIndex","statusIndex","chatSessions","visibilityEnum","model","systemPrompt","chatMessages","roleEnum","toolCalls","artifacts","chatMessageVotes","voteType","feedback","messageUserUnique","type","language","version","typeIndex","isUsed","streams","isFinished","upstashCacheMeta","cacheKey","size","ttl","hitCount","lastAccessed","cacheKeyIndex","namespaceIndex","documents","contentType","fileSize","checksum","source","isProcessed","vectorId","sourceIndex","checksumIndex","embeddings","embedding","chunkIndex","tokenCount","documentIdIndex","modelIndex","entities","name","properties","documentIds","confidence","nameIndex","relationships","sourceId","targetId","strength","sourceIdIndex","targetIdIndex","dataRetentionPolicies","dataType","retentionDays","autoDelete","lastCleanup","dataTypeIndex","aiChatbotUserRelations","relations","many","chats","suggestions","aiChatbotChatRelations","one","user","fields","messages","messagesV2","votes","votesV2","aiChatbotVoteV2","aiChatbotMessageRelations","chat","aiChatbotMessageV2Relations","aiChatbotDocumentRelations","aiChatbotSuggestionRelations","document","aiChatbotStreamRelations","webIndexesRelations","crawlJobsRelations","webIndex","chatSessionsRelations","chatSession","message","embeddingsRelations","entitiesRelations","sourceRelationships","relationName","targetRelationships","relationshipsRelations","target","profileSchema","createSelectSchema","profiles","webIndexSchema","chatSessionSchema","chatMessageSchema","artifactSchema","documentSchema","insertProfileSchema","createInsertSchema","insertWebIndexSchema","insertChatSessionSchema","insertChatMessageSchema","insertArtifactSchema","insertDocumentSchema","aiChatbotUserSchema","aiChatbotChatSchema","aiChatbotMessageV2Schema","aiChatbotDocumentSchema","aiChatbotSuggestionSchema","insertAIChatbotUserSchema","insertAIChatbotChatSchema","insertAIChatbotMessageV2Schema","insertAIChatbotDocumentSchema","insertAIChatbotSuggestionSchema"],"sourceRoot":""}