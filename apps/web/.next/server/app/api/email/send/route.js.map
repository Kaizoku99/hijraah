{"version":3,"file":"../app/api/email/send/route.js","mappings":"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,4DCAA,kDCAA,wDCAA,iECAA,uDCAA,sDCAA,oDCAA,iDCAA,2DCAA,2DCAA,kDCAA,gDCAA,0DCAA,kECCA,qCAA6C,CAC7C,QACA,CAAC,EAAC,CAOF,cACA,0CACA,cACA,SACK,CACL,EACA,GACA,2CACA,QACA,CAAK,CACL,gDACA,QACA,CAAK,CACL,iDACA,QACA,CAAK,CACL,iEACA,QACA,CACA,CAAC,EACD,MAAiC,EAAQ,KAAmD,EAC5F,EAAuC,EAAQ,IAAiD,EAChG,WAD8C,CAC9C,IACA,iEAA4F,GAAO,kDAAkD,EAAW,kJAChK,aACA,cACA,eACA,CAAK,CACL,CACA,gBACA,iEAA4F,GAAO,6EAA6E,EAAW,kJAC3L,aACA,cACA,eACA,CAAK,CACL,CACA,cACA,2CAAmD,GAAO,2WAC1D,aACA,cACA,eACA,CAAK,CACL,CACA,aACA,yCACA,sDACA,0BCxDA,iDCAA,uCCAA,cACA,yCAEA,OADA,0BACA,CACA,CACA,cACA,YACA,WACA,uBCRA,cACA,yCAEA,OADA,0BACA,CACA,CACA,cACA,YACA,WACA","sources":["webpack://@hijraah/web/../../node_modules/.pnpm/next@15.3.0-canary.31_@babe_be67f368de2727c847f3a61f5e6cf4fa/node_modules/next/dist/server/web/spec-extension/adapters/reflect.js","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/after-task-async-storage.external.js\"","webpack://@hijraah/web/external commonjs2 \"module\"","webpack://@hijraah/web/../../node_modules/.pnpm/@opentelemetry+instrumentat_04f370d515cee0be955272f826166073/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ sync","webpack://@hijraah/web/external commonjs \"next/dist/compiled/next-server/app-page.runtime.prod.js\"","webpack://@hijraah/web/external commonjs2 \"punycode\"","webpack://@hijraah/web/external commonjs2 \"process\"","webpack://@hijraah/web/external commonjs2 \"os\"","webpack://@hijraah/web/external commonjs2 \"stream\"","webpack://@hijraah/web/external commonjs2 \"util\"","webpack://@hijraah/web/external commonjs2 \"fs\"","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/work-async-storage.external.js\"","webpack://@hijraah/web/external node-commonjs \"node:child_process\"","webpack://@hijraah/web/./src/lib/supabase/email.ts","webpack://@hijraah/web/src/app/api/email/send/route.ts","webpack://@hijraah/web/sentry-wrapper-module","webpack://@hijraah/web/?df3c","webpack://@hijraah/web/external commonjs2 \"path\"","webpack://@hijraah/web/external commonjs2 \"tls\"","webpack://@hijraah/web/external commonjs2 \"diagnostics_channel\"","webpack://@hijraah/web/external node-commonjs \"node:http\"","webpack://@hijraah/web/external node-commonjs \"node:zlib\"","webpack://@hijraah/web/external node-commonjs \"node:tls\"","webpack://@hijraah/web/external node-commonjs \"node:https\"","webpack://@hijraah/web/external commonjs \"next/dist/compiled/next-server/app-route.runtime.prod.js\"","webpack://@hijraah/web/external node-commonjs \"node:os\"","webpack://@hijraah/web/external node-commonjs \"node:diagnostics_channel\"","webpack://@hijraah/web/external commonjs2 \"crypto\"","webpack://@hijraah/web/external commonjs2 \"https\"","webpack://@hijraah/web/external node-commonjs \"node:stream\"","webpack://@hijraah/web/external node-commonjs \"node:util\"","webpack://@hijraah/web/ignored|E:\\downloads\\Hijraah\\node_modules\\.pnpm\\ws@8.18.2_bufferutil@4.0.9\\node_modules\\ws\\lib|utf-8-validate","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/work-unit-async-storage.external.js\"","webpack://@hijraah/web/external node-commonjs \"node:fs\"","webpack://@hijraah/web/external commonjs2 \"worker_threads\"","webpack://@hijraah/web/external commonjs2 \"zlib\"","webpack://@hijraah/web/external commonjs2 \"perf_hooks\"","webpack://@hijraah/web/external node-commonjs \"node:worker_threads\"","webpack://@hijraah/web/external node-commonjs \"node:path\"","webpack://@hijraah/web/external node-commonjs \"node:net\"","webpack://@hijraah/web/external commonjs2 \"buffer\"","webpack://@hijraah/web/external commonjs2 \"url\"","webpack://@hijraah/web/external commonjs2 \"child_process\"","webpack://@hijraah/web/external node-commonjs \"node:readline\"","webpack://@hijraah/web/external commonjs2 \"http\"","webpack://@hijraah/web/external commonjs2 \"tty\"","webpack://@hijraah/web/external commonjs2 \"async_hooks\"","webpack://@hijraah/web/external node-commonjs \"node:inspector\"","webpack://@hijraah/web/../../node_modules/.pnpm/next@15.3.0-canary.31_@babe_be67f368de2727c847f3a61f5e6cf4fa/node_modules/next/dist/server/request/utils.js","webpack://@hijraah/web/external commonjs2 \"net\"","webpack://@hijraah/web/external commonjs2 \"events\"","webpack://@hijraah/web/../../node_modules/.pnpm/require-in-the-middle@7.5.2/node_modules/require-in-the-middle/ sync","webpack://@hijraah/web/../../node_modules/.pnpm/@supabase+realtime-js@2.11.10_bufferutil@4.0.9/node_modules/@supabase/realtime-js/dist/main/ sync"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"ReflectAdapter\", {\n    enumerable: true,\n    get: function() {\n        return ReflectAdapter;\n    }\n});\nclass ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === 'function') {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n}\n\n//# sourceMappingURL=reflect.js.map","module.exports = require(\"next/dist/server/app-render/after-task-async-storage.external.js\");","module.exports = require(\"module\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 8963;\nmodule.exports = webpackEmptyContext;","module.exports = require(\"next/dist/compiled/next-server/app-page.runtime.prod.js\");","module.exports = require(\"punycode\");","module.exports = require(\"process\");","module.exports = require(\"os\");","module.exports = require(\"stream\");","module.exports = require(\"util\");","module.exports = require(\"fs\");","module.exports = require(\"next/dist/server/app-render/work-async-storage.external.js\");","module.exports = require(\"node:child_process\");","import { createClient } from \"@supabase/supabase-js\";\r\n\r\nimport { Locale } from \"@/shared/emails/i18n/translations\";\r\n\r\n// Type definitions for email functions\r\nexport type EmailType =\r\n  | \"signup\"\r\n  | \"invite\"\r\n  | \"magiclink\"\r\n  | \"recovery\"\r\n  | \"email_change\";\r\n\r\n// Base interface for all email parameters\r\ninterface BaseEmailParams {\r\n  email: string;\r\n  locale?: Locale;\r\n}\r\n\r\n// Password reset email parameters\r\nexport interface PasswordResetEmailParams extends BaseEmailParams {\r\n  redirectTo?: string;\r\n}\r\n\r\n// Email confirmation parameters\r\nexport interface EmailConfirmationParams extends BaseEmailParams {\r\n  redirectTo?: string;\r\n}\r\n\r\n// Magic link login parameters\r\nexport interface MagicLinkEmailParams extends BaseEmailParams {\r\n  redirectTo?: string;\r\n}\r\n\r\n// Email change parameters\r\nexport interface EmailChangeParams extends BaseEmailParams {\r\n  newEmail: string;\r\n}\r\n\r\n// User invitation parameters\r\nexport interface UserInvitationParams extends BaseEmailParams {\r\n  inviterEmail: string;\r\n  inviterName?: string;\r\n  organizationId?: string;\r\n  organizationName?: string;\r\n  redirectTo?: string;\r\n}\r\n\r\n/**\r\n * Send an email using Supabase Auth API\r\n * This function handles the appropriate Supabase Auth method based on the email type\r\n */\r\nexport async function sendEmail(\r\n  type: EmailType,\r\n  params:\r\n    | BaseEmailParams\r\n    | PasswordResetEmailParams\r\n    | EmailConfirmationParams\r\n    | MagicLinkEmailParams\r\n    | EmailChangeParams\r\n    | UserInvitationParams,\r\n  options: { captchaToken?: string } = {}\r\n) {\r\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\n  const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\r\n\r\n  if (!supabaseUrl || !supabaseServiceKey) {\r\n    throw new Error(\"Supabase URL or service role key is not defined\");\r\n  }\r\n\r\n  // Create a Supabase client with the service role key to access admin functions\r\n  const supabase = createClient(supabaseUrl, supabaseServiceKey, {\r\n    auth: {\r\n      autoRefreshToken: false,\r\n      persistSession: false,\r\n    },\r\n  });\r\n\r\n  // Add locale to user metadata if provided\r\n  const locale = params.locale || \"en\";\r\n\r\n  try {\r\n    switch (type) {\r\n      case \"recovery\":\r\n        const { email, redirectTo } = params as PasswordResetEmailParams;\r\n        return await supabase.auth.resetPasswordForEmail(email, {\r\n          redirectTo,\r\n          captchaToken: options.captchaToken,\r\n        });\r\n\r\n      case \"signup\":\r\n        const signupParams = params as EmailConfirmationParams;\r\n        // For signups, you would typically create the user first\r\n        // This is just a placeholder - you would need to implement actual user creation\r\n        throw new Error(\r\n          \"Signup email sending should be handled during user creation\"\r\n        );\r\n\r\n      case \"magiclink\":\r\n        const magiclinkParams = params as MagicLinkEmailParams;\r\n        return await supabase.auth.signInWithOtp({\r\n          email: magiclinkParams.email,\r\n          options: {\r\n            emailRedirectTo: magiclinkParams.redirectTo,\r\n            captchaToken: options.captchaToken,\r\n            data: {\r\n              preferred_locale: locale,\r\n            },\r\n          },\r\n        });\r\n\r\n      case \"email_change\":\r\n        // This would typically be handled by updating the user's email\r\n        // This is just a placeholder - you would need to implement the actual email change\r\n        throw new Error(\"Email change should be handled through user update\");\r\n\r\n      case \"invite\":\r\n        // User invitations would typically be handled through your own API\r\n        // This is just a placeholder - you would need to implement the actual invitation process\r\n        throw new Error(\r\n          \"User invitations should be handled through custom API\"\r\n        );\r\n\r\n      default:\r\n        throw new Error(`Unsupported email type: ${type}`);\r\n    }\r\n  } catch (error) {\r\n    console.error(`Failed to send ${type} email:`, error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n/**\r\n * Send a password reset email\r\n */\r\nexport async function sendPasswordResetEmail(\r\n  params: PasswordResetEmailParams,\r\n  captchaToken?: string\r\n) {\r\n  return sendEmail(\"recovery\", params, { captchaToken });\r\n}\r\n\r\n/**\r\n * Send a magic link email for passwordless login\r\n */\r\nexport async function sendMagicLinkEmail(\r\n  params: MagicLinkEmailParams,\r\n  captchaToken?: string\r\n) {\r\n  return sendEmail(\"magiclink\", params, { captchaToken });\r\n}\r\n","import { NextRequest, NextResponse } from 'next/server';\r\n\r\nimport { Locale } from '@/emails/i18n/translations';\r\nimport { \r\n  sendPasswordResetEmail, \r\n  sendMagicLinkEmail, \r\n  PasswordResetEmailParams, \r\n  MagicLinkEmailParams\r\n} from '@/lib/supabase/email';\r\n\r\nexport async function POST(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { type, email, redirectTo, locale, captchaToken } = body;\r\n    \r\n    if (!type || !email) {\r\n      return NextResponse.json(\r\n        { error: 'Missing required parameters: type or email' },\r\n        { status: 400 }\r\n      );\r\n    }\r\n    \r\n    // Validate locale\r\n    const validLocale = ['en', 'es', 'fr', 'ar'].includes(locale) ? locale as Locale : 'en';\r\n    \r\n    switch (type) {\r\n      case 'passwordReset': {\r\n        const params: PasswordResetEmailParams = {\r\n          email,\r\n          redirectTo,\r\n          locale: validLocale,\r\n        };\r\n        \r\n        const result = await sendPasswordResetEmail(params, captchaToken);\r\n        return NextResponse.json({ success: true, result });\r\n      }\r\n      \r\n      case 'magicLink': {\r\n        const params: MagicLinkEmailParams = {\r\n          email,\r\n          redirectTo,\r\n          locale: validLocale,\r\n        };\r\n        \r\n        const result = await sendMagicLinkEmail(params, captchaToken);\r\n        return NextResponse.json({ success: true, result });\r\n      }\r\n      \r\n      default:\r\n        return NextResponse.json(\r\n          { error: `Unsupported email type: ${type}` },\r\n          { status: 400 }\r\n        );\r\n    }\r\n  } catch (error) {\r\n    console.error('Error sending email:', error);\r\n    \r\n    return NextResponse.json(\r\n      { error: 'Failed to send email' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n} ","import * as origModule from 'next/dist/server/app-render/work-unit-async-storage.external.js';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport {} from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nimport * as Sentry from '@sentry/nextjs';\n\n// @ts-expect-error Because we cannot be sure if the RequestAsyncStorage module exists (it is not part of the Next.js public\n// API) we use a shim if it doesn't exist. The logic for this is in the wrapping loader.\n\nconst asyncStorageModule = { ...origModule } ;\n\nconst requestAsyncStorage =\n  'workUnitAsyncStorage' in asyncStorageModule\n    ? asyncStorageModule.workUnitAsyncStorage\n    : 'requestAsyncStorage' in asyncStorageModule\n      ? asyncStorageModule.requestAsyncStorage\n      : undefined;\n\nfunction wrapHandler(handler, method) {\n  // Running the instrumentation code during the build phase will mark any function as \"dynamic\" because we're accessing\n  // the Request object. We do not want to turn handlers dynamic so we skip instrumentation in the build phase.\n  if (process.env.NEXT_PHASE === 'phase-production-build') {\n    return handler;\n  }\n\n  if (typeof handler !== 'function') {\n    return handler;\n  }\n\n  return new Proxy(handler, {\n    apply: (originalFunction, thisArg, args) => {\n      let headers = undefined;\n\n      // We try-catch here just in case the API around `requestAsyncStorage` changes unexpectedly since it is not public API\n      try {\n        const requestAsyncStore = requestAsyncStorage?.getStore() ;\n        headers = requestAsyncStore?.headers;\n      } catch (e) {\n        /** empty */\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return Sentry.wrapRouteHandlerWithSentry(originalFunction , {\n        method,\n        parameterizedRoute: '/api/email/send',\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst GET = wrapHandler(serverComponentModule.GET , 'GET');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst POST = wrapHandler(serverComponentModule.POST , 'POST');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PUT = wrapHandler(serverComponentModule.PUT , 'PUT');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PATCH = wrapHandler(serverComponentModule.PATCH , 'PATCH');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst DELETE = wrapHandler(serverComponentModule.DELETE , 'DELETE');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst HEAD = wrapHandler(serverComponentModule.HEAD , 'HEAD');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst OPTIONS = wrapHandler(serverComponentModule.OPTIONS , 'OPTIONS');\n\nexport { DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT };\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\api\\\\email\\\\send\\\\route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/email/send/route\",\n        pathname: \"/api/email/send\",\n        filename: \"route\",\n        bundlePath: \"app/api/email/send/route\"\n    },\n    resolvedPagePath: \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\api\\\\email\\\\send\\\\route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","module.exports = require(\"path\");","module.exports = require(\"tls\");","module.exports = require(\"diagnostics_channel\");","module.exports = require(\"node:http\");","module.exports = require(\"node:zlib\");","module.exports = require(\"node:tls\");","module.exports = require(\"node:https\");","module.exports = require(\"next/dist/compiled/next-server/app-route.runtime.prod.js\");","module.exports = require(\"node:os\");","module.exports = require(\"node:diagnostics_channel\");","module.exports = require(\"crypto\");","module.exports = require(\"https\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:util\");","/* (ignored) */","module.exports = require(\"next/dist/server/app-render/work-unit-async-storage.external.js\");","module.exports = require(\"node:fs\");","module.exports = require(\"worker_threads\");","module.exports = require(\"zlib\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"node:worker_threads\");","module.exports = require(\"node:path\");","module.exports = require(\"node:net\");","module.exports = require(\"buffer\");","module.exports = require(\"url\");","module.exports = require(\"child_process\");","module.exports = require(\"node:readline\");","module.exports = require(\"http\");","module.exports = require(\"tty\");","module.exports = require(\"async_hooks\");","module.exports = require(\"node:inspector\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    isRequestAPICallableInsideAfter: null,\n    throwForSearchParamsAccessInUseCache: null,\n    throwWithStaticGenerationBailoutError: null,\n    throwWithStaticGenerationBailoutErrorWithDynamicError: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    isRequestAPICallableInsideAfter: function() {\n        return isRequestAPICallableInsideAfter;\n    },\n    throwForSearchParamsAccessInUseCache: function() {\n        return throwForSearchParamsAccessInUseCache;\n    },\n    throwWithStaticGenerationBailoutError: function() {\n        return throwWithStaticGenerationBailoutError;\n    },\n    throwWithStaticGenerationBailoutErrorWithDynamicError: function() {\n        return throwWithStaticGenerationBailoutErrorWithDynamicError;\n    }\n});\nconst _staticgenerationbailout = require(\"../../client/components/static-generation-bailout\");\nconst _aftertaskasyncstorageexternal = require(\"../app-render/after-task-async-storage.external\");\nfunction throwWithStaticGenerationBailoutError(route, expression) {\n    throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route ${route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n        value: \"E576\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction throwWithStaticGenerationBailoutErrorWithDynamicError(route, expression) {\n    throw Object.defineProperty(new _staticgenerationbailout.StaticGenBailoutError(`Route ${route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`), \"__NEXT_ERROR_CODE\", {\n        value: \"E543\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction throwForSearchParamsAccessInUseCache(route) {\n    throw Object.defineProperty(new Error(`Route ${route} used \"searchParams\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"searchParams\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`), \"__NEXT_ERROR_CODE\", {\n        value: \"E634\",\n        enumerable: false,\n        configurable: true\n    });\n}\nfunction isRequestAPICallableInsideAfter() {\n    const afterTaskStore = _aftertaskasyncstorageexternal.afterTaskAsyncStorage.getStore();\n    return (afterTaskStore == null ? void 0 : afterTaskStore.rootTaskSpawnPhase) === 'action';\n}\n\n//# sourceMappingURL=utils.js.map","module.exports = require(\"net\");","module.exports = require(\"events\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 96708;\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 97108;\nmodule.exports = webpackEmptyContext;"],"names":["sendEmail","type","params","options","supabaseUrl","process","supabaseServiceKey","env","SUPABASE_SERVICE_ROLE_KEY","supabase","createClient","auth","autoRefreshToken","persistSession","locale","email","redirectTo","resetPasswordForEmail","captchaToken","signInWithOtp","magiclinkParams","emailRedirectTo","data","preferred_locale","error","console","sendPasswordResetEmail","sendMagicLinkEmail","POST","request","body","json","NextResponse","status","validLocale","includes","result","success","serverComponentModule.GET","serverComponentModule.PUT","serverComponentModule.PATCH","serverComponentModule.DELETE","serverComponentModule.HEAD","serverComponentModule.OPTIONS"],"sourceRoot":""}