{"version":3,"file":"../app/api/triggers/stream/route.js","mappings":"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","sources":["webpack://@hijraah/web/external commonjs2 \"module\"","webpack://@hijraah/web/../../node_modules/.pnpm/@opentelemetry+instrumentat_04f370d515cee0be955272f826166073/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ sync","webpack://@hijraah/web/external commonjs \"next/dist/compiled/next-server/app-page.runtime.prod.js\"","webpack://@hijraah/web/external commonjs2 \"process\"","webpack://@hijraah/web/external commonjs2 \"os\"","webpack://@hijraah/web/external commonjs2 \"util\"","webpack://@hijraah/web/external commonjs2 \"fs\"","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/work-async-storage.external.js\"","webpack://@hijraah/web/external node-commonjs \"node:child_process\"","webpack://@hijraah/web/external commonjs2 \"path\"","webpack://@hijraah/web/external commonjs2 \"diagnostics_channel\"","webpack://@hijraah/web/external node-commonjs \"node:http\"","webpack://@hijraah/web/external node-commonjs \"node:zlib\"","webpack://@hijraah/web/external node-commonjs \"node:tls\"","webpack://@hijraah/web/external node-commonjs \"node:https\"","webpack://@hijraah/web/external commonjs \"next/dist/compiled/next-server/app-route.runtime.prod.js\"","webpack://@hijraah/web/external node-commonjs \"node:os\"","webpack://@hijraah/web/external node-commonjs \"node:diagnostics_channel\"","webpack://@hijraah/web/src/app/api/triggers/stream/route.ts","webpack://@hijraah/web/sentry-wrapper-module","webpack://@hijraah/web/?9fb2","webpack://@hijraah/web/external commonjs2 \"crypto\"","webpack://@hijraah/web/external node-commonjs \"node:stream\"","webpack://@hijraah/web/external node-commonjs \"node:util\"","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/work-unit-async-storage.external.js\"","webpack://@hijraah/web/external node-commonjs \"node:fs\"","webpack://@hijraah/web/external commonjs2 \"worker_threads\"","webpack://@hijraah/web/external commonjs2 \"perf_hooks\"","webpack://@hijraah/web/external node-commonjs \"node:worker_threads\"","webpack://@hijraah/web/external node-commonjs \"node:path\"","webpack://@hijraah/web/external node-commonjs \"node:net\"","webpack://@hijraah/web/external commonjs2 \"url\"","webpack://@hijraah/web/external commonjs2 \"child_process\"","webpack://@hijraah/web/external node-commonjs \"node:readline\"","webpack://@hijraah/web/external commonjs2 \"tty\"","webpack://@hijraah/web/external commonjs2 \"async_hooks\"","webpack://@hijraah/web/external node-commonjs \"node:inspector\"","webpack://@hijraah/web/../../node_modules/.pnpm/next@15.3.0-canary.31_@babe_be67f368de2727c847f3a61f5e6cf4fa/node_modules/next/dist/server/route-modules/app-route/module.compiled.js","webpack://@hijraah/web/external commonjs2 \"events\"","webpack://@hijraah/web/../../node_modules/.pnpm/require-in-the-middle@7.5.2/node_modules/require-in-the-middle/ sync"],"sourcesContent":["module.exports = require(\"module\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 8963;\nmodule.exports = webpackEmptyContext;","module.exports = require(\"next/dist/compiled/next-server/app-page.runtime.prod.js\");","module.exports = require(\"process\");","module.exports = require(\"os\");","module.exports = require(\"util\");","module.exports = require(\"fs\");","module.exports = require(\"next/dist/server/app-render/work-async-storage.external.js\");","module.exports = require(\"node:child_process\");","module.exports = require(\"path\");","module.exports = require(\"diagnostics_channel\");","module.exports = require(\"node:http\");","module.exports = require(\"node:zlib\");","module.exports = require(\"node:tls\");","module.exports = require(\"node:https\");","module.exports = require(\"next/dist/compiled/next-server/app-route.runtime.prod.js\");","module.exports = require(\"node:os\");","module.exports = require(\"node:diagnostics_channel\");","import { NextRequest } from \"next/server\";\n\n// Context7 Pattern: Type-safe event definitions\ninterface TaskStreamEvent {\n  id: string;\n  type:\n    | \"task.triggered\"\n    | \"task.status\"\n    | \"task.progress\"\n    | \"task.output\"\n    | \"task.error\"\n    | \"task.completed\";\n  taskId: string;\n  timestamp: string;\n  data: {\n    status?: string;\n    progress?: number;\n    output?: any;\n    error?: string;\n    attempts?: number;\n    duration?: number;\n    metadata?: Record<string, any>;\n  };\n}\n\n// Context7 Pattern: In-memory event store with TTL\nclass TaskEventStore {\n  private static instance: TaskEventStore;\n  private events: Map<string, TaskStreamEvent[]> = new Map();\n  private subscribers: Map<string, Set<WritableStreamDefaultWriter>> =\n    new Map();\n  private eventHistory: TaskStreamEvent[] = [];\n  private readonly maxHistorySize = 1000;\n  private readonly maxEventsPerTask = 50;\n\n  static getInstance(): TaskEventStore {\n    if (!TaskEventStore.instance) {\n      TaskEventStore.instance = new TaskEventStore();\n    }\n    return TaskEventStore.instance;\n  }\n\n  // Context7 Pattern: Event publishing with fanout\n  async publishEvent(event: TaskStreamEvent): Promise<void> {\n    // Store in history\n    this.eventHistory.unshift(event);\n    if (this.eventHistory.length > this.maxHistorySize) {\n      this.eventHistory = this.eventHistory.slice(0, this.maxHistorySize);\n    }\n\n    // Store per-task events\n    if (!this.events.has(event.taskId)) {\n      this.events.set(event.taskId, []);\n    }\n    const taskEvents = this.events.get(event.taskId)!;\n    taskEvents.unshift(event);\n    if (taskEvents.length > this.maxEventsPerTask) {\n      taskEvents.splice(this.maxEventsPerTask);\n    }\n\n    // Notify subscribers\n    const wildcardSubscribers = this.subscribers.get(\"*\") || new Set();\n    const taskSubscribers = this.subscribers.get(event.taskId) || new Set();\n    const allSubscribers = new Set([\n      ...Array.from(wildcardSubscribers),\n      ...Array.from(taskSubscribers),\n    ]);\n\n    const eventData = `data: ${JSON.stringify(event)}\\n\\n`;\n\n    for (const writer of Array.from(allSubscribers)) {\n      try {\n        await writer.write(new TextEncoder().encode(eventData));\n      } catch (error) {\n        console.error(\"Failed to write to subscriber:\", error);\n        // Remove failed subscribers\n        wildcardSubscribers.delete(writer);\n        taskSubscribers.delete(writer);\n      }\n    }\n  }\n\n  subscribe(taskId: string, writer: WritableStreamDefaultWriter): () => void {\n    if (!this.subscribers.has(taskId)) {\n      this.subscribers.set(taskId, new Set());\n    }\n    this.subscribers.get(taskId)!.add(writer);\n\n    // Send recent events as history\n    const recentEvents =\n      taskId === \"*\"\n        ? this.eventHistory.slice(0, 10)\n        : this.events.get(taskId)?.slice(0, 10) || [];\n\n    recentEvents.reverse().forEach(async (event) => {\n      try {\n        await writer.write(\n          new TextEncoder().encode(`data: ${JSON.stringify(event)}\\n\\n`)\n        );\n      } catch (error) {\n        console.error(\"Failed to send history:\", error);\n      }\n    });\n\n    return () => {\n      this.subscribers.get(taskId)?.delete(writer);\n      if (this.subscribers.get(taskId)?.size === 0) {\n        this.subscribers.delete(taskId);\n      }\n    };\n  }\n\n  getSubscriberCount(taskId?: string): number {\n    if (taskId) {\n      return this.subscribers.get(taskId)?.size || 0;\n    }\n    return Array.from(this.subscribers.values()).reduce(\n      (total, set) => total + set.size,\n      0\n    );\n  }\n}\n\nexport async function GET(request: NextRequest) {\n  const { searchParams } = new URL(request.url);\n  const taskId = searchParams.get(\"taskId\") || \"*\";\n  const chatId = searchParams.get(\"chatId\");\n\n  const eventStore = TaskEventStore.getInstance();\n\n  // Create ReadableStream for SSE\n  const stream = new ReadableStream({\n    start(controller) {\n      const writer = controller;\n\n      // Send initial connection event\n      const connectEvent = {\n        id: `connect-${Date.now()}`,\n        type: \"connection.established\" as any,\n        taskId: \"system\",\n        timestamp: new Date().toISOString(),\n        data: {\n          subscriberCount: eventStore.getSubscriberCount(),\n          chatId,\n          taskId,\n        },\n      };\n\n      writer.enqueue(\n        new TextEncoder().encode(`data: ${JSON.stringify(connectEvent)}\\n\\n`)\n      );\n\n      // Subscribe to events\n      const unsubscribe = eventStore.subscribe(taskId, writer as any);\n\n      // Setup heartbeat\n      const heartbeat = setInterval(() => {\n        try {\n          writer.enqueue(\n            new TextEncoder().encode(\n              `data: {\"type\":\"heartbeat\",\"timestamp\":\"${new Date().toISOString()}\"}\\n\\n`\n            )\n          );\n        } catch (error) {\n          console.error(\"Heartbeat failed:\", error);\n          clearInterval(heartbeat);\n        }\n      }, 30000); // 30 second heartbeat\n\n      // Cleanup on stream close\n      const cleanup = () => {\n        clearInterval(heartbeat);\n        unsubscribe();\n      };\n\n      // Handle client disconnect\n      request.signal.addEventListener(\"abort\", cleanup);\n\n      return cleanup;\n    },\n  });\n\n  return new Response(stream, {\n    headers: {\n      \"Content-Type\": \"text/event-stream\",\n      \"Cache-Control\": \"no-cache\",\n      Connection: \"keep-alive\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Methods\": \"GET\",\n      \"Access-Control-Allow-Headers\": \"Cache-Control\",\n    },\n  });\n}\n\n// Context7 Pattern: Webhook endpoint for receiving task events\nexport async function POST(request: NextRequest) {\n  try {\n    const eventStore = TaskEventStore.getInstance();\n    const payload = await request.json();\n\n    // Validate webhook payload (this would come from Trigger.dev)\n    const event: TaskStreamEvent = {\n      id: payload.id || `event-${Date.now()}`,\n      type: payload.type,\n      taskId: payload.taskId,\n      timestamp: payload.timestamp || new Date().toISOString(),\n      data: payload.data || {},\n    };\n\n    await eventStore.publishEvent(event);\n\n    return new Response(JSON.stringify({ success: true }), {\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n  } catch (error) {\n    console.error(\"Failed to process webhook:\", error);\n    return new Response(\n      JSON.stringify({\n        error: \"Failed to process webhook\",\n        details: error instanceof Error ? error.message : String(error),\n      }),\n      {\n        status: 500,\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n  }\n}\n\n// Mock event generation for testing (remove in production)\nif (process.env.NODE_ENV === \"development\") {\n  const eventStore = TaskEventStore.getInstance();\n\n  // Generate mock events periodically\n  setInterval(\n    () => {\n      const taskIds = [\n        \"document-processing\",\n        \"ai-analysis\",\n        \"web-scraping\",\n        \"email-notification\",\n      ];\n      const taskId = taskIds[Math.floor(Math.random() * taskIds.length)];\n      const eventTypes: TaskStreamEvent[\"type\"][] = [\n        \"task.progress\",\n        \"task.status\",\n      ];\n      const eventType =\n        eventTypes[Math.floor(Math.random() * eventTypes.length)];\n\n      const mockEvent: TaskStreamEvent = {\n        id: `mock-${Date.now()}`,\n        type: eventType,\n        taskId,\n        timestamp: new Date().toISOString(),\n        data: {\n          progress:\n            eventType === \"task.progress\"\n              ? Math.floor(Math.random() * 100)\n              : undefined,\n          status:\n            eventType === \"task.status\"\n              ? Math.random() > 0.8\n                ? \"completed\"\n                : \"running\"\n              : undefined,\n        },\n      };\n\n      eventStore.publishEvent(mockEvent);\n    },\n    5000 + Math.random() * 10000\n  ); // Random interval between 5-15 seconds\n}\n","import * as origModule from 'next/dist/server/app-render/work-unit-async-storage.external.js';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport {} from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nimport * as Sentry from '@sentry/nextjs';\n\n// @ts-expect-error Because we cannot be sure if the RequestAsyncStorage module exists (it is not part of the Next.js public\n// API) we use a shim if it doesn't exist. The logic for this is in the wrapping loader.\n\nconst asyncStorageModule = { ...origModule } ;\n\nconst requestAsyncStorage =\n  'workUnitAsyncStorage' in asyncStorageModule\n    ? asyncStorageModule.workUnitAsyncStorage\n    : 'requestAsyncStorage' in asyncStorageModule\n      ? asyncStorageModule.requestAsyncStorage\n      : undefined;\n\nfunction wrapHandler(handler, method) {\n  // Running the instrumentation code during the build phase will mark any function as \"dynamic\" because we're accessing\n  // the Request object. We do not want to turn handlers dynamic so we skip instrumentation in the build phase.\n  if (process.env.NEXT_PHASE === 'phase-production-build') {\n    return handler;\n  }\n\n  if (typeof handler !== 'function') {\n    return handler;\n  }\n\n  return new Proxy(handler, {\n    apply: (originalFunction, thisArg, args) => {\n      let headers = undefined;\n\n      // We try-catch here just in case the API around `requestAsyncStorage` changes unexpectedly since it is not public API\n      try {\n        const requestAsyncStore = requestAsyncStorage?.getStore() ;\n        headers = requestAsyncStore?.headers;\n      } catch (e) {\n        /** empty */\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return Sentry.wrapRouteHandlerWithSentry(originalFunction , {\n        method,\n        parameterizedRoute: '/api/triggers/stream',\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst GET = wrapHandler(serverComponentModule.GET , 'GET');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst POST = wrapHandler(serverComponentModule.POST , 'POST');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PUT = wrapHandler(serverComponentModule.PUT , 'PUT');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PATCH = wrapHandler(serverComponentModule.PATCH , 'PATCH');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst DELETE = wrapHandler(serverComponentModule.DELETE , 'DELETE');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst HEAD = wrapHandler(serverComponentModule.HEAD , 'HEAD');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst OPTIONS = wrapHandler(serverComponentModule.OPTIONS , 'OPTIONS');\n\nexport { DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT };\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\api\\\\triggers\\\\stream\\\\route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/triggers/stream/route\",\n        pathname: \"/api/triggers/stream\",\n        filename: \"route\",\n        bundlePath: \"app/api/triggers/stream/route\"\n    },\n    resolvedPagePath: \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\api\\\\triggers\\\\stream\\\\route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","module.exports = require(\"crypto\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:util\");","module.exports = require(\"next/dist/server/app-render/work-unit-async-storage.external.js\");","module.exports = require(\"node:fs\");","module.exports = require(\"worker_threads\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"node:worker_threads\");","module.exports = require(\"node:path\");","module.exports = require(\"node:net\");","module.exports = require(\"url\");","module.exports = require(\"child_process\");","module.exports = require(\"node:readline\");","module.exports = require(\"tty\");","module.exports = require(\"async_hooks\");","module.exports = require(\"node:inspector\");","\"use strict\";\nif (process.env.NEXT_RUNTIME === 'edge') {\n    module.exports = require('next/dist/server/route-modules/app-route/module.js');\n} else {\n    if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n        if (process.env.NODE_ENV === 'development') {\n            module.exports = require('next/dist/compiled/next-server/app-route-experimental.runtime.dev.js');\n        } else if (process.env.TURBOPACK) {\n            module.exports = require('next/dist/compiled/next-server/app-route-turbo-experimental.runtime.prod.js');\n        } else {\n            module.exports = require('next/dist/compiled/next-server/app-route-experimental.runtime.prod.js');\n        }\n    } else {\n        if (process.env.NODE_ENV === 'development') {\n            module.exports = require('next/dist/compiled/next-server/app-route.runtime.dev.js');\n        } else if (process.env.TURBOPACK) {\n            module.exports = require('next/dist/compiled/next-server/app-route-turbo.runtime.prod.js');\n        } else {\n            module.exports = require('next/dist/compiled/next-server/app-route.runtime.prod.js');\n        }\n    }\n}\n\n//# sourceMappingURL=module.compiled.js.map","module.exports = require(\"events\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 96708;\nmodule.exports = webpackEmptyContext;"],"names":["TaskEventStore","getInstance","instance","publishEvent","event","eventHistory","unshift","length","maxHistorySize","slice","events","has","taskId","set","taskEvents","get","maxEventsPerTask","splice","wildcardSubscribers","subscribers","Set","taskSubscribers","allSubscribers","Array","from","eventData","JSON","stringify","writer","write","TextEncoder","encode","console","error","delete","subscribe","add","recentEvents","reverse","forEach","size","getSubscriberCount","values","reduce","total","Map","GET","request","searchParams","URL","url","chatId","eventStore","Response","ReadableStream","start","connectEvent","id","Date","now","type","timestamp","toISOString","data","subscriberCount","enqueue","unsubscribe","heartbeat","setInterval","controller","clearInterval","signal","addEventListener","cleanup","headers","Connection","POST","payload","json","success","details","Error","message","String","status","serverComponentModule.GET","serverComponentModule.PUT","serverComponentModule.PATCH","serverComponentModule.DELETE","serverComponentModule.HEAD","serverComponentModule.OPTIONS"],"sourceRoot":""}