{"version":3,"file":"../app/api/research/route.js","mappings":"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","sources":["webpack://@hijraah/web/external commonjs2 \"module\"","webpack://@hijraah/web/../../node_modules/.pnpm/@opentelemetry+instrumentat_04f370d515cee0be955272f826166073/node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ sync","webpack://@hijraah/web/external commonjs \"next/dist/compiled/next-server/app-page.runtime.prod.js\"","webpack://@hijraah/web/external commonjs2 \"punycode\"","webpack://@hijraah/web/external commonjs2 \"assert\"","webpack://@hijraah/web/external commonjs2 \"process\"","webpack://@hijraah/web/external commonjs2 \"os\"","webpack://@hijraah/web/external commonjs2 \"stream\"","webpack://@hijraah/web/external commonjs2 \"util\"","webpack://@hijraah/web/external commonjs2 \"fs\"","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/work-async-storage.external.js\"","webpack://@hijraah/web/../../node_modules/.pnpm/hono@4.8.2/node_modules/hono/dist/middleware/cors/index.js","webpack://@hijraah/web/../../node_modules/.pnpm/hono@4.8.2/node_modules/hono/dist/adapter/vercel/handler.js","webpack://@hijraah/web/external node-commonjs \"node:child_process\"","webpack://@hijraah/web/external commonjs2 \"path\"","webpack://@hijraah/web/external commonjs2 \"tls\"","webpack://@hijraah/web/external commonjs2 \"diagnostics_channel\"","webpack://@hijraah/web/external node-commonjs \"node:http\"","webpack://@hijraah/web/external node-commonjs \"node:zlib\"","webpack://@hijraah/web/external node-commonjs \"node:tls\"","webpack://@hijraah/web/external node-commonjs \"node:https\"","webpack://@hijraah/web/external commonjs \"next/dist/compiled/next-server/app-route.runtime.prod.js\"","webpack://@hijraah/web/external node-commonjs \"node:os\"","webpack://@hijraah/web/external node-commonjs \"node:diagnostics_channel\"","webpack://@hijraah/web/external commonjs2 \"crypto\"","webpack://@hijraah/web/external commonjs2 \"https\"","webpack://@hijraah/web/external node-commonjs \"node:stream\"","webpack://@hijraah/web/external node-commonjs \"node:util\"","webpack://@hijraah/web/ignored|E:\\downloads\\Hijraah\\node_modules\\.pnpm\\ws@8.18.2_bufferutil@4.0.9\\node_modules\\ws\\lib|utf-8-validate","webpack://@hijraah/web/./src/lib/services/research-service.ts","webpack://@hijraah/web/src/app/api/research/route.ts","webpack://@hijraah/web/sentry-wrapper-module","webpack://@hijraah/web/?5056","webpack://@hijraah/web/external commonjs \"next/dist/server/app-render/work-unit-async-storage.external.js\"","webpack://@hijraah/web/external node-commonjs \"node:fs\"","webpack://@hijraah/web/external commonjs2 \"worker_threads\"","webpack://@hijraah/web/external commonjs2 \"zlib\"","webpack://@hijraah/web/external commonjs2 \"perf_hooks\"","webpack://@hijraah/web/external node-commonjs \"node:worker_threads\"","webpack://@hijraah/web/external node-commonjs \"node:path\"","webpack://@hijraah/web/external node-commonjs \"node:net\"","webpack://@hijraah/web/external commonjs2 \"buffer\"","webpack://@hijraah/web/external commonjs2 \"url\"","webpack://@hijraah/web/external commonjs2 \"child_process\"","webpack://@hijraah/web/external node-commonjs \"node:readline\"","webpack://@hijraah/web/external commonjs2 \"http\"","webpack://@hijraah/web/external commonjs2 \"tty\"","webpack://@hijraah/web/external commonjs2 \"async_hooks\"","webpack://@hijraah/web/external node-commonjs \"node:inspector\"","webpack://@hijraah/web/external commonjs2 \"net\"","webpack://@hijraah/web/../../node_modules/.pnpm/next@15.3.0-canary.31_@babe_be67f368de2727c847f3a61f5e6cf4fa/node_modules/next/dist/server/route-modules/app-route/module.compiled.js","webpack://@hijraah/web/external commonjs2 \"events\"","webpack://@hijraah/web/../../node_modules/.pnpm/require-in-the-middle@7.5.2/node_modules/require-in-the-middle/ sync","webpack://@hijraah/web/../../node_modules/.pnpm/@supabase+realtime-js@2.11.10_bufferutil@4.0.9/node_modules/@supabase/realtime-js/dist/main/ sync"],"sourcesContent":["module.exports = require(\"module\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 8963;\nmodule.exports = webpackEmptyContext;","module.exports = require(\"next/dist/compiled/next-server/app-page.runtime.prod.js\");","module.exports = require(\"punycode\");","module.exports = require(\"assert\");","module.exports = require(\"process\");","module.exports = require(\"os\");","module.exports = require(\"stream\");","module.exports = require(\"util\");","module.exports = require(\"fs\");","module.exports = require(\"next/dist/server/app-render/work-async-storage.external.js\");","// src/middleware/cors/index.ts\nvar cors = (options) => {\n  const defaults = {\n    origin: \"*\",\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\n    allowHeaders: [],\n    exposeHeaders: []\n  };\n  const opts = {\n    ...defaults,\n    ...options\n  };\n  const findAllowOrigin = ((optsOrigin) => {\n    if (typeof optsOrigin === \"string\") {\n      if (optsOrigin === \"*\") {\n        return () => optsOrigin;\n      } else {\n        return (origin) => optsOrigin === origin ? origin : null;\n      }\n    } else if (typeof optsOrigin === \"function\") {\n      return optsOrigin;\n    } else {\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\n    }\n  })(opts.origin);\n  const findAllowMethods = ((optsAllowMethods) => {\n    if (typeof optsAllowMethods === \"function\") {\n      return optsAllowMethods;\n    } else if (Array.isArray(optsAllowMethods)) {\n      return () => optsAllowMethods;\n    } else {\n      return () => [];\n    }\n  })(opts.allowMethods);\n  return async function cors2(c, next) {\n    function set(key, value) {\n      c.res.headers.set(key, value);\n    }\n    const allowOrigin = findAllowOrigin(c.req.header(\"origin\") || \"\", c);\n    if (allowOrigin) {\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\n    }\n    if (opts.origin !== \"*\") {\n      const existingVary = c.req.header(\"Vary\");\n      if (existingVary) {\n        set(\"Vary\", existingVary);\n      } else {\n        set(\"Vary\", \"Origin\");\n      }\n    }\n    if (opts.credentials) {\n      set(\"Access-Control-Allow-Credentials\", \"true\");\n    }\n    if (opts.exposeHeaders?.length) {\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\n    }\n    if (c.req.method === \"OPTIONS\") {\n      if (opts.maxAge != null) {\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\n      }\n      const allowMethods = findAllowMethods(c.req.header(\"origin\") || \"\", c);\n      if (allowMethods.length) {\n        set(\"Access-Control-Allow-Methods\", allowMethods.join(\",\"));\n      }\n      let headers = opts.allowHeaders;\n      if (!headers?.length) {\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\n        if (requestHeaders) {\n          headers = requestHeaders.split(/\\s*,\\s*/);\n        }\n      }\n      if (headers?.length) {\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\n      }\n      c.res.headers.delete(\"Content-Length\");\n      c.res.headers.delete(\"Content-Type\");\n      return new Response(null, {\n        headers: c.res.headers,\n        status: 204,\n        statusText: \"No Content\"\n      });\n    }\n    await next();\n  };\n};\nexport {\n  cors\n};\n","// src/adapter/vercel/handler.ts\nvar handle = (app) => (req) => {\n  return app.fetch(req);\n};\nexport {\n  handle\n};\n","module.exports = require(\"node:child_process\");","module.exports = require(\"path\");","module.exports = require(\"tls\");","module.exports = require(\"diagnostics_channel\");","module.exports = require(\"node:http\");","module.exports = require(\"node:zlib\");","module.exports = require(\"node:tls\");","module.exports = require(\"node:https\");","module.exports = require(\"next/dist/compiled/next-server/app-route.runtime.prod.js\");","module.exports = require(\"node:os\");","module.exports = require(\"node:diagnostics_channel\");","module.exports = require(\"crypto\");","module.exports = require(\"https\");","module.exports = require(\"node:stream\");","module.exports = require(\"node:util\");","/* (ignored) */","import FirecrawlApp from '@mendable/firecrawl-js';\r\n\r\nimport { \r\n  DeepResearchState, \r\n  Activity, \r\n  Source \r\n} from '@/lib/contexts/deep-research-context';\r\n\r\n// Initialize Firecrawl client\r\nconst firecrawl = new FirecrawlApp({\r\n  apiKey: process.env.FIRECRAWL_API_KEY || '',\r\n});\r\n\r\n// Type for mapping Firecrawl response to our app's data structure\r\ntype FirecrawlMapper = {\r\n  mapSources: (firecrawlSources: any[]) => Source[];\r\n  mapActivities: (firecrawlActivities: any[]) => Activity[];\r\n};\r\n\r\n// Helper functions to map Firecrawl data to our app structure\r\nconst firecrawlMapper: FirecrawlMapper = {\r\n  mapSources: (firecrawlSources) => {\r\n    return firecrawlSources.map(source => ({\r\n      url: source.url,\r\n      title: source.title,\r\n      description: source.description || '',\r\n      relevance: source.relevance,\r\n    }));\r\n  },\r\n  mapActivities: (firecrawlActivities) => {\r\n    return firecrawlActivities.map(activity => ({\r\n      type: mapActivityType(activity.type),\r\n      status: mapActivityStatus(activity.status),\r\n      message: activity.message,\r\n      timestamp: activity.timestamp,\r\n      depth: activity.depth,\r\n    }));\r\n  },\r\n};\r\n\r\n// Map Firecrawl activity types to our app's activity types\r\nfunction mapActivityType(firecrawlType: string): Activity['type'] {\r\n  const typeMap: Record<string, Activity['type']> = {\r\n    'search': 'search',\r\n    'extract': 'extract',\r\n    'analyze': 'analyze',\r\n    'reasoning': 'reasoning',\r\n    'synthesis': 'synthesis',\r\n    'thought': 'thought',\r\n    'error': 'error',\r\n  };\r\n  return typeMap[firecrawlType] || 'analyze';\r\n}\r\n\r\n// Map Firecrawl activity status to our app's status\r\nfunction mapActivityStatus(firecrawlStatus: string): Activity['status'] {\r\n  const statusMap: Record<string, Activity['status']> = {\r\n    'processing': 'pending',\r\n    'completed': 'complete',\r\n    'in_progress': 'pending',\r\n    'error': 'error',\r\n  };\r\n  return statusMap[firecrawlStatus] || 'pending';\r\n}\r\n\r\n// Research service with Firecrawl and fallback\r\nexport const researchService = {\r\n  async performResearch(query: string, maxDepth: number = 3) {\r\n    try {\r\n      // Try using Firecrawl first\r\n      console.log('Using Firecrawl Deep Research API...');\r\n      \r\n      // Define parameters for Firecrawl API\r\n      const params = {\r\n        maxDepth,\r\n        timeLimit: 180, // 3 minutes\r\n        maxUrls: 15,    // Maximum URLs to analyze\r\n      };\r\n      \r\n      // Start the research with Firecrawl\r\n      const results = await firecrawl.deep_research(query, params);\r\n      \r\n      if (results.success) {\r\n        // Map Firecrawl response to our app's structure\r\n        return {\r\n          sources: firecrawlMapper.mapSources(results.data.sources || []),\r\n          activities: firecrawlMapper.mapActivities(results.data.activities || []),\r\n          currentDepth: results.currentDepth || 1,\r\n          maxDepth: results.maxDepth || maxDepth,\r\n          completedSteps: results.data.activities?.length || 0,\r\n          totalExpectedSteps: (results.maxDepth || maxDepth) * 5, // Estimate 5 steps per depth level\r\n          finalAnalysis: results.data.finalAnalysis,\r\n          success: true,\r\n        };\r\n      } else {\r\n        throw new Error('Firecrawl research failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Firecrawl error, falling back to local implementation:', error);\r\n      \r\n      // Fallback to current implementation\r\n      // Note: Implement the actual fallback logic here that calls your existing code\r\n      return await fallbackResearchImplementation(query, maxDepth);\r\n    }\r\n  }\r\n};\r\n\r\n// Implement the fallback research function that uses your current implementation\r\nasync function fallbackResearchImplementation(query: string, maxDepth: number) {\r\n  // This should call your existing research implementation\r\n  // For now, we'll just return a placeholder\r\n  console.log('Using fallback research implementation...');\r\n  \r\n  // Make API call to your existing endpoint\r\n  const response = await fetch('/api/deep-research', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ \r\n      query, \r\n      maxDepth \r\n    }),\r\n  });\r\n  \r\n  return await response.json();\r\n}\r\n","import { createClient } from \"@supabase/supabase-js\";\r\nimport { Hono } from \"hono\";\r\nimport { cors } from \"hono/cors\";\r\nimport { handle } from \"hono/vercel\";\r\nimport { z } from \"zod\";\r\n\r\nimport { researchService } from \"@/lib/services/research-service\"; // Assuming this path is correct\r\n\r\n// Initialize Supabase client\r\nconst supabase = createClient(\r\n  process.env.NEXT_PUBLIC_SUPABASE_URL || \"\",\r\n  process.env.SUPABASE_SERVICE_ROLE_KEY || \"\"\r\n);\r\n\r\n// Create a Hono app\r\nconst app = new Hono();\r\n\r\n// Add CORS middleware\r\napp.use(\"*\", cors());\r\n\r\n// Define schema for the start research request body\r\nconst startResearchSchema = z.object({\r\n  query: z.string().min(1, \"Query cannot be empty\"),\r\n  userId: z.string().optional(),\r\n  maxDepth: z.number().min(1).max(5).default(3).optional(), // Allow optional override\r\n  // Add other parameters if needed by researchService (e.g., model preference)\r\n});\r\n\r\n// Define schema for source data (matching deep-research structure)\r\nconst sourceSchema = z.object({\r\n  id: z.string().uuid(),\r\n  session_id: z.string().uuid(),\r\n  url: z.string().url().nullable(),\r\n  title: z.string().nullable(),\r\n  relevance: z.number().nullable(),\r\n  metadata: z.any().nullable(),\r\n  created_at: z.string(),\r\n});\r\n\r\n// Define schema for finding/activity data (matching deep-research structure)\r\nconst findingSchema = z.object({\r\n  id: z.string().uuid(),\r\n  session_id: z.string().uuid(),\r\n  type: z.string(), // e.g., 'search', 'extract', 'analyze', 'synthesis', 'error'\r\n  content: z.string(),\r\n  depth: z.number(),\r\n  metadata: z.any().nullable(),\r\n  created_at: z.string(),\r\n});\r\n\r\n// Define schema for session data (matching deep-research structure)\r\nconst sessionSchema = z.object({\r\n  id: z.string().uuid(),\r\n  query: z.string(),\r\n  status: z.enum([\"in_progress\", \"completed\", \"failed\"]),\r\n  metadata: z.any().nullable(), // Contains depth, progress etc.\r\n  created_at: z.string(),\r\n  updated_at: z.string(),\r\n  user_id: z.string().uuid().nullable(),\r\n  // Add results field if researchService stores final summary here\r\n  // results: z.any().nullable(),\r\n});\r\n\r\n// Define schema for GET request response\r\nconst researchStatusResponseSchema = sessionSchema.extend({\r\n  sources: z.array(sourceSchema),\r\n  findings: z.array(findingSchema),\r\n});\r\n\r\n// Helper function to create a new research session (adapted from deep-research)\r\nasync function createResearchSession(\r\n  query: string,\r\n  maxDepth: number,\r\n  userId?: string\r\n) {\r\n  const { data, error } = await supabase\r\n    .from(\"research_sessions\")\r\n    .insert({\r\n      // Let Supabase generate UUID for id\r\n      query,\r\n      user_id: userId,\r\n      status: \"in_progress\",\r\n      metadata: {\r\n        max_depth: maxDepth,\r\n        current_depth: 0,\r\n        progress: 0,\r\n      },\r\n    })\r\n    .select()\r\n    .single();\r\n\r\n  if (error) {\r\n    console.error(\"Error creating research session in DB:\", error);\r\n    throw new Error(`Failed to create research session: ${error.message}`);\r\n  }\r\n\r\n  console.log(\r\n    `[Research API] Created session ${data.id} for query: \"${query}\"`\r\n  );\r\n  return data;\r\n}\r\n\r\n// Helper function to get a research session and its details (adapted from deep-research)\r\nasync function getResearchSessionDetails(sessionId: string) {\r\n  console.log(`[Research API] Fetching details for session ${sessionId}`);\r\n  // Get the session\r\n  const { data: session, error: sessionError } = await supabase\r\n    .from(\"research_sessions\")\r\n    .select(\"*\")\r\n    .eq(\"id\", sessionId)\r\n    .single();\r\n\r\n  if (sessionError || !session) {\r\n    console.error(\r\n      `[Research API] Error fetching session ${sessionId}:`,\r\n      sessionError\r\n    );\r\n    // Throw specific error if not found\r\n    if (sessionError?.code === \"PGRST116\") {\r\n      // PostgREST code for no rows found\r\n      throw new Error(`Research session not found: ${sessionId}`);\r\n    }\r\n    throw new Error(\r\n      `Failed to fetch research session ${sessionId}: ${sessionError?.message || \"Unknown error\"}`\r\n    );\r\n  }\r\n\r\n  // Get the sources for this session\r\n  const { data: sources, error: sourcesError } = await supabase\r\n    .from(\"research_sources\")\r\n    .select(\"*\")\r\n    .eq(\"session_id\", sessionId);\r\n\r\n  if (sourcesError) {\r\n    console.warn(\r\n      `[Research API] Error fetching sources for session ${sessionId}:`,\r\n      sourcesError\r\n    );\r\n    // Continue but log warning\r\n  }\r\n\r\n  // Get the findings/activities for this session\r\n  const { data: findings, error: findingsError } = await supabase\r\n    .from(\"research_findings\")\r\n    .select(\"*\")\r\n    .eq(\"session_id\", sessionId)\r\n    .order(\"created_at\", { ascending: true });\r\n\r\n  if (findingsError) {\r\n    console.warn(\r\n      `[Research API] Error fetching findings for session ${sessionId}:`,\r\n      findingsError\r\n    );\r\n    // Continue but log warning\r\n  }\r\n\r\n  console.log(\r\n    `[Research API] Successfully fetched details for session ${sessionId}`\r\n  );\r\n  return {\r\n    ...session,\r\n    sources: sources || [],\r\n    findings: findings || [],\r\n  };\r\n}\r\n\r\n// --- API Routes --- //\r\n\r\n// POST / - Start a new research task (asynchronous)\r\napp.post(\"/\", async (c) => {\r\n  try {\r\n    // Parse and validate request body\r\n    const body = await c.req.json();\r\n    const validation = startResearchSchema.safeParse(body);\r\n\r\n    if (!validation.success) {\r\n      return c.json(\r\n        { error: \"Invalid input\", details: validation.error.errors },\r\n        400\r\n      );\r\n    }\r\n    const { query, userId, maxDepth = 3 } = validation.data;\r\n\r\n    console.log(\r\n      `[Research API] Received request to start research on: \"${query}\"`\r\n    );\r\n\r\n    // Create the session record\r\n    const session = await createResearchSession(query, maxDepth, userId);\r\n\r\n    // Trigger the background research process (fire-and-forget)\r\n    // IMPORTANT: This `void` approach might not be reliable on all serverless platforms\r\n    // for long-running tasks. Consider using a dedicated background job queue\r\n    // (e.g., Trigger.dev, QStash, Vercel Background Functions) for production.\r\n    // void researchService.performResearch(query, maxDepth, session.id)\r\n    //   .then(() => console.log(`[Research API] Background research process completed for session ${session.id}`))\r\n    //   .catch(err => console.error(`[Research API] Background research process failed for session ${session.id}:`, err));\r\n\r\n    // Wrap the call in an anonymous async function to handle potential linter issues\r\n    // and clearly signal a detached process.\r\n    (async () => {\r\n      try {\r\n        await researchService.performResearch(query, maxDepth, session.id);\r\n        console.log(\r\n          `[Research API] Background research process completed for session ${session.id}`\r\n        );\r\n      } catch (err) {\r\n        console.error(\r\n          `[Research API] Background research process failed for session ${session.id}:`,\r\n          err\r\n        );\r\n        // Optionally update session status to 'failed' here if the service doesn't handle it\r\n      }\r\n    })(); // Immediately invoke the async function\r\n\r\n    console.log(\r\n      `[Research API] Background process triggered for session ${session.id}. Returning 202.`\r\n    );\r\n\r\n    // Return 202 Accepted with the session ID\r\n    return c.json(\r\n      {\r\n        sessionId: session.id,\r\n        message:\r\n          \"Research session started. Check status using GET /api/research/:sessionId\",\r\n      },\r\n      202\r\n    );\r\n  } catch (error) {\r\n    console.error(\"[Research API] Error starting research:\", error);\r\n    if (error instanceof z.ZodError) {\r\n      return c.json(\r\n        { error: \"Invalid request body format\", details: error.errors },\r\n        400\r\n      );\r\n    }\r\n    return c.json(\r\n      {\r\n        error:\r\n          error instanceof Error\r\n            ? error.message\r\n            : \"Internal server error starting research\",\r\n      },\r\n      500\r\n    );\r\n  }\r\n});\r\n\r\n// GET /:sessionId - Get the status and results of a research task\r\napp.get(\"/:sessionId\", async (c) => {\r\n  try {\r\n    const sessionId = c.req.param(\"sessionId\");\r\n    // Basic validation for sessionId format (e.g., UUID)\r\n    if (\r\n      !/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(\r\n        sessionId\r\n      )\r\n    ) {\r\n      return c.json({ error: \"Invalid Session ID format\" }, { status: 400 });\r\n    }\r\n\r\n    console.log(\r\n      `[Research API] Received request to get status for session: ${sessionId}`\r\n    );\r\n\r\n    // Get the research session data including sources and findings\r\n    const sessionDetails = await getResearchSessionDetails(sessionId);\r\n\r\n    // Validate the output structure (optional)\r\n    // const validatedResponse = researchStatusResponseSchema.parse(sessionDetails);\r\n\r\n    return c.json(sessionDetails); // Return the combined session, sources, and findings\r\n  } catch (error) {\r\n    console.error(\r\n      `[Research API] Error fetching research session ${c.req.param(\"sessionId\")}:`,\r\n      error\r\n    );\r\n    // Handle specific error for not found\r\n    if (\r\n      error instanceof Error &&\r\n      error.message.startsWith(\"Research session not found\")\r\n    ) {\r\n      return c.json({ error: error.message }, { status: 404 });\r\n    }\r\n    return c.json(\r\n      {\r\n        error:\r\n          error instanceof Error\r\n            ? error.message\r\n            : \"Internal server error fetching research status\",\r\n      },\r\n      { status: 500 }\r\n    );\r\n  }\r\n});\r\n\r\n// Remove old routes from the previous implementation\r\n// app.post('/research/:sessionId/update', ...)\r\n// app.post('/research/:sessionId/sources', ...)\r\n\r\n// Export the app handle for Vercel/Next.js\r\nexport const GET = handle(app);\r\nexport const POST = handle(app);\r\n// Add PUT, DELETE etc. if needed later\r\n// export const PUT = handle(app)\r\n// export const DELETE = handle(app)\r\n","import * as origModule from 'next/dist/server/app-render/work-unit-async-storage.external.js';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport {} from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nimport * as Sentry from '@sentry/nextjs';\n\n// @ts-expect-error Because we cannot be sure if the RequestAsyncStorage module exists (it is not part of the Next.js public\n// API) we use a shim if it doesn't exist. The logic for this is in the wrapping loader.\n\nconst asyncStorageModule = { ...origModule } ;\n\nconst requestAsyncStorage =\n  'workUnitAsyncStorage' in asyncStorageModule\n    ? asyncStorageModule.workUnitAsyncStorage\n    : 'requestAsyncStorage' in asyncStorageModule\n      ? asyncStorageModule.requestAsyncStorage\n      : undefined;\n\nfunction wrapHandler(handler, method) {\n  // Running the instrumentation code during the build phase will mark any function as \"dynamic\" because we're accessing\n  // the Request object. We do not want to turn handlers dynamic so we skip instrumentation in the build phase.\n  if (process.env.NEXT_PHASE === 'phase-production-build') {\n    return handler;\n  }\n\n  if (typeof handler !== 'function') {\n    return handler;\n  }\n\n  return new Proxy(handler, {\n    apply: (originalFunction, thisArg, args) => {\n      let headers = undefined;\n\n      // We try-catch here just in case the API around `requestAsyncStorage` changes unexpectedly since it is not public API\n      try {\n        const requestAsyncStore = requestAsyncStorage?.getStore() ;\n        headers = requestAsyncStore?.headers;\n      } catch (e) {\n        /** empty */\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return Sentry.wrapRouteHandlerWithSentry(originalFunction , {\n        method,\n        parameterizedRoute: '/api/research',\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst GET = wrapHandler(serverComponentModule.GET , 'GET');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst POST = wrapHandler(serverComponentModule.POST , 'POST');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PUT = wrapHandler(serverComponentModule.PUT , 'PUT');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst PATCH = wrapHandler(serverComponentModule.PATCH , 'PATCH');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst DELETE = wrapHandler(serverComponentModule.DELETE , 'DELETE');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst HEAD = wrapHandler(serverComponentModule.HEAD , 'HEAD');\n// eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\nconst OPTIONS = wrapHandler(serverComponentModule.OPTIONS , 'OPTIONS');\n\nexport { DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT };\n","import { AppRouteRouteModule } from \"next/dist/server/route-modules/app-route/module.compiled\";\nimport { RouteKind } from \"next/dist/server/route-kind\";\nimport { patchFetch as _patchFetch } from \"next/dist/server/lib/patch-fetch\";\nimport * as userland from \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\api\\\\research\\\\route.ts\";\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: RouteKind.APP_ROUTE,\n        page: \"/api/research/route\",\n        pathname: \"/api/research\",\n        filename: \"route\",\n        bundlePath: \"app/api/research/route\"\n    },\n    resolvedPagePath: \"E:\\\\downloads\\\\Hijraah\\\\apps\\\\web\\\\src\\\\app\\\\api\\\\research\\\\route.ts\",\n    nextConfigOutput,\n    userland\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return _patchFetch({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\nexport { routeModule, workAsyncStorage, workUnitAsyncStorage, serverHooks, patchFetch,  };\n\n//# sourceMappingURL=app-route.js.map","module.exports = require(\"next/dist/server/app-render/work-unit-async-storage.external.js\");","module.exports = require(\"node:fs\");","module.exports = require(\"worker_threads\");","module.exports = require(\"zlib\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"node:worker_threads\");","module.exports = require(\"node:path\");","module.exports = require(\"node:net\");","module.exports = require(\"buffer\");","module.exports = require(\"url\");","module.exports = require(\"child_process\");","module.exports = require(\"node:readline\");","module.exports = require(\"http\");","module.exports = require(\"tty\");","module.exports = require(\"async_hooks\");","module.exports = require(\"node:inspector\");","module.exports = require(\"net\");","\"use strict\";\nif (process.env.NEXT_RUNTIME === 'edge') {\n    module.exports = require('next/dist/server/route-modules/app-route/module.js');\n} else {\n    if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n        if (process.env.NODE_ENV === 'development') {\n            module.exports = require('next/dist/compiled/next-server/app-route-experimental.runtime.dev.js');\n        } else if (process.env.TURBOPACK) {\n            module.exports = require('next/dist/compiled/next-server/app-route-turbo-experimental.runtime.prod.js');\n        } else {\n            module.exports = require('next/dist/compiled/next-server/app-route-experimental.runtime.prod.js');\n        }\n    } else {\n        if (process.env.NODE_ENV === 'development') {\n            module.exports = require('next/dist/compiled/next-server/app-route.runtime.dev.js');\n        } else if (process.env.TURBOPACK) {\n            module.exports = require('next/dist/compiled/next-server/app-route-turbo.runtime.prod.js');\n        } else {\n            module.exports = require('next/dist/compiled/next-server/app-route.runtime.prod.js');\n        }\n    }\n}\n\n//# sourceMappingURL=module.compiled.js.map","module.exports = require(\"events\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 96708;\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 97108;\nmodule.exports = webpackEmptyContext;"],"names":["firecrawl","FirecrawlApp","apiKey","process","env","FIRECRAWL_API_KEY","firecrawlMapper","mapSources","firecrawlSources","map","source","url","title","description","relevance","mapActivities","firecrawlActivities","activity","type","typeMap","firecrawlType","status","statusMap","mapActivityStatus","message","timestamp","depth","researchService","performResearch","query","maxDepth","results","deep_research","params","timeLimit","maxUrls","success","sources","data","activities","currentDepth","completedSteps","length","totalExpectedSteps","finalAnalysis","error","console","fallbackResearchImplementation","response","fetch","method","headers","body","JSON","stringify","json","supabase","createClient","SUPABASE_SERVICE_ROLE_KEY","app","Hono","use","cors","startResearchSchema","z","min","userId","optional","max","default","sourceSchema","id","uuid","session_id","nullable","metadata","created_at","findingSchema","content","createResearchSession","from","insert","user_id","max_depth","current_depth","progress","select","single","getResearchSessionDetails","sessionId","session","sessionError","eq","code","Error","sourcesError","warn","findingsError","order","ascending","findings","sessionSchema","extend","updated_at","post","c","req","validation","safeParse","details","errors","err","get","param","test","sessionDetails","startsWith","GET","handle","POST","serverComponentModule.GET","serverComponentModule.PUT","serverComponentModule.PATCH","serverComponentModule.DELETE","serverComponentModule.HEAD","serverComponentModule.OPTIONS"],"sourceRoot":""}